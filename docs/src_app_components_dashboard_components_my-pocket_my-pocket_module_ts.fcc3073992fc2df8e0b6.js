"use strict";(self.webpackChunktime_manager_app=self.webpackChunktime_manager_app||[]).push([["src_app_components_dashboard_components_my-pocket_my-pocket_module_ts"],{9252:(a,r,e)=>{e.r(r),e.d(r,{MyPocketModule:()=>i});var o=e(3786),c=e(4106),d=e(4364);var h=e(7216),g=e(8902);let n=class{constructor(s){this.taskService=s,this.taskList=[],this.doneTaskList=[],this.filteredTaskList=[],this.searchValue=""}ngOnInit(){this.taskList=this.taskService.getTaskList(),this.doneTaskList=this.taskList.filter(s=>!0===s.done&&!1===s.archived&&!1===s.deleted)}toggleTaskMenu(s){this.taskService.toggleTaskMenu(s,this.taskList)}togglePinTask(s){this.taskService.togglePinTask(s,this.taskList)}archiveTask(s){for(let t=0;t<this.doneTaskList.length;t++)this.doneTaskList[t].id===s.id&&this.doneTaskList.splice(t,1);this.taskService.archiveTask(s,this.taskList)}deleteTask(s){for(let t=0;t<this.doneTaskList.length;t++)this.doneTaskList[t].id===s.id&&this.doneTaskList.splice(t,1);this.taskService.deleteTask(s,this.taskList)}taskCompleted(s){for(let t=0;t<this.doneTaskList.length;t++)this.doneTaskList[t].id===s.id&&this.doneTaskList.splice(t,1);this.taskService.taskCompleted(s,this.taskList)}search(s){this.filteredTaskList=s?this.taskService.search(s,this.doneTaskList):[]}};n.ctorParameters=()=>[{type:g.M}],n=(0,o.gn)([(0,c.wA2)({selector:"app-my-pocket",template:'\x3c!-- Search --\x3e\r\n<div class="row justify-content-center align-items-center p-5">\r\n  <div class="col-lg-6 col-md-8 col-sm-10">\r\n    <div class="alert-primary p-2 input-search-group">\r\n      <span class="search-icon">\r\n        <img src="./assets/icons/search.svg" width="20" height="20" />\r\n      </span>\r\n      <input type="text" class="ps-2 form-search-control text-primary"\r\n             placeholder="Search Pocket Task..." [(ngModel)]="searchValue" (input)="search(searchValue)">\r\n    </div>\r\n  </div>\r\n</div>\r\n\x3c!-- Page Title --\x3e\r\n<div class="alert-success p-3 mb-4 w-100">\r\n  <img src="./assets/icons/pocket-success.svg" width="20" height="20" />\r\n  <span class="ms-2 text-success">My Pocket</span>\r\n</div>\r\n\x3c!-- Filtered Task Menu --\x3e\r\n<div *ngIf="filteredTaskList?.length && searchValue">\r\n  \x3c!-- Task List Menu --\x3e\r\n  <div class="row mx-auto justify-content-between rounded w-75 border mb-2"\r\n       [class.pinned]="task.pinned"\r\n       [ngClass]="{\'alert-success border-success\': task.done}"\r\n       *ngFor="let task of filteredTaskList">\r\n    \x3c!-- Left Menu Side --\x3e\r\n    <div class="col-auto p-3">\r\n      <div class="d-flex align-items-center">\r\n        <div class="border bg-success rounded" style="height:24px;width:24px;"></div>\r\n        <div class="ms-3"\r\n             [ngClass]="{\'text-success text-decoration-line-through\': task.done}">\r\n          {{task.taskName}}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \x3c!-- Right Menu Side --\x3e\r\n    <div class="col-auto d-flex">\r\n      \x3c!-- Boolean Results --\x3e\r\n      <div class="col-auto row me-2 align-items-center"\r\n           *ngIf="task.done">\r\n        <div class="col me-1" *ngIf="task.pinned">\r\n          <img src="./assets/icons/pin-warning.svg" width="20" height="20" />\r\n        </div>\r\n        <div class="col me-1">\r\n          <img src="./assets/icons/pocket-success.svg" width="20" height="20" />\r\n        </div>\r\n      </div>\r\n      \x3c!-- More Actions --\x3e\r\n      <div class="bg-dark col-auto row">\r\n        <div class="col-auto p-3 task-menu" (click)="toggleTaskMenu(task)"\r\n             data-bs-toggle="tooltip" data-bs-placement="top" title="More">\r\n          <img src="./assets/icons/more.svg" width="20" height="20" />\r\n        </div>\r\n        \x3c!-- Actions Menu --\x3e\r\n        <div class="col-auto" *ngIf="task.showMenu">\r\n          <div class="row">\r\n            <div class="col p-3 px-4 task-menu" (click)="togglePinTask(task)" *ngIf="!task.deleted"\r\n                 data-bs-toggle="tooltip" data-bs-placement="top" title="Pin">\r\n              <img src="{{\'./assets/icons/\' + (task.pinned ? \'pin-warning\' : \'pin\') + \'.svg\'}}"\r\n                   width="20" height="20" />\r\n            </div>\r\n            <div class="col p-3 px-4 task-menu" (click)="archiveTask(task)" *ngIf="!task.deleted"\r\n                 data-bs-toggle="tooltip" data-bs-placement="top" title="Archive">\r\n              <img src="{{\'./assets/icons/\' + (task.archived ? \'archive-primary\' : \'archive\') + \'.svg\'}}"\r\n                   width="20" height="20" />\r\n            </div>\r\n            <div class="col p-3 px-4 task-menu" (click)="deleteTask(task)"\r\n                 data-bs-toggle="tooltip" data-bs-placement="top" title="Trash">\r\n              <img src="./assets/icons/trash.svg" width="20" height="20" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\x3c!-- Filtered Error Msg --\x3e\r\n<div *ngIf="!filteredTaskList?.length && searchValue" class="py-3">\r\n  <div class="alert alert-primary alert-danger w-75 mx-auto">\r\n    There is no task with that name!!\r\n  </div>\r\n</div>\r\n\x3c!-- All Reminder Tasks --\x3e\r\n<div *ngIf="!filteredTaskList?.length && !searchValue">\r\n  \x3c!-- Task List Menu --\x3e\r\n  <div class="row mx-auto justify-content-between rounded w-75 border mb-2"\r\n       [class.pinned]="task.pinned"\r\n       [ngClass]="{\'alert-success border-success\': task.done}"\r\n       *ngFor="let task of doneTaskList">\r\n    \x3c!-- Left Menu Side --\x3e\r\n    <div class="col-auto p-3">\r\n      <div class="d-flex align-items-center">\r\n        <div class="border bg-success rounded" style="height:24px;width:24px;"\r\n             (click)="taskCompleted(task)"></div>\r\n        <div class="ms-3"\r\n             [ngClass]="{\'text-success text-decoration-line-through\': task.done}">\r\n          {{task.taskName}}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \x3c!-- Right Menu Side --\x3e\r\n    <div class="col-auto d-flex">\r\n      \x3c!-- Boolean Results --\x3e\r\n      <div class="col-auto row me-2 align-items-center"\r\n           *ngIf="task.done">\r\n        <div class="col me-1" *ngIf="task.pinned">\r\n          <img src="./assets/icons/pin-warning.svg" width="20" height="20" />\r\n        </div>\r\n        <div class="col me-1">\r\n          <img src="./assets/icons/pocket-success.svg" width="20" height="20" />\r\n        </div>\r\n      </div>\r\n      \x3c!-- More Actions --\x3e\r\n      <div class="bg-dark col-auto row">\r\n        <div class="col-auto p-3 task-menu" (click)="toggleTaskMenu(task)"\r\n             data-bs-toggle="tooltip" data-bs-placement="top" title="More">\r\n          <img src="./assets/icons/more.svg" width="20" height="20" />\r\n        </div>\r\n        \x3c!-- Actions Menu --\x3e\r\n        <div class="col-auto" *ngIf="task.showMenu">\r\n          <div class="row">\r\n            <div class="col p-3 px-4 task-menu" (click)="togglePinTask(task)" *ngIf="!task.deleted"\r\n                 data-bs-toggle="tooltip" data-bs-placement="top" title="Pin">\r\n              <img src="{{\'./assets/icons/\' + (task.pinned ? \'pin-warning\' : \'pin\') + \'.svg\'}}"\r\n                   width="20" height="20" />\r\n            </div>\r\n            <div class="col p-3 px-4 task-menu" (click)="archiveTask(task)" *ngIf="!task.deleted"\r\n                 data-bs-toggle="tooltip" data-bs-placement="top" title="Archive">\r\n              <img src="{{\'./assets/icons/\' + (task.archived ? \'archive-primary\' : \'archive\') + \'.svg\'}}"\r\n                   width="20" height="20" />\r\n            </div>\r\n            <div class="col p-3 px-4 task-menu" (click)="deleteTask(task)"\r\n                 data-bs-toggle="tooltip" data-bs-placement="top" title="Trash">\r\n              <img src="./assets/icons/trash.svg" width="20" height="20" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n',styles:[h]})],n);var k=e(3568),v=e(335);const p=[{path:"my-pocket",component:n}];let i=class{};i=(0,o.gn)([(0,c.LVF)({declarations:[n],imports:[d.ez,k.Bz.forChild(p),v.u5]})],i)},7216:a=>{a.exports=".task-menu {\n  cursor: pointer;\n}\n.task-menu:hover {\n  background-color: #457AFB33;\n}\n.pinned {\n  border-left-width: 15px !important;\n  border-left-color: orange !important;\n}"}}]);
//# sourceMappingURL=src_app_components_dashboard_components_my-pocket_my-pocket_module_ts.fcc3073992fc2df8e0b6.js.map