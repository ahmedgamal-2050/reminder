(self.webpackChunktime_manager_app=self.webpackChunktime_manager_app||[]).push([["main"],{8255:o=>{function t(r){return Promise.resolve().then(()=>{var n=new Error("Cannot find module '"+r+"'");throw n.code="MODULE_NOT_FOUND",n})}t.keys=()=>[],t.resolve=t,t.id=8255,o.exports=t},2891:(o,t,r)=>{"use strict";r.d(t,{e:()=>n});class n{constructor(){this.loggedIn=!1,this.currentUser=JSON.parse(localStorage.getItem("currentUser")),this.userList=JSON.parse(localStorage.getItem("userList"))}isAuthenticated(){return new Promise((m,c)=>{m(this.loggedIn)})}login(){localStorage.removeItem("loggedIn"),this.loggedIn=!0,localStorage.setItem("loggedIn","true")}logout(){localStorage.removeItem("loggedIn"),localStorage.removeItem("currentUser"),this.loggedIn=!1,localStorage.setItem("loggedIn","false"),alert("You are logged out")}}},6494:(o,t,r)=>{"use strict";r.d(t,{M:()=>i});var n=r(3786);var l=r(9693),m=r(4106),c=r(3568),s=r(2891);let i=class{constructor(e,g){this.authService=e,this.router=g,this.shrink=!1}ngOnInit(){this.currentUser=JSON.parse(localStorage.getItem("currentUser"))}menuShrink(){this.shrink=!this.shrink}logout(){this.currentUser={username:"",password:"",profilePic:"",fullName:"",email:""},this.authService.logout(),this.router.navigate(["/login"])}};i.ctorParameters=()=>[{type:s.e},{type:c.F0}],i=(0,n.gn)([(0,m.wA2)({selector:"app-dashboard",template:'<div class="row mx-0">\r\n  <div [ngStyle]="{\'width.px\': (!shrink? 280 : 50)}" class="mx-0 px-0 h-100vh fixed-top">\r\n    <div class="d-flex flex-column flex-shrink-0 text-white bg-dark h-100">\r\n      <div class="p-3 bg-light">\r\n        <div class="d-flex justify-content-between">\r\n          <div [ngClass]="{\'d-none\': shrink}">\r\n            <img src="./assets/logo.png" width="18" height="18" />\r\n            <span class="ps-1 text-dark">Reminders</span>\r\n          </div>\r\n          <div class="btn p-0" (click)="menuShrink()">\r\n            <img src="./assets/icons/setting.svg" width="18" height="18" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ul class="nav nav-pills flex-column mb-auto">\r\n        <li class="nav-item">\r\n          <a class="nav-link py-3 text-white" routerLink="prayer" routerLinkActive="active">\r\n            <img src="./assets/icons/prayer.svg" width="16" height="16" />\r\n            <span class="ms-2" [ngClass]="{\'d-none\': shrink}">Prayer</span>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a routerLink="home-dashboard" routerLinkActive="active" class="nav-link py-3 text-white">\r\n            <img src="./assets/icons/dashboard.svg" width="16" height="16" />\r\n            <span class="ms-2" [ngClass]="{\'d-none\': shrink}">Dashboard</span>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a class="nav-link py-3 text-white" routerLink="tasks" routerLinkActive="active">\r\n            <img src="./assets/icons/tasks.svg" width="16" height="16" />\r\n            <span class="ms-2" [ngClass]="{\'d-none\': shrink}">Tasks</span>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a routerLink="reminders" routerLinkActive="active" class="nav-link py-3 text-white">\r\n            <img src="./assets/icons/time.svg" width="16" height="16" />\r\n            <span class="ms-2" [ngClass]="{\'d-none\': shrink}">Reminders</span>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a routerLink="my-pocket" routerLinkActive="active" class="nav-link py-3 text-white">\r\n            <img src="./assets/icons/pocket.svg" width="16" height="16" />\r\n            <span class="ms-2" [ngClass]="{\'d-none\': shrink}">My Pocket</span>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a routerLink="categories" routerLinkActive="active" class="nav-link py-3 text-white">\r\n            <img src="./assets/icons/categories.svg" width="16" height="16" />\r\n            <span class="ms-2" [ngClass]="{\'d-none\': shrink}">Categories</span>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a routerLink="archive" routerLinkActive="active" class="nav-link py-3 text-white">\r\n            <img src="./assets/icons/archive.svg" width="16" height="16" />\r\n            <span class="ms-2" [ngClass]="{\'d-none\': shrink}">Archive</span>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a routerLink="trash" routerLinkActive="active" class="nav-link py-3 text-white">\r\n            <img src="./assets/icons/trash.svg" width="16" height="16" />\r\n            <span class="ms-2" [ngClass]="{\'d-none\': shrink}">Trash</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div class="mx-auto py-3 clickable" (click)="logout()" *ngIf="shrink">\r\n        <img src="./assets/icons/logout.svg" width="20" height="20" />\r\n      </div>\r\n      <div>\r\n        <a routerLink="profile" [ngClass]="shrink ? \'px-2\': \'px-3\'" routerLinkActive="bg-primary"\r\n           class="text-white text-decoration-none py-3 profile-href d-inline-block w-100">\r\n          <div class="row justify-content-between align-items-center">\r\n            <div class="col">\r\n              <span class="d-inline-block">\r\n                <img style="height:34px;width:34px;" height="34" width="34" class="img-fluid rounded-circle border"\r\n                     src="{{currentUser.profilePic ? currentUser.profilePic : \'./assets/icons/profile.svg\'}}"/>\r\n              </span>\r\n              <span class="ms-2 username-overflow" [ngClass]="{\'d-none\': shrink}">\r\n                {{ currentUser.username | titlecase }}\r\n              </span>\r\n            </div>\r\n            <div class="col-auto" (click)="logout()" *ngIf="!shrink">\r\n              <img src="./assets/icons/logout.svg" width="20" height="20" />\r\n            </div>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div [ngStyle]="{\'width.px\': (!shrink? \'280\' : \'50\')}" class="col-auto px-0">\r\n  </div>\r\n  <div class="col px-0" [ngStyle]="{\'width\': (!shrink? \'calc(100% - 280px)\' : \'calc(100% - 50px)\')}">\r\n    <div class="container-fluid">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n',styles:[l]})],i)},1944:(o,t,r)=>{"use strict";r.r(t),r.d(t,{DashboardModule:()=>u});var n=r(3786),d=r(4106),l=r(4364),m=r(3568);const c=[{path:"",loadChildren:()=>Promise.all([r.e("default-src_app_components_dashboard_shared_shared_module_ts"),r.e("src_app_components_dashboard_components_prayer_prayer_module_ts")]).then(r.bind(r,9946)).then(e=>e.PrayerModule),pathMatch:"prefix"},{path:"",loadChildren:()=>Promise.all([r.e("default-src_app_components_dashboard_shared_shared_module_ts"),r.e("src_app_components_dashboard_components_home-dashboard_home-dashboard_module_ts")]).then(r.bind(r,7464)).then(e=>e.HomeDashboardModule)},{path:"",loadChildren:()=>Promise.all([r.e("default-src_app_components_dashboard_shared_shared_module_ts"),r.e("src_app_components_dashboard_components_tasks_tasks_module_ts")]).then(r.bind(r,2997)).then(e=>e.TasksModule)},{path:"",loadChildren:()=>r.e("src_app_components_dashboard_components_categories_categories_module_ts").then(r.bind(r,1649)).then(e=>e.CategoriesModule)},{path:"",loadChildren:()=>r.e("src_app_components_dashboard_components_profile_profile_module_ts").then(r.bind(r,1712)).then(e=>e.ProfileModule)}];let s=class{};s=(0,n.gn)([(0,d.LVF)({imports:[m.Bz.forChild(c)]})],s);var i=r(6494);let u=class{};u=(0,n.gn)([(0,d.LVF)({declarations:[i.M],imports:[l.ez,s,m.Bz]})],u)},861:(o,t,r)=>{"use strict";r.r(t),r.d(t,{LoginModule:()=>v});var n=r(3786),d=r(4106),l=r(4364);var c=r(8032),s=r(335),i=r(3568),u=r(2891);let e=class{constructor(a,p,x){this.fb=a,this.router=p,this.authService=x,this.userList=[],this.loginError=!1}ngOnInit(){this.authService.userList&&(this.userList=this.authService.userList),this.loginForm=this.fb.group({username:["",[s.kI.required,s.kI.minLength(3),s.kI.pattern("(^[a-zA-Z].*)([^' ']+$)"),s.kI.maxLength(50)]],password:["",[s.kI.required,s.kI.minLength(5),s.kI.maxLength(50)]]}),this.loginForm.reset()}login(){if(this.loginError=!1,this.loginForm.dirty&&this.loginForm.valid)if(this.userList.length)for(let a=0;a<this.userList.length;a++)this.userList[a].username===this.loginForm.value.username&&this.userList[a].password===this.loginForm.value.password&&(alert(`Welcome ${this.userList[a].username}, You are logged in`),localStorage.setItem("currentUser",JSON.stringify(this.userList[a])),this.authService.login(),this.router.navigate(["/dashboard/prayer"]));else this.loginError=!0,alert("username or password are not correct, Please try again");else this.loginForm.markAsTouched,this.loginForm.invalid}get username(){return this.loginForm.get("username")}get password(){return this.loginForm.get("password")}showPassword(){$("#password").attr("type","text")}};e.ctorParameters=()=>[{type:s.qu},{type:i.F0},{type:u.e}],e=(0,n.gn)([(0,d.wA2)({selector:"app-login",template:'<div class="container pt-5">\r\n  <form [formGroup]="loginForm" (submit)="login()" novalidate class="pt-5 mt-5">\r\n    <div class="row mt-5 justify-content-center">\r\n      <h3 class="text-center mb-5">\r\n        <img src="./assets/logo.png" width="36" height="36" />\r\n        Reminders\r\n      </h3>\r\n      <div class="col-lg-6 col-md-8 col-sm-12">\r\n        <div class="alert alert-danger fs-7" *ngIf="loginError">\r\n          Username or password are not correct, Please try again!!\r\n        </div>\r\n        <div class="row">\r\n          <div class="col-12 mb-3">\r\n            <div class="row mx-0 align-items-center bg-reminder input-reminder-group"\r\n                 [ngClass]="username?.invalid && (username?.dirty || username?.touched) ? \'border border-danger\':\'\'">\r\n              <div class="col-auto px-3">\r\n                <img src="./assets/icons/user.svg" width="20" height="20" />\r\n              </div>\r\n              <div class="col px-0">\r\n                <input type="text" id="username" class="w-100 ps-2 form-reminder-control"\r\n                       placeholder="Username" formControlName="username">\r\n              </div>\r\n            </div>\r\n            <div *ngIf="username?.invalid && (username?.dirty || username?.touched)" class="text-danger">\r\n              <div *ngIf="username.errors && username.errors.required">\r\n                Username is required.\r\n              </div>\r\n              <div *ngIf="username.errors && username.errors.minlength">\r\n                Username must be at least 3 characters.\r\n              </div>\r\n              <div *ngIf="username.errors && username.errors.maxLength">\r\n                Username must be 50 characters maximum.\r\n              </div>\r\n              <div *ngIf="username.errors && username.errors.pattern">\r\n                Username must start with a letter and remove all spaces.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class="col-12 mb-3">\r\n            <div class="row mx-0 align-items-center bg-reminder input-reminder-group"\r\n                 [ngClass]="password?.invalid && (password?.dirty || password?.touched) ? \'border border-danger\':\'\'">\r\n              <div class="col-auto px-3">\r\n                <img src="./assets/icons/password.svg" width="20" height="20" />\r\n              </div>\r\n              <div class="col px-0">\r\n                <input class="w-100 ps-2 form-reminder-control" type="password" id="password"\r\n                       placeholder="Password" formControlName="password">\r\n              </div>\r\n              <div class="col-auto px-3 clickable" (click)="showPassword()">\r\n                <img src="./assets/icons/show.svg" width="20" height="20" />\r\n              </div>\r\n            </div>\r\n            <div *ngIf="password?.invalid && (password?.dirty || password?.touched)" class="text-danger">\r\n              <div *ngIf="password.errors && password.errors.required">\r\n                Password is required.\r\n              </div>\r\n              <div *ngIf="password.errors && password.errors.minlength">\r\n                Password must be at least 5 characters.\r\n              </div>\r\n              <div *ngIf="password.errors && password.errors.maxLength">\r\n                Password must be 50 characters maximum.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="mx-0 row justify-content-end ms-auto col-6">\r\n          <button type="submit" class="btn-reminder p-3">\r\n            <img src="./assets/icons/login.svg" width="20" height="20" />\r\n            <span class="ps-2">Login</span>\r\n          </button>\r\n          <a routerLink="/register" class="text-end fs-7 text-decoration-none text-reminder mt-2">\r\n            Create New Account\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n',styles:[c]})],e);const g=[{path:"",component:e}];let v=class{};v=(0,n.gn)([(0,d.LVF)({declarations:[e],imports:[l.ez,i.Bz.forChild(g),s.UX,s.u5]})],v)},120:(o,t,r)=>{"use strict";r.r(t),r.d(t,{RegisterModule:()=>v});var n=r(3786),d=r(4106),l=r(4364);var c=r(2956),s=r(335),i=r(3568),u=r(2891);let e=class{constructor(a,p,x){this.fb=a,this.router=p,this.authService=x,this.userList=[],this.userExists=!1}ngOnInit(){this.authService.userList&&(this.userList=this.authService.userList),this.userForm=this.fb.group({username:["",[s.kI.required,s.kI.minLength(3),s.kI.pattern("(^[a-zA-Z].*)([^' ']+$)"),s.kI.maxLength(50)]],password:["",[s.kI.required,s.kI.minLength(5),s.kI.maxLength(50)]]}),this.userForm.valueChanges.subscribe(a=>{if(a.username&&this.userList.length)for(let p=0;p<this.userList.length;p++)this.userList[p].username===a.username?this.userExists=!0:this.userExists=!1})}register(){this.userForm.dirty&&this.userForm.valid&&!1===this.userExists?(this.user={username:this.userForm.value.username,password:this.userForm.value.password,email:this.userForm.value.username.toLowerCase()+"@mail.com",profilePic:"",fullName:""},this.userList.push(this.user),localStorage.setItem("userList",JSON.stringify(this.userList)),this.userForm.reset(),this.router.navigate(["/login"])):(this.userForm.markAsTouched,this.userForm.invalid)}get username(){return this.userForm.get("username")}get password(){return this.userForm.get("password")}showPassword(){$("#password").attr("type","text")}};e.ctorParameters=()=>[{type:s.qu},{type:i.F0},{type:u.e}],e=(0,n.gn)([(0,d.wA2)({selector:"app-register",template:'<div class="container pt-5">\r\n  <form [formGroup]="userForm" (submit)="register()" novalidate class="pt-5 mt-5">\r\n    <div class="row mt-5 justify-content-center">\r\n      <h3 class="text-center mb-5">\r\n        <img src="./assets/logo.png" width="36" height="36"/>\r\n        Reminders\r\n      </h3>\r\n      <div class="col-lg-6 col-md-8 col-sm-12">\r\n        <div class="alert alert-danger fs-7" *ngIf="userExists">\r\n          Username already taken by another user, Please try again!!\r\n        </div>\r\n        <div class="row">\r\n          <div class="col-12 mb-3">\r\n            <div class="row mx-0 align-items-center bg-reminder input-reminder-group"\r\n                 [ngClass]="username?.invalid && (username?.dirty || username?.touched) ? \'border border-danger\':\'\'">\r\n              <div class="col-auto px-3">\r\n                <img src="./assets/icons/user.svg" width="20" height="20" />\r\n              </div>\r\n              <div class="col px-0">\r\n                <input type="text" id="username" class="w-100 ps-2 form-reminder-control"\r\n                       placeholder="Username" formControlName="username">\r\n              </div>\r\n            </div>\r\n            <div *ngIf="username?.invalid && (username?.dirty || username?.touched)" class="text-danger">\r\n              <div *ngIf="username.errors && username.errors.required">\r\n                Username is required.\r\n              </div>\r\n              <div *ngIf="username.errors && username.errors.minlength">\r\n                Username must be at least 3 characters.\r\n              </div>\r\n              <div *ngIf="username.errors && username.errors.maxLength">\r\n                Username must be 50 characters maximum.\r\n              </div>\r\n              <div *ngIf="username.errors && username.errors.pattern">\r\n                Username must start with a letter and remove all spaces.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class="col-12 mb-3">\r\n            <div class="row mx-0 align-items-center bg-reminder input-reminder-group"\r\n                 [ngClass]="password?.invalid && (password?.dirty || password?.touched) ? \'border border-danger\':\'\'">\r\n              <div class="col-auto px-3">\r\n                <img src="./assets/icons/password.svg" width="20" height="20" />\r\n              </div>\r\n              <div class="col px-0">\r\n                <input class="w-100 ps-2 form-reminder-control" type="password" id="password"\r\n                     placeholder="Password" formControlName="password">\r\n              </div>\r\n              <div class="col-auto px-3 clickable" (click)="showPassword()">\r\n                <img src="./assets/icons/show.svg" width="20" height="20" />\r\n              </div>\r\n            </div>\r\n            <div *ngIf="password?.invalid && (password?.dirty || password?.touched)" class="text-danger">\r\n              <div *ngIf="password.errors && password.errors.required">\r\n                Password is required.\r\n              </div>\r\n              <div *ngIf="password.errors && password.errors.minlength">\r\n                Password must be at least 5 characters.\r\n              </div>\r\n              <div *ngIf="password.errors && password.errors.maxLength">\r\n                Password must be 50 characters maximum.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="mx-0 row justify-content-end ms-auto col-6">\r\n          <button type="submit" class="btn-reminder p-3">\r\n            <img src="./assets/icons/register.svg" width="20" height="20" />\r\n            <span class="ps-2">Register</span>\r\n          </button>\r\n          <a routerLink="/login" class="text-end fs-7 text-decoration-none text-reminder mt-2">\r\n            Already Have An Account ?\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n',styles:[c]})],e);const g=[{path:"",component:e,pathMatch:"prefix"}];let v=class{};v=(0,n.gn)([(0,d.LVF)({declarations:[e],imports:[l.ez,i.Bz.forChild(g),s.UX,s.u5]})],v)},5918:(o,t,r)=>{"use strict";var n=r(4106),d=r(7894),l=r(3786),m=r(1570),c=r(3568),s=r(2891);let i=class{constructor(y,L){this.authService=y,this.router=L}canActivate(y,L){return this.authService.isAuthenticated().then(C=>{let k=JSON.parse(localStorage.getItem("loggedIn"));return!(!C&&!k)||(this.router.navigate(["/login"]),!1)})}};i.ctorParameters=()=>[{type:s.e},{type:c.F0}],i=(0,l.gn)([(0,n.GSi)()],i);const e=[{path:"register",loadChildren:()=>Promise.resolve().then(r.bind(r,120)).then(h=>h.RegisterModule),pathMatch:"prefix"},{path:"login",loadChildren:()=>Promise.resolve().then(r.bind(r,861)).then(h=>h.LoginModule)},{path:"dashboard",loadChildren:()=>Promise.resolve().then(r.bind(r,1944)).then(h=>h.DashboardModule),component:r(6494).M,canActivate:[i]}];let g=class{};g=(0,l.gn)([(0,n.LVF)({imports:[c.Bz.forRoot(e)],exports:[c.Bz]})],g);var f=r(3040);let a=class{constructor(){this.title="time-manager-app"}};a=(0,l.gn)([(0,n.wA2)({selector:"app-root",template:"<router-outlet></router-outlet>\r\n",styles:[f]})],a);var p=r(861),x=r(120),I=r(1944),b=r(3882);let w=class{};w=(0,l.gn)([(0,n.LVF)({declarations:[a],imports:[m.b2,g,x.RegisterModule,p.LoginModule,c.Bz,I.DashboardModule,b.JF],providers:[i,s.e],bootstrap:[a]})],w),(0,n.G48)(),(0,d.y)().bootstrapModule(w).catch(h=>console.error(h))},3040:o=>{"use strict";o.exports=""},9693:o=>{"use strict";o.exports=".nav-link {\n  border-radius: unset !important;\n}\n.nav-link:hover {\n  background-color: #ffffff55;\n}\n.nav-link.active {\n  background-color: #ffffff33;\n}\n.nav-link.active img, .nav-link.active svg {\n  transform: rotate(-20deg);\n}\n.profile-href {\n  background-color: #ffffff33;\n}\n.profile-href:hover {\n  background-color: #ffffff55;\n}\n.username-overflow {\n  width: 110px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  vertical-align: middle;\n  display: inline-block;\n}"},8032:o=>{"use strict";o.exports=""},2956:o=>{"use strict";o.exports=".vertical-middle-page {\n  margin-top: 100px;\n}"}},o=>{o.O(0,["vendor"],()=>{return n=5918,o(o.s=n);var n});o.O()}]);
//# sourceMappingURL=main.aea1f34148e1b3a087ef.js.map