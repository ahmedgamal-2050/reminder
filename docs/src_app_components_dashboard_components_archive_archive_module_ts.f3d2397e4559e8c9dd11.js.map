{"version":3,"mappings":"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","names":["t","constructor","i","this","ngOnInit","taskList","taskService","getTaskList","allArchiveTasks","filter","s","archived","deleted","length","pinnedTaskList","pinned","archivedTaskList","toggleTaskMenu","showColorMenu","hideColorMenu","changeColor","togglePinTask","id","splice","push","archiveTask","taskCompleted","deleteTask","search","filteredTaskList","openReminderModal","selectedTask","$","modal","editReminder","reminder","v","d","o","selector","template","m","path","component","n","declarations","imports","l","g","k","p"],"sources":["./src/app/components/dashboard/components/archive/archive.component.ts","./src/app/components/dashboard/components/archive/archive.component.html","./src/app/components/dashboard/components/archive/archive.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { TaskService } from '../task.service';\r\nimport { Task } from '../tasks';\r\ndeclare let $: any;\r\n\r\n@Component({\r\n  selector: 'app-archive',\r\n  templateUrl: './archive.component.html',\r\n  styleUrls: ['./archive.component.scss']\r\n})\r\nexport class ArchiveComponent implements OnInit {\r\n  public taskList: Task[] = [];\r\n  public archivedTaskList: Task[] = [];\r\n  public filteredTaskList: Task[] = [];\r\n  public pinnedTaskList: Task[] = [];\r\n  public allArchiveTasks: Task[] = [];\r\n  public searchValue: string = '';\r\n  public colorList: string[] = ['light', 'info', 'primary', 'warning', 'danger', 'success', 'secondary'];\r\n  public selectedTask!: Task;\r\n\r\n  constructor(private taskService: TaskService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.taskList = this.taskService.getTaskList();\r\n    this.allArchiveTasks = this.taskList.filter((task: Task) => {\r\n      return (task.archived === true && task.deleted === false);\r\n    })\r\n    if (this.allArchiveTasks?.length) {\r\n      this.pinnedTaskList = this.allArchiveTasks.filter((task: Task) => {\r\n        return (task.pinned === true);\r\n      })\r\n      this.archivedTaskList = this.allArchiveTasks.filter((task: Task) => {\r\n        return (task.pinned === false);\r\n      })\r\n    }\r\n  }\r\n\r\n  toggleTaskMenu(task: Task) {\r\n    this.taskService.toggleTaskMenu(task, this.taskList);\r\n  }\r\n\r\n  showColorMenu(task: Task) {\r\n    this.taskService.showColorMenu(task, this.taskList);\r\n  }\r\n\r\n  hideColorMenu(task: Task) {\r\n    this.taskService.hideColorMenu(task, this.taskList);\r\n  }\r\n\r\n  changeColor(task: Task, color: string) {\r\n    this.taskService.changeColor(task, this.taskList, color);\r\n  }\r\n\r\n  togglePinTask(task: Task) {\r\n    if (task.pinned) {\r\n      for (let i = 0; i < this.pinnedTaskList.length; i++) {\r\n        if (this.pinnedTaskList[i].id === task.id) {\r\n          this.pinnedTaskList.splice(i, 1);\r\n        }\r\n      }\r\n      this.archivedTaskList.push(task);\r\n    } else {\r\n      for (let i = 0; i < this.archivedTaskList.length; i++) {\r\n        if (this.archivedTaskList[i].id === task.id) {\r\n          this.archivedTaskList.splice(i, 1);\r\n        }\r\n      }\r\n      this.pinnedTaskList.push(task);\r\n    }\r\n    this.taskService.togglePinTask(task, this.taskList);\r\n  }\r\n\r\n  archiveTask(task: Task) {\r\n    if (task.pinned) {\r\n      for (let i = 0; i < this.pinnedTaskList.length; i++) {\r\n        if (this.pinnedTaskList[i].id === task.id) {\r\n          this.pinnedTaskList.splice(i, 1);\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < this.archivedTaskList.length; i++) {\r\n        if (this.archivedTaskList[i].id === task.id) {\r\n          this.archivedTaskList.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n    this.taskService.archiveTask(task, this.taskList);\r\n  }\r\n\r\n  taskCompleted(task: Task) {\r\n    this.taskService.taskCompleted(task, this.taskList);\r\n  }\r\n\r\n  deleteTask(task: Task) {\r\n    if (task.pinned) {\r\n      for (let i = 0; i < this.pinnedTaskList.length; i++) {\r\n        if (this.pinnedTaskList[i].id === task.id) {\r\n          this.pinnedTaskList.splice(i, 1);\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < this.archivedTaskList.length; i++) {\r\n        if (this.archivedTaskList[i].id === task.id) {\r\n          this.archivedTaskList.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n    this.taskService.deleteTask(task, this.taskList);\r\n  }\r\n\r\n  search(searchValue: string) {\r\n    if (searchValue) {\r\n      this.filteredTaskList = this.taskService.search(searchValue, this.allArchiveTasks);\r\n    } else {\r\n      this.filteredTaskList = [];\r\n    }\r\n  }\r\n\r\n  openReminderModal(task: Task) {\r\n    this.selectedTask = task\r\n    $(\"#reminderModal\").modal('show');\r\n  }\r\n\r\n  editReminder(task: Task) {\r\n    this.taskService.editReminder(task, this.taskList);\r\n    if (task.pinned) {\r\n      for (let i = 0; i < this.pinnedTaskList.length; i++) {\r\n        if (this.pinnedTaskList[i].id === task.id) {\r\n          this.pinnedTaskList[i].reminder = task.reminder;\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < this.archivedTaskList.length; i++) {\r\n        if (this.archivedTaskList[i].id === task.id) {\r\n          this.archivedTaskList[i].reminder = task.reminder;\r\n        }\r\n      }\r\n    }\r\n    $(\"#reminderModal\").modal('hide');\r\n  }\r\n}\r\n\r\n\r\n","export default \"<!-- Search -->\\r\\n<div class=\\\"row justify-content-center align-items-center p-5\\\">\\r\\n  <div class=\\\"col-lg-6 col-md-8 col-sm-10\\\">\\r\\n    <div class=\\\"alert-primary p-2 input-search-group\\\">\\r\\n      <span class=\\\"search-icon\\\">\\r\\n        <img src=\\\"../../../../../assets/icons/search.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n      </span>\\r\\n      <input type=\\\"text\\\" class=\\\"ps-2 form-search-control text-primary\\\"\\r\\n             placeholder=\\\"Search Archive Task...\\\" [(ngModel)]=\\\"searchValue\\\" (input)=\\\"search(searchValue)\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Filtered Task Menu -->\\r\\n<div *ngIf=\\\"filteredTaskList?.length && searchValue\\\">\\r\\n  <!-- Task List Menu -->\\r\\n  <div class=\\\"row mx-auto justify-content-between rounded w-75 border mb-2\\\"\\r\\n       [class.pinned]=\\\"task.pinned\\\"\\r\\n       [ngClass]=\\\"task.taskColor && !task.done ? 'alert-'+ task.taskColor + ' border-'+ task.taskColor : ''\\\"\\r\\n       [class.alert-success]=\\\"task.done\\\"\\r\\n       [class.border-success]=\\\"task.done\\\"\\r\\n       *ngFor=\\\"let task of filteredTaskList\\\">\\r\\n    <!-- Left Menu Side -->\\r\\n    <div class=\\\"col-auto p-3\\\">\\r\\n      <div class=\\\"d-flex align-items-center\\\">\\r\\n        <div class=\\\"border rounded\\\" style=\\\"height:24px;width:24px;\\\"\\r\\n             [ngClass]=\\\"(task.taskColor && !task.done) ? 'border-'+ task.taskColor : ''\\\"\\r\\n             [class.bg-success]=\\\"task.done\\\"\\r\\n             (click)=\\\"taskCompleted(task)\\\"></div>\\r\\n        <div class=\\\"ms-3\\\"\\r\\n             [class.text-decoration-line-through]=\\\"task.done\\\"\\r\\n             [class.text-success]=\\\"task.done\\\">\\r\\n          {{task.taskName}}\\r\\n        </div>\\r\\n        <div class=\\\"d-flex\\\" *ngIf=\\\"!task.colorMenu\\\">\\r\\n          <div class=\\\"ms-3 border rounded-pill py-1-5 px-2 fs-8 alert-primary border-primary\\\"\\r\\n               *ngIf=\\\"task.category\\\">\\r\\n            {{task.category}}\\r\\n          </div>\\r\\n          <div class=\\\"ms-3 border rounded-pill py-1-5 px-2 fs-8 alert-primary border-primary\\\"\\r\\n               *ngIf=\\\"task.reminder\\\">\\r\\n            <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"14\\\" height=\\\"14\\\" />\\r\\n            <span class=\\\"ms-2\\\">{{ task.dateStatus? task.dateStatus :  task.reminder | date:'dd MMM' }}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- Right Menu Side -->\\r\\n    <div class=\\\"col-auto d-flex\\\">\\r\\n      <!-- Boolean Results -->\\r\\n      <div class=\\\"col-auto row me-2 align-items-center\\\"\\r\\n           *ngIf=\\\"(task.done || task.pinned || task.archived) && !task.showMenu && !task.colorMenu\\\">\\r\\n        <div class=\\\"col me-1\\\" *ngIf=\\\"task.done\\\">\\r\\n          <img src=\\\"../../../../../assets/icons/pocket-success.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col me-1\\\" *ngIf=\\\"task.pinned\\\">\\r\\n          <img src=\\\"../../../../../assets/icons/pin-warning.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col me-1\\\" *ngIf=\\\"task.archived\\\">\\r\\n          <img src=\\\"../../../../../assets/icons/archive-primary.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- More Actions -->\\r\\n      <div class=\\\"bg-dark col-auto row\\\">\\r\\n        <div class=\\\"col-auto p-3 task-menu\\\" (click)=\\\"toggleTaskMenu(task)\\\"\\r\\n             data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"More\\\">\\r\\n          <img src=\\\"../../../../../assets/icons/more.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n        <!-- Actions Menu -->\\r\\n        <div class=\\\"col-auto\\\" *ngIf=\\\"task.showMenu && !task.colorMenu\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Reminder\\\"\\r\\n                 (click)=\\\"openReminderModal(task)\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"togglePinTask(task)\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Pin\\\">\\r\\n              <img src=\\\"{{'../../../../../assets/icons/' + (task.pinned ? 'pin-warning' : 'pin') + '.svg'}}\\\"\\r\\n                   width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"showColorMenu(task)\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Color\\\"\\r\\n                 *ngIf=\\\"!task.done\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/color.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"archiveTask(task)\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Archive\\\">\\r\\n              <img src=\\\"{{'../../../../../assets/icons/' + (task.archived ? 'archive-primary' : 'archive') + '.svg'}}\\\"\\r\\n                   width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"deleteTask(task)\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Trash\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/trash.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Color Menu -->\\r\\n        <div class=\\\"col-auto bg-light\\\" *ngIf=\\\"!task.showMenu && task.colorMenu\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"hideColorMenu(task)\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Color\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/color-dark.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\"\\r\\n                 (click)=\\\"changeColor(task, color)\\\"\\r\\n                 *ngFor=\\\"let color of colorList\\\">\\r\\n              <div class=\\\"color-circle\\\" [ngClass]=\\\"color ? 'bg-'+ color : ''\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Filtered Error Msg -->\\r\\n<div *ngIf=\\\"!filteredTaskList?.length && searchValue\\\" class=\\\"py-3\\\">\\r\\n  <div class=\\\"alert alert-primary alert-primary w-75 mx-auto\\\">\\r\\n    There is no task with that name!!\\r\\n  </div>\\r\\n</div>\\r\\n<!-- All Archive Tasks -->\\r\\n<div *ngIf=\\\"!filteredTaskList?.length && !searchValue\\\">\\r\\n  <!-- Pinned Task List -->\\r\\n  <div class=\\\"mb-5\\\" *ngIf=\\\"pinnedTaskList?.length\\\">\\r\\n    <div class=\\\"alert-warning p-3 mb-4 w-100\\\">\\r\\n      <img src=\\\"../../../../../assets/icons/pin-warning.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n      <span class=\\\"ms-2 text-warning\\\">Pin</span>\\r\\n    </div>\\r\\n    <!-- Task List Menu -->\\r\\n    <div class=\\\"row mx-auto justify-content-between rounded w-75 border mb-2\\\"\\r\\n         [ngClass]=\\\"{'pinned alert-warning border-warning' : task.pinned}\\\"\\r\\n         *ngFor=\\\"let task of pinnedTaskList\\\">\\r\\n      <!-- Left Menu Side -->\\r\\n      <div class=\\\"col-auto p-3\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n          <div class=\\\"border border-warning rounded\\\" style=\\\"height:24px;width:24px;\\\"></div>\\r\\n          <div class=\\\"ms-3\\\">\\r\\n            {{task.taskName}}\\r\\n          </div>\\r\\n          <div class=\\\"ms-4 alert-primary border border-primary rounded-pill py-1 px-2 fs-7\\\" *ngIf=\\\"task.category\\\">\\r\\n            {{task.category}}\\r\\n          </div>\\r\\n          <div class=\\\"ms-2 alert-primary border border-primary rounded-pill py-1 px-2 fs-7\\\" *ngIf=\\\"task.reminder\\\">\\r\\n            <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"16\\\" height=\\\"16\\\" />\\r\\n            <span class=\\\"ms-2\\\">{{ task.dateStatus? task.dateStatus :  task.reminder | date:'dd MMM' }}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- Right Menu Side -->\\r\\n      <div class=\\\"col-auto d-flex\\\">\\r\\n        <!-- Boolean Results -->\\r\\n        <div class=\\\"col-auto row me-2 align-items-center\\\"\\r\\n             *ngIf=\\\"task.pinned && !task.showMenu\\\">\\r\\n          <div class=\\\"col me-1\\\" *ngIf=\\\"task.pinned\\\">\\r\\n            <img src=\\\"../../../../../assets/icons/pin-warning.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"col me-1\\\" *ngIf=\\\"task.archived\\\">\\r\\n            <img src=\\\"../../../../../assets/icons/archive-primary.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- More Actions -->\\r\\n        <div class=\\\"bg-dark col-auto row\\\">\\r\\n          <div class=\\\"col-auto p-3 task-menu\\\" (click)=\\\"toggleTaskMenu(task)\\\">\\r\\n            <img src=\\\"../../../../../assets/icons/more.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\" *ngIf=\\\"task.showMenu\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col p-3 px-4\\\">\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\" title=\\\"Reminder\\\"\\r\\n                   (click)=\\\"openReminderModal(task)\\\">\\r\\n                <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"togglePinTask(task)\\\">\\r\\n                <img src=\\\"../../../../../assets/icons/pin.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"archiveTask(task)\\\"\\r\\n                   data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Archive\\\">\\r\\n                <img src=\\\"{{'../../../../../assets/icons/' + (task.archived ? 'archive-primary' : 'archive') + '.svg'}}\\\"\\r\\n                     width=\\\"20\\\" height=\\\"20\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Archive Task List -->\\r\\n  <div *ngIf=\\\"archivedTaskList?.length\\\">\\r\\n    <!-- Archive Title -->\\r\\n    <div class=\\\"alert-primary p-3 mb-4 w-100\\\">\\r\\n      <img src=\\\"../../../../../assets/icons/archive-primary.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n      <span class=\\\"ms-2 text-primary\\\">Archive</span>\\r\\n    </div>\\r\\n    <div class=\\\"row mx-auto justify-content-between rounded w-75 border mb-2\\\"\\r\\n         [class.pinned]=\\\"task.pinned\\\"\\r\\n         [ngClass]=\\\"task.taskColor && !task.done ? 'alert-'+ task.taskColor + ' border-'+ task.taskColor : ''\\\"\\r\\n         [class.alert-success]=\\\"task.done\\\"\\r\\n         [class.border-success]=\\\"task.done\\\"\\r\\n         *ngFor=\\\"let task of archivedTaskList\\\">\\r\\n      <!-- Left Menu Side -->\\r\\n      <div class=\\\"col-auto p-3\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n          <div class=\\\"border rounded\\\" style=\\\"height:24px;width:24px;\\\"\\r\\n               [ngClass]=\\\"(task.taskColor && !task.done) ? 'border-'+ task.taskColor : ''\\\"\\r\\n               [class.bg-success]=\\\"task.done\\\"\\r\\n               (click)=\\\"taskCompleted(task)\\\"></div>\\r\\n          <div class=\\\"ms-3\\\"\\r\\n               [class.text-decoration-line-through]=\\\"task.done\\\"\\r\\n               [class.text-success]=\\\"task.done\\\">\\r\\n            {{task.taskName}}\\r\\n          </div>\\r\\n          <div class=\\\"d-flex\\\" *ngIf=\\\"!task.colorMenu\\\">\\r\\n            <div class=\\\"ms-3 border rounded-pill py-1-5 px-2 fs-8 alert-primary border-primary\\\"\\r\\n                 *ngIf=\\\"task.category\\\">\\r\\n              {{task.category}}\\r\\n            </div>\\r\\n            <div class=\\\"ms-3 border rounded-pill py-1-5 px-2 fs-8 alert-primary border-primary\\\"\\r\\n                 *ngIf=\\\"task.reminder\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"14\\\" height=\\\"14\\\" />\\r\\n              <span class=\\\"ms-2\\\">{{ task.dateStatus? task.dateStatus :  task.reminder | date:'dd MMM' }}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- Right Menu Side -->\\r\\n      <div class=\\\"col-auto d-flex\\\">\\r\\n        <!-- Boolean Results -->\\r\\n        <div class=\\\"col-auto row me-2 align-items-center\\\"\\r\\n             *ngIf=\\\"(task.done || task.pinned || task.archived) && !task.showMenu && !task.colorMenu\\\">\\r\\n          <div class=\\\"col me-1\\\" *ngIf=\\\"task.done\\\">\\r\\n            <img src=\\\"../../../../../assets/icons/pocket-success.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"col me-1\\\" *ngIf=\\\"task.pinned\\\">\\r\\n            <img src=\\\"../../../../../assets/icons/pin-warning.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"col me-1\\\" *ngIf=\\\"task.archived\\\">\\r\\n            <img src=\\\"../../../../../assets/icons/archive-primary.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- More Actions -->\\r\\n        <div class=\\\"bg-dark col-auto row\\\">\\r\\n          <div class=\\\"col-auto p-3 task-menu\\\" (click)=\\\"toggleTaskMenu(task)\\\"\\r\\n               data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"More\\\">\\r\\n            <img src=\\\"../../../../../assets/icons/more.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n          </div>\\r\\n          <!-- Actions Menu -->\\r\\n          <div class=\\\"col-auto\\\" *ngIf=\\\"task.showMenu && !task.colorMenu\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\"\\r\\n                   data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Reminder\\\"\\r\\n                   (click)=\\\"openReminderModal(task)\\\">\\r\\n                <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"togglePinTask(task)\\\"\\r\\n                   data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Pin\\\">\\r\\n                <img src=\\\"{{'../../../../../assets/icons/' + (task.pinned ? 'pin-warning' : 'pin') + '.svg'}}\\\"\\r\\n                     width=\\\"20\\\" height=\\\"20\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"showColorMenu(task)\\\"\\r\\n                   data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Color\\\"\\r\\n                   *ngIf=\\\"!task.done\\\">\\r\\n                <img src=\\\"../../../../../assets/icons/color.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"archiveTask(task)\\\"\\r\\n                   data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Archive\\\">\\r\\n                <img src=\\\"{{'../../../../../assets/icons/' + (task.archived ? 'archive-primary' : 'archive') + '.svg'}}\\\"\\r\\n                     width=\\\"20\\\" height=\\\"20\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"deleteTask(task)\\\"\\r\\n                   data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Trash\\\">\\r\\n                <img src=\\\"../../../../../assets/icons/trash.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Color Menu -->\\r\\n          <div class=\\\"col-auto bg-light\\\" *ngIf=\\\"!task.showMenu && task.colorMenu\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"hideColorMenu(task)\\\"\\r\\n                   data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Color\\\">\\r\\n                <img src=\\\"../../../../../assets/icons/color-dark.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\"\\r\\n                   (click)=\\\"changeColor(task, color)\\\"\\r\\n                   *ngFor=\\\"let color of colorList\\\">\\r\\n                <div class=\\\"color-circle\\\" [ngClass]=\\\"color ? 'bg-'+ color : ''\\\"></div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Edit Reminder Task Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"reminderModal\\\" tabindex=\\\"-1\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <app-edit-reminder [selectedTask]=\\\"selectedTask\\\"\\r\\n                         (edit)=\\\"editReminder($event)\\\">\\r\\n      </app-edit-reminder>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ArchiveComponent } from './archive.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\nconst archiveRoutes: Routes = [\r\n  {\r\n    path: 'archive',\r\n    component: ArchiveComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ArchiveComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(archiveRoutes),\r\n    FormsModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class ArchiveModule { }\r\n"],"sourceRoot":"webpack:///","file":"src_app_components_dashboard_components_archive_archive_module_ts.f3d2397e4559e8c9dd11.js"}