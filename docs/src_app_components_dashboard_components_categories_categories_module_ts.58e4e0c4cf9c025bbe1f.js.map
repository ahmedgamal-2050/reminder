{"version":3,"mappings":"oRASaA,EAAmB,MAM9BC,cALOC,cAAmB,GACnBA,kBAAyB,GACzBA,0BAAiC,GACjCA,iBAAsB,GAI7BC,WACE,IAAIC,EAAuB,GACvBC,aAAaC,QAAQ,gBACvBJ,KAAKK,aAAeC,KAAKC,MAAMJ,aAAaC,QAAQ,kBAC1CD,aAAaC,QAAQ,iBAAmBD,aAAaC,QAAQ,cACvEJ,KAAKQ,SAAWF,KAAKC,MAAMJ,aAAaC,QAAQ,aAChDF,EAAaF,KAAKQ,SAASC,IAAKC,GACvBA,EAAKC,UAEdX,KAAKK,aAAe,IAAI,IAAIO,IAAIV,KAIpCW,OAAOX,GAEHF,KAAKc,qBADHZ,EAC0BF,KAAKK,aAAaU,OAAQL,GAC5CA,EAASM,cAAcC,QAAQf,EAAYc,gBAA2B,GAGpD,GAIhCE,oBACEC,EAAE,kBAAkBC,MAAM,QAG5BC,eAAenB,GACbF,KAAKK,aAAaiB,KAAKpB,GACvBC,aAAaoB,WAAW,gBACxBpB,aAAaqB,QAAQ,eAAgBlB,KAAKmB,UAAUzB,KAAKK,eACzDc,EAAE,kBAAkBC,MAAM,QAC1BM,MAAM,GAAGxB,mCAGXyB,eAAezB,GACb,QAASQ,EAAI,EAAGA,EAAIV,KAAKK,aAAauB,OAAQlB,IACxCV,KAAKK,aAAaK,KAAOR,GAC3BF,KAAKK,aAAawB,OAAOnB,EAAG,GAGhC,QAASA,EAAI,EAAGA,EAAIV,KAAKQ,SAASoB,OAAQlB,IACpCV,KAAKQ,SAASE,GAAGC,WAAaT,IAChCF,KAAKQ,SAASE,GAAGC,SAAW,IAGhCR,aAAaoB,WAAW,gBACxBpB,aAAaqB,QAAQ,eAAgBlB,KAAKmB,UAAUzB,KAAKK,eACzDF,aAAaoB,WAAW,YACxBpB,aAAaqB,QAAQ,WAAYlB,KAAKmB,UAAUzB,KAAKQ,WACrDkB,MAAM,GAAGxB,6DA1DAJ,KAAmBgC,UAL/BC,OAAU,CACTC,SAAU,iBACVC,SCNa,2jHDSFnC,4CEDAoC,EAAsB,MAMjCnC,YAAoBG,aAJbF,kBAAuB,GAEbA,iBAAc,IAAI+B,MAInC9B,WACED,KAAKmC,aAAenC,KAAKoC,GAAGC,MAAM,CAChC1B,SAAU,CACR,GACA,CACE2B,eAAqB,GACrBA,aAAmB,4BACnBA,eAAqB,QAM7BC,iBACMvC,KAAKmC,aAAaK,OAASxC,KAAKmC,aAAaM,OAC/CzC,KAAK0C,aAAe1C,KAAKmC,aAAaQ,MAAMhC,SAC5CX,KAAK4C,YAAYC,KAAK7C,KAAK0C,cAC3B1C,KAAKmC,aAAaW,UAElB9C,KAAKmC,aAAaY,gBAClB/C,KAAKmC,aAAaa,8BAKpB,OAAOhD,KAAKmC,aAAac,IAAI,0CAxCxBX,6CAUNP,2BACAA,SAJUG,KAAsBJ,UALlCC,OAAU,CACTC,SAAU,qBACVC,SCLa,2pDDQFC,GEDb,MAAMgB,EAA2B,CAC/B,CACEC,KAAM,aACNC,UAAWtD,QAgBFuD,EAAgB,QAAhBA,KAAgBvB,UAZ5BC,OAAS,CACRuB,aAAc,CACZxD,EACAoC,GAEFqB,QAAS,CACPC,KACAC,cAAsBP,GACtBZ,KACAA,SAGSe","names":["o","constructor","this","ngOnInit","t","localStorage","getItem","categoryList","JSON","parse","taskList","map","e","category","Set","search","filteredCategoryList","filter","toLowerCase","indexOf","openCategoryModal","$","modal","createCategory","push","removeItem","setItem","stringify","alert","deleteCategory","length","splice","c","a","selector","template","i","categoryForm","fb","group","s","submitCategory","dirty","valid","categoryName","value","addCategory","emit","reset","markAsTouched","markAsDirty","get","C","path","component","l","declarations","imports","y","v"],"sources":["./src/app/components/dashboard/components/categories/categories.component.ts","./src/app/components/dashboard/components/categories/categories.component.html","./src/app/components/dashboard/components/categories/components/add-categories/add-categories.component.ts","./src/app/components/dashboard/components/categories/components/add-categories/add-categories.component.html","./src/app/components/dashboard/components/categories/categories.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Task } from '../tasks';\r\ndeclare let $: any;\r\n\r\n@Component({\r\n  selector: 'app-categories',\r\n  templateUrl: './categories.component.html',\r\n  styleUrls: ['./categories.component.scss']\r\n})\r\nexport class CategoriesComponent implements OnInit {\r\n  public taskList: Task[] = [];\r\n  public categoryList: string[] = [];\r\n  public filteredCategoryList: string[] = [];\r\n  public searchValue: string = '';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    let categories: string[] = [];\r\n    if (localStorage.getItem('categoryList')) {\r\n      this.categoryList = JSON.parse(localStorage.getItem('categoryList') as string);\r\n    } else if (!localStorage.getItem('categoryList') && localStorage.getItem('taskList')) {\r\n      this.taskList = JSON.parse(localStorage.getItem('taskList') as string);\r\n      categories = this.taskList.map((task: Task) => {\r\n        return task.category as string;\r\n      });\r\n      this.categoryList = [...new Set(categories)];\r\n    }\r\n  }\r\n\r\n  search(searchValue: string) {\r\n    if (searchValue) {\r\n      this.filteredCategoryList = this.categoryList.filter((category: string) => {\r\n        return (category.toLowerCase().indexOf(searchValue.toLowerCase() as string) > -1);\r\n      })\r\n    } else {\r\n      this.filteredCategoryList = [];\r\n    }\r\n  }\r\n\r\n  openCategoryModal() {\r\n    $(\"#categoryModal\").modal('show');\r\n  }\r\n\r\n  createCategory(category: string) {\r\n    this.categoryList.push(category);\r\n    localStorage.removeItem('categoryList');\r\n    localStorage.setItem('categoryList', JSON.stringify(this.categoryList));\r\n    $(\"#categoryModal\").modal('hide');\r\n    alert(`${category} category created successfully`);\r\n  }\r\n\r\n  deleteCategory(category: string) {\r\n    for (let i = 0; i < this.categoryList.length; i++) {\r\n      if (this.categoryList[i] === category) {\r\n        this.categoryList.splice(i, 1);\r\n      }\r\n    }\r\n    for (let i = 0; i < this.taskList.length; i++) {\r\n      if (this.taskList[i].category === category) {\r\n        this.taskList[i].category = '';\r\n      }\r\n    }\r\n    localStorage.removeItem('categoryList');\r\n    localStorage.setItem('categoryList', JSON.stringify(this.categoryList));\r\n    localStorage.removeItem('taskList');\r\n    localStorage.setItem('taskList', JSON.stringify(this.taskList));\r\n    alert(`${category} category deleted successfully`);\r\n  }\r\n}\r\n","export default \"<!-- Search -->\\r\\n<div class=\\\"row justify-content-center align-items-center p-5\\\">\\r\\n  <div class=\\\"col-lg-6 col-md-8 col-sm-10\\\">\\r\\n    <div class=\\\"alert-primary p-2 input-search-group\\\">\\r\\n      <span class=\\\"search-icon\\\">\\r\\n        <img src=\\\"./assets/icons/search.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n      </span>\\r\\n      <input type=\\\"text\\\" class=\\\"ps-2 form-search-control text-primary\\\"\\r\\n             placeholder=\\\"Search Category Name...\\\" [(ngModel)]=\\\"searchValue\\\"\\r\\n             (input)=\\\"search(searchValue)\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Page Content -->\\r\\n<!-- Create New Category -->\\r\\n<div class=\\\"row mx-auto justify-content-between rounded w-75 create-category mb-2 clickable\\\"\\r\\n     (click)=\\\"openCategoryModal()\\\">\\r\\n  <div class=\\\"col p-3\\\">\\r\\n    <img src=\\\"./assets/icons/tag-primary.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n    <span class=\\\"ps-3\\\">Create New Category</span>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Filtered Category List -->\\r\\n<div *ngIf=\\\"filteredCategoryList?.length && searchValue\\\">\\r\\n  <div class=\\\"row mx-auto justify-content-between rounded w-75 border alert-primary mb-2\\\"\\r\\n       *ngFor=\\\"let category of filteredCategoryList\\\">\\r\\n    <!-- Left Menu Side -->\\r\\n    <div class=\\\"col-auto p-3\\\">\\r\\n      <div class=\\\"d-flex align-items-center\\\">\\r\\n        <img src=\\\"./assets/icons/tag-primary.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        <div class=\\\"ms-3 text-primary\\\">\\r\\n          {{category}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- Right Menu Side -->\\r\\n    <div class=\\\"col-auto d-flex\\\">\\r\\n      <!-- More Actions -->\\r\\n      <div class=\\\"col-auto row\\\">\\r\\n        <div class=\\\"col-auto p-3 clickable\\\" (click)=\\\"deleteCategory(category)\\\"\\r\\n             data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Remove\\\">\\r\\n          <img src=\\\"./assets/icons/minus.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Filtered Category Error Msg -->\\r\\n<div *ngIf=\\\"!filteredCategoryList?.length && searchValue\\\" class=\\\"py-3\\\">\\r\\n  <div class=\\\"alert alert-danger w-75 mx-auto\\\">\\r\\n    There is no category with that name!!\\r\\n  </div>\\r\\n</div>\\r\\n<!-- All Category List -->\\r\\n<div *ngIf=\\\"!filteredCategoryList?.length && !searchValue\\\">\\r\\n  <div class=\\\"row mx-auto justify-content-between rounded w-75 border alert-primary mb-2\\\"\\r\\n       *ngFor=\\\"let category of categoryList\\\">\\r\\n    <!-- Left Menu Side -->\\r\\n    <div class=\\\"col-auto p-3\\\">\\r\\n      <div class=\\\"d-flex align-items-center\\\">\\r\\n        <img src=\\\"./assets/icons/tag-primary.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        <div class=\\\"ms-3 text-primary\\\">\\r\\n          {{category}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- Right Menu Side -->\\r\\n    <div class=\\\"col-auto d-flex\\\">\\r\\n      <!-- More Actions -->\\r\\n      <div class=\\\"col-auto row\\\">\\r\\n        <div class=\\\"col-auto p-3 clickable\\\" (click)=\\\"deleteCategory(category)\\\"\\r\\n             data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Remove\\\">\\r\\n          <img src=\\\"./assets/icons/minus.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Create Category Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"categoryModal\\\" tabindex=\\\"-1\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <app-add-categories (addCategory)=\\\"createCategory($event)\\\"\\r\\n                          [categoryList]=\\\"categoryList\\\">\\r\\n      </app-add-categories>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-categories',\r\n  templateUrl: './add-categories.component.html',\r\n  styleUrls: ['./add-categories.component.scss']\r\n})\r\nexport class AddCategoriesComponent implements OnInit {\r\n  public categoryForm!: FormGroup;\r\n  public categoryName: string = '';\r\n  @Input() public categoryList?: string[];\r\n  @Output() public addCategory = new EventEmitter<string>();\r\n\r\n  constructor(private fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.categoryForm = this.fb.group({\r\n      category: [\r\n        '',\r\n        [\r\n          Validators.minLength(3),\r\n          Validators.pattern('^[أ-يa-zA-Z].*'),\r\n          Validators.maxLength(50)\r\n        ]\r\n      ]\r\n    });\r\n  }\r\n\r\n  submitCategory() {\r\n    if (this.categoryForm.dirty && this.categoryForm.valid) {\r\n      this.categoryName = this.categoryForm.value.category;\r\n      this.addCategory.emit(this.categoryName);\r\n      this.categoryForm.reset();\r\n    } else {\r\n      this.categoryForm.markAsTouched();\r\n      this.categoryForm.markAsDirty();\r\n    }\r\n  }\r\n\r\n  get category() {\r\n    return this.categoryForm.get('username');\r\n  }\r\n}\r\n","export default \"<form [formGroup]=\\\"categoryForm\\\" (submit)=\\\"submitCategory()\\\" novalidate>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h5 class=\\\"modal-title\\\" id=\\\"staticBackdropLabel\\\">Create Category</h5>\\r\\n    <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-12 mb-3\\\">\\r\\n        <label class=\\\"mb-1\\\">Category <span class=\\\"text-danger\\\">*</span></label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n               placeholder=\\\"Category\\\" formControlName=\\\"category\\\"\\r\\n               [ngClass]=\\\"category?.invalid && (category?.dirty || category?.touched) ? 'border-danger':''\\\"\\r\\n               list=\\\"#categoryDataList\\\">\\r\\n        <datalist id=\\\"categoryDataList\\\">\\r\\n          <option *ngFor=\\\"let categoryTagName of categoryList\\\" [value]=\\\"categoryTagName\\\">\\r\\n        </datalist>\\r\\n        <div *ngIf=\\\"category?.invalid && (category?.dirty || category?.touched)\\\" class=\\\"text-danger\\\">\\r\\n          <div *ngIf=\\\"category.errors?.minlength\\\">\\r\\n            Category must be at least 3 characters.\\r\\n          </div>\\r\\n          <div *ngIf=\\\"category.errors?.pattern\\\">\\r\\n            Category must start with a character.\\r\\n          </div>\\r\\n          <div *ngIf=\\\"category.errors?.maxLength\\\">\\r\\n            Category must be 50 characters maximum.\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-bs-dismiss=\\\"modal\\\">Close</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\r\\n  </div>\\r\\n</form>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CategoriesComponent } from './categories.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AddCategoriesComponent } from './components/add-categories/add-categories.component';\r\n\r\nconst categoriesRoutes: Routes = [\r\n  {\r\n    path: 'categories',\r\n    component: CategoriesComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CategoriesComponent,\r\n    AddCategoriesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(categoriesRoutes),\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class CategoriesModule { }\r\n"],"sourceRoot":"webpack:///","file":"src_app_components_dashboard_components_categories_categories_module_ts.58e4e0c4cf9c025bbe1f.js"}