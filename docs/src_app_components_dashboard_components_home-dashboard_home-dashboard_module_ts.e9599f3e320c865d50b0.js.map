{"version":3,"mappings":"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","names":["e","constructor","s","this","ngOnInit","localStorage","getItem","todayPrayers","JSON","parse","taskList","taskService","getTaskList","todayTasks","filter","dateStatus","deleted","archived","tasksNo","length","getReminderNo","getPocketsNo","getArchiveNo","remindersList","r","reminder","remindersNo","pocketsTasks","done","pocketsNo","archiveList","archiveNo","toggleTaskMenu","taskCompleted","togglePinTask","archiveTask","id","splice","deleteTask","search","filteredTaskList","onChangePrayerStatus","removeItem","name","status","setItem","stringify","openReminderModal","selectedTask","$","modal","editReminder","g","d","o","selector","template","k","path","component","n","declarations","imports","c","v","m","p"],"sources":["./src/app/components/dashboard/components/home-dashboard/home-dashboard.component.ts","./src/app/components/dashboard/components/home-dashboard/home-dashboard.component.html","./src/app/components/dashboard/components/home-dashboard/home-dashboard.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Prayer } from '../prayer/prayer';\r\nimport { TaskService } from '../task.service';\r\nimport { Task } from '../tasks';\r\ndeclare let $: any;\r\n\r\n@Component({\r\n  selector: 'app-home-dashboard',\r\n  templateUrl: './home-dashboard.component.html',\r\n  styleUrls: ['./home-dashboard.component.scss']\r\n})\r\nexport class HomeDashboardComponent implements OnInit {\r\n  public taskList: Task[] = [];\r\n  public todayTasks: Task[] = [];\r\n  public filteredTaskList: Task[] = [];\r\n  public searchValue: string = '';\r\n  public colorList: string[] = ['light', 'info', 'primary', 'warning', 'danger', 'success', 'secondary'];\r\n  public remindersList: Task[] = [];\r\n  public pocketsTasks: Task[] = [];\r\n  public archiveList: Task[] = [];\r\n  public remindersNo: number = 0;\r\n  public pocketsNo: number = 0;\r\n  public tasksNo: number = 0;\r\n  public archiveNo: number = 0;\r\n  public todayPrayers: Prayer[] = [];\r\n  public selectedTask!: Task;\r\n\r\n  constructor(private taskService: TaskService) { }\r\n\r\n  ngOnInit(): void {\r\n    if (localStorage.getItem('todayPrayers')) {\r\n      this.todayPrayers = JSON.parse(localStorage.getItem('todayPrayers') as string);\r\n    }\r\n    this.taskList = this.taskService.getTaskList();\r\n    this.todayTasks = this.taskList.filter((task: Task) => {\r\n      return (task.dateStatus === 'today' && task.deleted === false && task.archived === false);\r\n    });\r\n    this.tasksNo = this.taskList.length;\r\n    this.getReminderNo(this.taskList);\r\n    this.getPocketsNo(this.taskList);\r\n    this.getArchiveNo(this.taskList);\r\n  }\r\n\r\n  getReminderNo(taskList: Task[]) {\r\n    this.remindersList = taskList.filter((task: Task) => {\r\n      return (task.reminder);\r\n    });\r\n    this.remindersNo = this.remindersList.length;\r\n  }\r\n\r\n  getPocketsNo(taskList: Task[]) {\r\n    this.pocketsTasks = this.taskList.filter((task: Task) => {\r\n      return (task.done === true);\r\n    });\r\n    this.pocketsNo = this.pocketsTasks.length;\r\n  }\r\n\r\n  getArchiveNo(taskList: Task[]) {\r\n    this.archiveList = this.taskList.filter((task: Task) => {\r\n      return (task.archived === true);\r\n    });\r\n    this.archiveNo = this.archiveList.length;\r\n  }\r\n\r\n  toggleTaskMenu(task: Task) {\r\n    this.taskService.toggleTaskMenu(task, this.taskList);\r\n  }\r\n\r\n  taskCompleted(task: Task) {\r\n    this.taskService.taskCompleted(task, this.taskList);\r\n  }\r\n\r\n  togglePinTask(task: Task) {\r\n    this.taskService.togglePinTask(task, this.taskList);\r\n  }\r\n\r\n  archiveTask(task: Task) {\r\n    for (let i = 0; i < this.todayTasks.length; i++) {\r\n      if (this.todayTasks[i].id === task.id) {\r\n        this.todayTasks.splice(i, 1);\r\n      }\r\n    }\r\n    this.taskService.archiveTask(task, this.taskList);\r\n  }\r\n\r\n  deleteTask(task: Task) {\r\n    for (let i = 0; i < this.todayTasks.length; i++) {\r\n      if (this.todayTasks[i].id === task.id) {\r\n        this.todayTasks.splice(i, 1);\r\n      }\r\n    }\r\n    this.taskService.deleteTask(task, this.taskList);\r\n  }\r\n\r\n  search(searchValue: string) {\r\n    if (searchValue) {\r\n      this.filteredTaskList = this.taskService.search(searchValue, this.todayTasks);\r\n    } else {\r\n      this.filteredTaskList = [];\r\n    }\r\n  }\r\n\r\n  onChangePrayerStatus(prayer: Prayer) {\r\n    localStorage.removeItem('todayPrayers');\r\n    for (let i = 0; i < this.todayPrayers.length; i++) {\r\n      if (this.todayPrayers[i].name === prayer.name) {\r\n        switch (prayer.status) {\r\n          case 'done':\r\n            this.todayPrayers[i].status = 'missed';\r\n            break;\r\n          case 'time':\r\n            this.todayPrayers[i].status = 'done';\r\n            break;\r\n          case 'missed':\r\n            this.todayPrayers[i].status = 'done';\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    localStorage.setItem('todayPrayers', JSON.stringify(this.todayPrayers));\r\n  }\r\n\r\n  openReminderModal(task: Task) {\r\n    this.selectedTask = task\r\n    $(\"#reminderModal\").modal('show');\r\n  }\r\n\r\n  editReminder(task: Task) {\r\n    for (let i = 0; i < this.todayTasks.length; i++) {\r\n      if (this.todayTasks[i].id === task.id && task.reminder) {\r\n        this.todayTasks.splice(i, 1);\r\n      }\r\n    }\r\n    this.taskService.editReminder(task, this.taskList);\r\n    $(\"#reminderModal\").modal('hide');\r\n  }\r\n\r\n}\r\n","export default \"<!-- Search -->\\r\\n<div class=\\\"row justify-content-center align-items-center p-5\\\">\\r\\n  <div class=\\\"col-lg-6 col-md-8 col-sm-10\\\">\\r\\n    <div class=\\\"alert-primary p-2 input-search-group\\\">\\r\\n      <span class=\\\"search-icon\\\">\\r\\n        <img src=\\\"./assets/icons/search.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n      </span>\\r\\n      <input type=\\\"text\\\" class=\\\"ps-2 form-search-control text-primary\\\"\\r\\n             placeholder=\\\"Search Task...\\\" [(ngModel)]=\\\"searchValue\\\" (input)=\\\"search(searchValue)\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Task Title -->\\r\\n<div class=\\\"bg-light p-3 mb-4 w-100\\\">\\r\\n  <img src=\\\"./assets/icons/time.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n  <span class=\\\"ms-2\\\">Today</span>\\r\\n</div>\\r\\n<!-- Filtered Task Menu -->\\r\\n<div *ngIf=\\\"filteredTaskList?.length && searchValue\\\" class=\\\"row justify-content-center mb-4\\\">\\r\\n  <div class=\\\"col-lg-11\\\">\\r\\n    <div class=\\\"row mx-auto justify-content-between rounded border mb-2\\\"\\r\\n         [class.pinned]=\\\"task.pinned\\\"\\r\\n         [class.alert-primary]=\\\"!task.done && !task.pinned\\\"\\r\\n         [class.border-primary]=\\\"!task.done && !task.pinned\\\"\\r\\n         [class.alert-warning]=\\\"!task.done && task.pinned\\\"\\r\\n         [class.border-warning]=\\\"!task.done && task.pinned\\\"\\r\\n         [class.alert-success]=\\\"task.done\\\"\\r\\n         [class.border-success]=\\\"task.done\\\"\\r\\n         *ngFor=\\\"let task of filteredTaskList\\\">\\r\\n      <!-- Left Menu Side -->\\r\\n      <div class=\\\"col-auto p-3\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n          <div class=\\\"border rounded clickable\\\"\\r\\n               style=\\\"height:24px;width:24px;\\\"\\r\\n               [class.border-primary]=\\\"!task.done && !task.pinned\\\"\\r\\n               [class.border-warning]=\\\"!task.done && task.pinned\\\"\\r\\n               [class.bg-success]=\\\"task.done\\\"\\r\\n               (click)=\\\"taskCompleted(task)\\\"></div>\\r\\n          <div class=\\\"ms-3\\\"\\r\\n               [class.text-decoration-line-through]=\\\"task.done\\\">\\r\\n            {{task.taskName}}\\r\\n          </div>\\r\\n          <div class=\\\"d-flex\\\" *ngIf=\\\"!task.colorMenu\\\">\\r\\n            <div class=\\\"ms-3 border rounded-pill py-1-5 px-2 fs-8\\\" *ngIf=\\\"task.category\\\"\\r\\n                 [ngClass]=\\\"task.deleted ?'alert-danger border-danger' : 'alert-primary border-primary'\\\">\\r\\n              {{task.category}}\\r\\n            </div>\\r\\n            <div class=\\\"ms-3 border rounded-pill py-1-5 px-2 fs-8\\\"\\r\\n                 *ngIf=\\\"task.reminder && !task.done\\\"\\r\\n                 [ngClass]=\\\"task.deleted ?'alert-danger border-danger' : 'alert-primary border-primary'\\\">\\r\\n              <img src=\\\"./assets/icons/time.svg\\\" width=\\\"14\\\" height=\\\"14\\\" />\\r\\n              <span class=\\\"ms-2\\\">{{ task.dateStatus? task.dateStatus :  task.reminder | date:'dd MMM' }}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- Right Menu Side -->\\r\\n      <div class=\\\"col-auto d-flex\\\">\\r\\n        <!-- Boolean Results -->\\r\\n        <div class=\\\"col-auto row me-2 align-items-center\\\"\\r\\n             *ngIf=\\\"(task.done || task.pinned || task.archived) && !task.showMenu && !task.colorMenu\\\">\\r\\n          <div class=\\\"col me-1\\\" *ngIf=\\\"task.done\\\">\\r\\n            <img src=\\\"./assets/icons/pocket-success.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"col me-1\\\" *ngIf=\\\"task.pinned\\\">\\r\\n            <img src=\\\"./assets/icons/pin-warning.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"col me-1\\\" *ngIf=\\\"task.archived\\\">\\r\\n            <img src=\\\"./assets/icons/archive-primary.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- More Actions -->\\r\\n        <div class=\\\"bg-dark col-auto row\\\">\\r\\n          <div class=\\\"col-auto p-3 task-menu\\\" (click)=\\\"toggleTaskMenu(task)\\\"\\r\\n               data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"More\\\">\\r\\n            <img src=\\\"./assets/icons/more.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n          </div>\\r\\n          <!-- Actions Menu -->\\r\\n          <div class=\\\"col-auto\\\" *ngIf=\\\"task.showMenu\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\"\\r\\n                   data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Reminder\\\"\\r\\n                   (click)=\\\"openReminderModal(task)\\\">\\r\\n                <img src=\\\"./assets/icons/time.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"togglePinTask(task)\\\"\\r\\n                   data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Pin\\\">\\r\\n                <img src=\\\"{{'./assets/icons/' + (task.pinned ? 'pin-warning' : 'pin') + '.svg'}}\\\"\\r\\n                     width=\\\"20\\\" height=\\\"20\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"archiveTask(task)\\\"\\r\\n                   data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Archive\\\">\\r\\n                <img src=\\\"{{'./assets/icons/' + (task.archived ? 'archive-primary' : 'archive') + '.svg'}}\\\"\\r\\n                     width=\\\"20\\\" height=\\\"20\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"deleteTask(task)\\\"\\r\\n                   data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Trash\\\">\\r\\n                <img src=\\\"./assets/icons/trash.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Filtered Error Msg -->\\r\\n<div *ngIf=\\\"!filteredTaskList?.length && searchValue\\\" class=\\\"py-3 mb-4\\\">\\r\\n  <div class=\\\"alert alert-primary alert-danger mx-auto\\\">\\r\\n    There is no task with that name!!\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Today Task List -->\\r\\n<div *ngIf=\\\"!filteredTaskList?.length && !searchValue\\\" class=\\\"row justify-content-center mb-4\\\">\\r\\n  <div class=\\\"col-lg-11\\\">\\r\\n    <div class=\\\"row mx-auto justify-content-between rounded border mb-2\\\"\\r\\n         [class.pinned]=\\\"task.pinned\\\"\\r\\n         [class.alert-primary]=\\\"!task.done && !task.pinned\\\"\\r\\n         [class.border-primary]=\\\"!task.done && !task.pinned\\\"\\r\\n         [class.alert-warning]=\\\"!task.done && task.pinned\\\"\\r\\n         [class.border-warning]=\\\"!task.done && task.pinned\\\"\\r\\n         [class.alert-success]=\\\"task.done\\\"\\r\\n         [class.border-success]=\\\"task.done\\\"\\r\\n         *ngFor=\\\"let task of todayTasks\\\">\\r\\n      <!-- Left Menu Side -->\\r\\n      <div class=\\\"col-auto p-3\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n          <div class=\\\"border rounded clickable\\\"\\r\\n               style=\\\"height:24px;width:24px;\\\"\\r\\n               [class.border-primary]=\\\"!task.done && !task.pinned\\\"\\r\\n               [class.border-warning]=\\\"!task.done && task.pinned\\\"\\r\\n               [class.bg-success]=\\\"task.done\\\"\\r\\n               (click)=\\\"taskCompleted(task)\\\"></div>\\r\\n          <div class=\\\"ms-3\\\"\\r\\n               [class.text-decoration-line-through]=\\\"task.done\\\">\\r\\n            {{task.taskName}}\\r\\n          </div>\\r\\n          <div class=\\\"d-flex\\\" *ngIf=\\\"!task.colorMenu\\\">\\r\\n            <div class=\\\"ms-3 border rounded-pill py-1-5 px-2 fs-8\\\" *ngIf=\\\"task.category\\\"\\r\\n                 [ngClass]=\\\"task.deleted ?'alert-danger border-danger' : 'alert-primary border-primary'\\\">\\r\\n              {{task.category}}\\r\\n            </div>\\r\\n            <div class=\\\"ms-3 border rounded-pill py-1-5 px-2 fs-8\\\"\\r\\n                 *ngIf=\\\"task.reminder && !task.done\\\"\\r\\n                 [ngClass]=\\\"task.deleted ?'alert-danger border-danger' : 'alert-primary border-primary'\\\">\\r\\n              <img src=\\\"./assets/icons/time.svg\\\" width=\\\"14\\\" height=\\\"14\\\" />\\r\\n              <span class=\\\"ms-2\\\">{{ task.dateStatus? task.dateStatus :  task.reminder | date:'dd MMM' }}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- Right Menu Side -->\\r\\n      <div class=\\\"col-auto d-flex\\\">\\r\\n        <!-- Boolean Results -->\\r\\n        <div class=\\\"col-auto row me-2 align-items-center\\\"\\r\\n             *ngIf=\\\"(task.done || task.pinned || task.archived) && !task.showMenu && !task.colorMenu\\\">\\r\\n          <div class=\\\"col me-1\\\" *ngIf=\\\"task.done\\\">\\r\\n            <img src=\\\"./assets/icons/pocket-success.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"col me-1\\\" *ngIf=\\\"task.pinned\\\">\\r\\n            <img src=\\\"./assets/icons/pin-warning.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"col me-1\\\" *ngIf=\\\"task.archived\\\">\\r\\n            <img src=\\\"./assets/icons/archive-primary.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- More Actions -->\\r\\n        <div class=\\\"bg-dark col-auto row\\\">\\r\\n          <div class=\\\"col-auto p-3 task-menu\\\" (click)=\\\"toggleTaskMenu(task)\\\"\\r\\n               data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"More\\\">\\r\\n            <img src=\\\"./assets/icons/more.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n          </div>\\r\\n          <!-- Actions Menu -->\\r\\n          <div class=\\\"col-auto\\\" *ngIf=\\\"task.showMenu\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\"\\r\\n                   data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Reminder\\\"\\r\\n                   (click)=\\\"openReminderModal(task)\\\">\\r\\n                <img src=\\\"./assets/icons/time.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"togglePinTask(task)\\\"\\r\\n                   data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Pin\\\">\\r\\n                <img src=\\\"{{'./assets/icons/' + (task.pinned ? 'pin-warning' : 'pin') + '.svg'}}\\\"\\r\\n                     width=\\\"20\\\" height=\\\"20\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"archiveTask(task)\\\"\\r\\n                   data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Archive\\\">\\r\\n                <img src=\\\"{{'./assets/icons/' + (task.archived ? 'archive-primary' : 'archive') + '.svg'}}\\\"\\r\\n                     width=\\\"20\\\" height=\\\"20\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"deleteTask(task)\\\"\\r\\n                   data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Trash\\\">\\r\\n                <img src=\\\"./assets/icons/trash.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row justify-content-center mb-2\\\">\\r\\n  <div class=\\\"col-lg-11\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n      <!-- Numbers -->\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-6 mb-3\\\">\\r\\n            <div class=\\\"alert-warning py-5\\\">\\r\\n              <div class=\\\"d-flex justify-content-center align-items-end mb-3\\\">\\r\\n                <img src=\\\"./assets/icons/time.svg\\\" width=\\\"40\\\" height=\\\"40\\\" />\\r\\n                <h5 class=\\\"text-warning mb-0 ms-1\\\">{{remindersNo}}</h5>\\r\\n              </div>\\r\\n              <div class=\\\"text-warning text-center\\\">Reminders</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-6 mb-3\\\">\\r\\n            <div class=\\\"alert-success py-5\\\">\\r\\n              <div class=\\\"d-flex justify-content-center align-items-end mb-3\\\">\\r\\n                <img src=\\\"./assets/icons/pocket-success.svg\\\" width=\\\"40\\\" height=\\\"40\\\" />\\r\\n                <h5 class=\\\"text-success mb-0 ms-1\\\">{{pocketsNo}}</h5>\\r\\n              </div>\\r\\n              <div class=\\\"text-success text-center\\\">Pocket</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-6 mb-3\\\">\\r\\n            <div class=\\\"alert-dark py-5\\\">\\r\\n              <div class=\\\"d-flex justify-content-center align-items-end mb-3\\\">\\r\\n                <img src=\\\"./assets/icons/tasks.svg\\\" width=\\\"40\\\" height=\\\"40\\\" />\\r\\n                <h5 class=\\\"text-dark mb-0 ms-1\\\">{{tasksNo}}</h5>\\r\\n              </div>\\r\\n              <div class=\\\"text-dark text-center\\\">Task</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-6 mb-3\\\">\\r\\n            <div class=\\\"alert-primary py-5\\\">\\r\\n              <div class=\\\"d-flex justify-content-center align-items-end mb-3\\\">\\r\\n                <img src=\\\"./assets/icons/archive.svg\\\" width=\\\"40\\\" height=\\\"40\\\" />\\r\\n                <h5 class=\\\"text-primary mb-0 ms-1\\\">{{archiveNo}}</h5>\\r\\n              </div>\\r\\n              <div class=\\\"text-primary text-center\\\">Archive</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- Prayers -->\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <div class=\\\"prayer-dashboard\\\">\\r\\n          <div class=\\\"d-flex flex-row\\\" *ngIf=\\\"todayPrayers\\\">\\r\\n            <div class=\\\"col mx-2 rounded-pill-top mb-3 px-5 text-center\\\"\\r\\n                 *ngFor=\\\"let prayer of todayPrayers\\\"\\r\\n                 [ngClass]=\\\"prayer.background\\\">\\r\\n              <div class=\\\"py-5\\\">\\r\\n                <div style=\\\"height:100px;width:100px\\\" class=\\\"mx-auto\\\">\\r\\n                  <span *ngIf=\\\"prayer.status === 'time' || prayer.status === 'done'\\\">\\r\\n                    <img src=\\\"{{'./assets/icons/'+ prayer.icon +'.svg'}}\\\" width=\\\"100\\\" height=\\\"100\\\" />\\r\\n                  </span>\\r\\n                </div>\\r\\n                <h4 class=\\\"mt-5\\\">{{ prayer.name }}</h4>\\r\\n                <div class=\\\"pt-3\\\">{{ prayer.timeString }}</div>\\r\\n                <div class=\\\"pt-3 mx-auto\\\" style=\\\"height:32px;width:100px;\\\">\\r\\n                  <div *ngIf=\\\"prayer.status === 'done'\\\">\\r\\n                    <span class=\\\"alert-success rounded-pill py-1 px-2 clickable\\\" (click)=\\\"onChangePrayerStatus(prayer)\\\">\\r\\n                      <img src=\\\"./assets/icons/done.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n                      <span class=\\\"ms-2\\\">Done</span>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"prayer.status === 'time'\\\">\\r\\n                    <span class=\\\"alert-primary rounded-pill py-1 px-2 clickable\\\" (click)=\\\"onChangePrayerStatus(prayer)\\\">\\r\\n                      <img src=\\\"./assets/icons/time.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n                      <span class=\\\"ms-2\\\">Time</span>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"prayer.status === 'missed'\\\">\\r\\n                    <span class=\\\"alert-danger rounded-pill py-1 px-2 clickable\\\" (click)=\\\"onChangePrayerStatus(prayer)\\\">\\r\\n                      <img src=\\\"./assets/icons/miss.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n                      <span class=\\\"ms-2\\\">Miss</span>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Edit Reminder Task Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"reminderModal\\\" tabindex=\\\"-1\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <app-edit-reminder [selectedTask]=\\\"selectedTask\\\"\\r\\n                         (edit)=\\\"editReminder($event)\\\">\\r\\n      </app-edit-reminder>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HomeDashboardComponent } from './home-dashboard.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\nconst homeRoutes: Routes = [\r\n  {\r\n    path: 'home-dashboard',\r\n    component: HomeDashboardComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomeDashboardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(homeRoutes),\r\n    FormsModule,\r\n    SharedModule,\r\n  ]\r\n})\r\nexport class HomeDashboardModule { }\r\n"],"sourceRoot":"webpack:///","file":"src_app_components_dashboard_components_home-dashboard_home-dashboard_module_ts.e9599f3e320c865d50b0.js"}