{"version":3,"mappings":"6SAWaA,EAAkB,MAa7BC,YAAoBC,sBAZbC,cAAmB,GACnBA,sBAA2B,GAC3BA,oBAAyB,GACzBA,gBAAqB,GACrBA,eAAoB,GACpBA,iBAAsB,GACtBA,WAAgBC,SAASC,IAAO,IAAIC,MAAQC,OAAO,aACnDJ,sBAA2B,GAC3BA,iBAAsB,GACtBA,2BAAgC,GAKvCK,WACEL,KAAKM,SAAWN,KAAKO,YAAYC,cACjCR,KAAKS,yBAGPA,iCACE,IAAIC,EACJV,KAAKW,sBAAwBX,KAAKM,SAASM,OAAQC,GACzCA,EAAKC,WAA0B,IAAdD,EAAKE,OAAoC,IAAlBF,EAAKG,WAAuC,IAAjBH,EAAKI,UAEpD,QAA9BlB,EAAIC,KAAKW,6BAAqB,eAAEO,UAC9BlB,KAAKmB,eAAiBnB,KAAKW,sBAAsBC,OAAQC,IAC/B,IAAhBA,EAAKO,QAEfpB,KAAKqB,iBAAmBrB,KAAKW,sBAAsBC,OAAQC,IACjC,IAAhBA,EAAKO,UAGQ,QAAzBE,EAAItB,KAAKqB,wBAAgB,eAAEH,UACzBlB,KAAKuB,UAAYvB,KAAKqB,iBAAiBT,OAAQC,IAC7CH,EAAeT,SAASC,IAAOW,EAAKC,SAAU,cAAcV,OAAO,aAC3DM,EAAeV,KAAKwB,QAE9BxB,KAAKyB,WAAazB,KAAKqB,iBAAiBT,OAAQC,GAClB,UAApBA,EAAKa,YAEf1B,KAAK2B,YAAc3B,KAAKqB,iBAAiBT,OAAQC,IAC/CH,EAAeT,SAASC,IAAOW,EAAKC,SAAU,cAAcV,OAAO,aAC3DM,EAAeV,KAAKwB,SAKlCI,cAAc7B,GACZ,IAAIuB,EAAuBrB,SAASC,IAAOH,EAAKe,SAAU,cAAcV,OAAO,aAC/E,GAAIL,EAAKqB,OACP,QAASV,EAAI,EAAGA,EAAIV,KAAKmB,eAAeD,OAAQR,IAC1CV,KAAKmB,eAAeT,GAAGmB,KAAO9B,EAAK8B,IACrC7B,KAAKmB,eAAeW,OAAOpB,EAAG,WAGzBY,EAAetB,KAAKwB,MAC7B,QAASd,EAAI,EAAGA,EAAIV,KAAKuB,UAAUL,OAAQR,IACrCV,KAAKuB,UAAUb,GAAGmB,KAAO9B,EAAK8B,IAChC7B,KAAKuB,UAAUO,OAAOpB,EAAG,WAGpBY,IAAiBtB,KAAKwB,MAC/B,QAASd,EAAI,EAAGA,EAAIV,KAAKyB,WAAWP,OAAQR,IACtCV,KAAKyB,WAAWf,GAAGmB,KAAO9B,EAAK8B,IACjC7B,KAAKyB,WAAWK,OAAOpB,EAAG,WAGrBY,EAAetB,KAAKwB,MAC7B,QAASd,EAAI,EAAGA,EAAIV,KAAK2B,YAAYT,OAAQR,IACvCV,KAAK2B,YAAYjB,GAAGmB,KAAO9B,EAAK8B,IAClC7B,KAAK2B,YAAYG,OAAOpB,EAAG,GAIjCV,KAAKO,YAAYqB,cAAc7B,EAAMC,KAAKM,UAG5CyB,eAAehC,GACbC,KAAKO,YAAYwB,eAAehC,EAAMC,KAAKM,UAG7C0B,cAAcjC,GACZ,IAAIuB,EAAuBrB,SAASC,IAAOH,EAAKe,SAAU,cAAcV,OAAO,aAC/E,GAAIL,EAAKqB,OAAQ,CACf,QAASV,EAAI,EAAGA,EAAIV,KAAKmB,eAAeD,OAAQR,IAC1CV,KAAKmB,eAAeT,GAAGmB,KAAO9B,EAAK8B,IACrC7B,KAAKmB,eAAeW,OAAOpB,EAAG,GAG9BY,EAAetB,KAAKwB,MACtBxB,KAAKuB,UAAUU,KAAKlC,GACfuB,IAAqBtB,KAAKwB,MAC/BxB,KAAKyB,WAAWQ,KAAKlC,GACZuB,EAAetB,KAAKwB,OAC7BxB,KAAK2B,YAAYM,KAAKlC,OAEnB,CACL,GAAIuB,EAAetB,KAAKwB,MACtB,QAASd,EAAI,EAAGA,EAAIV,KAAKuB,UAAUL,OAAQR,IACrCV,KAAKuB,UAAUb,GAAGmB,KAAO9B,EAAK8B,IAChC7B,KAAKuB,UAAUO,OAAOpB,EAAG,WAGpBY,IAAiBtB,KAAKwB,MAC/B,QAASd,EAAI,EAAGA,EAAIV,KAAKyB,WAAWP,OAAQR,IACtCV,KAAKyB,WAAWf,GAAGmB,KAAO9B,EAAK8B,IACjC7B,KAAKyB,WAAWK,OAAOpB,EAAG,WAGrBY,EAAetB,KAAKwB,MAC7B,QAASd,EAAI,EAAGA,EAAIV,KAAK2B,YAAYT,OAAQR,IACvCV,KAAK2B,YAAYjB,GAAGmB,KAAO9B,EAAK8B,IAClC7B,KAAK2B,YAAYG,OAAOpB,EAAG,GAIjCV,KAAKmB,eAAec,KAAKlC,GAE3BC,KAAKO,YAAYyB,cAAcjC,EAAMC,KAAKM,UAG5C4B,YAAYnC,GACV,IAAIuB,EAAuBrB,SAASC,IAAOH,EAAKe,SAAU,cAAcV,OAAO,aAC/E,GAAIL,EAAKqB,OACP,QAASV,EAAI,EAAGA,EAAIV,KAAKmB,eAAeD,OAAQR,IAC1CV,KAAKmB,eAAeT,GAAGmB,KAAO9B,EAAK8B,IACrC7B,KAAKmB,eAAeW,OAAOpB,EAAG,WAI9BY,EAAetB,KAAKwB,MACtB,QAASd,EAAI,EAAGA,EAAIV,KAAKuB,UAAUL,OAAQR,IACrCV,KAAKuB,UAAUb,GAAGmB,KAAO9B,EAAK8B,IAChC7B,KAAKuB,UAAUO,OAAOpB,EAAG,WAGpBY,IAAiBtB,KAAKwB,MAC/B,QAASd,EAAI,EAAGA,EAAIV,KAAKyB,WAAWP,OAAQR,IACtCV,KAAKyB,WAAWf,GAAGmB,KAAO9B,EAAK8B,IACjC7B,KAAKyB,WAAWK,OAAOpB,EAAG,WAGrBY,EAAetB,KAAKwB,MAC7B,QAASd,EAAI,EAAGA,EAAIV,KAAK2B,YAAYT,OAAQR,IACvCV,KAAK2B,YAAYjB,GAAGmB,KAAO9B,EAAK8B,IAClC7B,KAAK2B,YAAYG,OAAOpB,EAAG,GAKnCV,KAAKO,YAAY2B,YAAYnC,EAAMC,KAAKM,UAG1C6B,WAAWpC,GACT,IAAIuB,EAAuBrB,SAASC,IAAOH,EAAKe,SAAU,cAAcV,OAAO,aAC/E,GAAIL,EAAKqB,OACP,QAASV,EAAI,EAAGA,EAAIV,KAAKmB,eAAeD,OAAQR,IAC1CV,KAAKmB,eAAeT,GAAGmB,KAAO9B,EAAK8B,IACrC7B,KAAKmB,eAAeW,OAAOpB,EAAG,WAI9BY,EAAetB,KAAKwB,MACtB,QAASd,EAAI,EAAGA,EAAIV,KAAKuB,UAAUL,OAAQR,IACrCV,KAAKuB,UAAUb,GAAGmB,KAAO9B,EAAK8B,IAChC7B,KAAKuB,UAAUO,OAAOpB,EAAG,WAGpBY,IAAiBtB,KAAKwB,MAC/B,QAASd,EAAI,EAAGA,EAAIV,KAAKyB,WAAWP,OAAQR,IACtCV,KAAKyB,WAAWf,GAAGmB,KAAO9B,EAAK8B,IACjC7B,KAAKyB,WAAWK,OAAOpB,EAAG,WAGrBY,EAAetB,KAAKwB,MAC7B,QAASd,EAAI,EAAGA,EAAIV,KAAK2B,YAAYT,OAAQR,IACvCV,KAAK2B,YAAYjB,GAAGmB,KAAO9B,EAAK8B,IAClC7B,KAAK2B,YAAYG,OAAOpB,EAAG,GAKnCV,KAAKO,YAAY4B,WAAWpC,EAAMC,KAAKM,UAGzC8B,iBAAiBrC,IAIjBsC,OAAOtC,GAEHC,KAAKsC,iBADHvC,EACsBC,KAAKO,YAAY8B,OAAOtC,EAAaC,KAAKW,uBAE1C,GAI5B4B,kBAAkBxC,GAChBC,KAAKwC,aAAezC,EACpB0C,EAAE,kBAAkBC,MAAM,QAG5BC,aAAa5C,GACX,IAAIuB,EAAuBrB,SAASC,IAAOH,EAAKe,SAAU,cAAcV,OAAO,aAC3EM,EAA0B,EAE9B,GADAV,KAAKM,SAAWN,KAAKO,YAAYC,cAC7BT,EAAKqB,OACP,QAASP,EAAI,EAAGA,EAAIb,KAAKmB,eAAeD,OAAQL,IAC1Cb,KAAKmB,eAAeN,GAAGgB,KAAO9B,EAAK8B,IAAM7B,KAAKmB,eAAeN,GAAGC,WAAaf,EAAKe,WACpFd,KAAKmB,eAAeN,GAAGC,SAAWf,EAAKe,cAGtC,CACL,QAASD,EAAI,EAAGA,EAAIb,KAAKM,SAASY,OAAQL,IACxC,GAAIb,KAAKM,SAASO,GAAGgB,KAAO9B,EAAK8B,GAE/B,GADAnB,EAAkBT,SAASC,IAAOF,KAAKM,SAASO,GAAGC,SAAU,cAAcV,OAAO,aAC9EM,EAAkBV,KAAKwB,MACzB,QAASoB,EAAI,EAAGA,EAAI5C,KAAKuB,UAAUL,OAAQ0B,IACrC5C,KAAKuB,UAAUqB,GAAGf,KAAO9B,EAAK8B,IAChC7B,KAAKuB,UAAUO,OAAOc,EAAG,WAGpBlC,IAAoBV,KAAKwB,MAClC,QAASoB,EAAI,EAAGA,EAAI5C,KAAKyB,WAAWP,OAAQ0B,IACtC5C,KAAKyB,WAAWmB,GAAGf,KAAO9B,EAAK8B,IACjC7B,KAAKyB,WAAWK,OAAOc,EAAG,WAGrBlC,EAAkBV,KAAKwB,MAChC,QAASoB,EAAI,EAAGA,EAAI5C,KAAK2B,YAAYT,OAAQ0B,IACvC5C,KAAK2B,YAAYiB,GAAGf,KAAO9B,EAAK8B,IAClC7B,KAAK2B,YAAYG,OAAOc,EAAG,GAMjCtB,EAAetB,KAAKwB,MACtBxB,KAAKuB,UAAUU,KAAKlC,GACfuB,IAAqBtB,KAAKwB,MAC/BxB,KAAKyB,WAAWQ,KAAKlC,GACZuB,EAAetB,KAAKwB,OAC7BxB,KAAK2B,YAAYM,KAAKlC,GAG1BC,KAAKO,YAAYoC,aAAa5C,EAAMC,KAAKM,UACzCmC,EAAE,kBAAkBC,MAAM,sCAhQrBG,MASIhD,KAAkBiD,UAL9BC,OAAU,CACTC,SAAU,gBACVC,SCRa,6neDWFpD,mCEJb,MAAMqD,EAA0B,CAC9B,CACEC,KAAM,YACNC,UAAWvD,QAeFwD,EAAe,QAAfA,KAAeP,UAX3BC,OAAS,CACRO,aAAc,CACZzD,GAEF0D,QAAS,CACPC,KACAC,cAAsBP,GACtBQ,KACAC,QAGSN","names":["d","constructor","i","this","parseInt","a","Date","format","ngOnInit","taskList","taskService","getTaskList","getAllReminderTaskList","s","filteredReminderTasks","filter","t","reminder","done","archived","deleted","length","pinnedTaskList","pinned","reminderTaskList","e","pastTasks","today","todayTasks","dateStatus","futureTasks","taskCompleted","id","splice","toggleTaskMenu","togglePinTask","push","archiveTask","deleteTask","onReminderChange","search","filteredTaskList","openReminderModal","selectedTask","$","modal","editReminder","r","f","h","p","selector","template","M","path","component","l","declarations","imports","m","u","y","T"],"sources":["./src/app/components/dashboard/components/reminders/reminders.component.ts","./src/app/components/dashboard/components/reminders/reminders.component.html","./src/app/components/dashboard/components/reminders/reminders.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport moment from 'moment';\r\nimport { TaskService } from '../task.service';\r\nimport { Task } from '../tasks';\r\ndeclare let $: any;\r\n\r\n@Component({\r\n  selector: 'app-reminders',\r\n  templateUrl: './reminders.component.html',\r\n  styleUrls: ['./reminders.component.scss']\r\n})\r\nexport class RemindersComponent implements OnInit {\r\n  public taskList: Task[] = [];\r\n  public reminderTaskList: Task[] = [];\r\n  public pinnedTaskList: Task[] = [];\r\n  public todayTasks: Task[] = [];\r\n  public pastTasks: Task[] = [];\r\n  public futureTasks: Task[] = [];\r\n  public today: number = parseInt(moment(new Date()).format(\"yyyyMMDD\"));\r\n  public filteredTaskList: Task[] = [];\r\n  public searchValue: string = '';\r\n  public filteredReminderTasks: Task[] = [];\r\n  public selectedTask!: Task;\r\n\r\n  constructor(private taskService: TaskService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.taskList = this.taskService.getTaskList();\r\n    this.getAllReminderTaskList();\r\n  }\r\n\r\n  getAllReminderTaskList() {\r\n    let reminderDate: number;\r\n    this.filteredReminderTasks = this.taskList.filter((task: Task) => {\r\n      return (task.reminder && task.done === false && task.archived === false && task.deleted === false);\r\n    })\r\n    if (this.filteredReminderTasks?.length) {\r\n      this.pinnedTaskList = this.filteredReminderTasks.filter((task: Task) => {\r\n        return (task.pinned === true);\r\n      })\r\n      this.reminderTaskList = this.filteredReminderTasks.filter((task: Task) => {\r\n        return (task.pinned === false);\r\n      })\r\n    }\r\n    if (this.reminderTaskList?.length) {\r\n      this.pastTasks = this.reminderTaskList.filter((task: Task) => {\r\n        reminderDate = parseInt(moment(task.reminder, \"yyyy-MM-DD\").format(\"yyyyMMDD\"));\r\n        return (reminderDate < this.today);\r\n      });\r\n      this.todayTasks = this.reminderTaskList.filter((task: Task) => {\r\n        return (task.dateStatus === 'today');\r\n      });\r\n      this.futureTasks = this.reminderTaskList.filter((task: Task) => {\r\n        reminderDate = parseInt(moment(task.reminder, \"yyyy-MM-DD\").format(\"yyyyMMDD\"));\r\n        return (reminderDate > this.today);\r\n      });\r\n    }\r\n  }\r\n\r\n  taskCompleted(task: Task) {\r\n    let reminderDate: number = parseInt(moment(task.reminder, \"yyyy-MM-DD\").format(\"yyyyMMDD\"));\r\n    if (task.pinned) {\r\n      for (let i = 0; i < this.pinnedTaskList.length; i++) {\r\n        if (this.pinnedTaskList[i].id === task.id) {\r\n          this.pinnedTaskList.splice(i, 1);\r\n        }\r\n      }\r\n    } else if (reminderDate < this.today) {\r\n      for (let i = 0; i < this.pastTasks.length; i++) {\r\n        if (this.pastTasks[i].id === task.id) {\r\n          this.pastTasks.splice(i, 1);\r\n        }\r\n      }\r\n    } else if (reminderDate === this.today) {\r\n      for (let i = 0; i < this.todayTasks.length; i++) {\r\n        if (this.todayTasks[i].id === task.id) {\r\n          this.todayTasks.splice(i, 1);\r\n        }\r\n      }\r\n    } else if (reminderDate > this.today) {\r\n      for (let i = 0; i < this.futureTasks.length; i++) {\r\n        if (this.futureTasks[i].id === task.id) {\r\n          this.futureTasks.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n    this.taskService.taskCompleted(task, this.taskList);\r\n  }\r\n\r\n  toggleTaskMenu(task: Task) {\r\n    this.taskService.toggleTaskMenu(task, this.taskList);\r\n  }\r\n\r\n  togglePinTask(task: Task) {\r\n    let reminderDate: number = parseInt(moment(task.reminder, \"yyyy-MM-DD\").format(\"yyyyMMDD\"));\r\n    if (task.pinned) {\r\n      for (let i = 0; i < this.pinnedTaskList.length; i++) {\r\n        if (this.pinnedTaskList[i].id === task.id) {\r\n          this.pinnedTaskList.splice(i, 1);\r\n        }\r\n      }\r\n      if (reminderDate < this.today) {\r\n        this.pastTasks.push(task);\r\n      } else if (reminderDate === this.today) {\r\n        this.todayTasks.push(task);\r\n      } else if (reminderDate > this.today) {\r\n        this.futureTasks.push(task);\r\n      }\r\n    } else {\r\n      if (reminderDate < this.today) {\r\n        for (let i = 0; i < this.pastTasks.length; i++) {\r\n          if (this.pastTasks[i].id === task.id) {\r\n            this.pastTasks.splice(i, 1);\r\n          }\r\n        }\r\n      } else if (reminderDate === this.today) {\r\n        for (let i = 0; i < this.todayTasks.length; i++) {\r\n          if (this.todayTasks[i].id === task.id) {\r\n            this.todayTasks.splice(i, 1);\r\n          }\r\n        }\r\n      } else if (reminderDate > this.today) {\r\n        for (let i = 0; i < this.futureTasks.length; i++) {\r\n          if (this.futureTasks[i].id === task.id) {\r\n            this.futureTasks.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n      this.pinnedTaskList.push(task);\r\n    }\r\n    this.taskService.togglePinTask(task, this.taskList);\r\n  }\r\n\r\n  archiveTask(task: Task) {\r\n    let reminderDate: number = parseInt(moment(task.reminder, \"yyyy-MM-DD\").format(\"yyyyMMDD\"));\r\n    if (task.pinned) {\r\n      for (let i = 0; i < this.pinnedTaskList.length; i++) {\r\n        if (this.pinnedTaskList[i].id === task.id) {\r\n          this.pinnedTaskList.splice(i, 1);\r\n        }\r\n      }\r\n    } else {\r\n      if (reminderDate < this.today) {\r\n        for (let i = 0; i < this.pastTasks.length; i++) {\r\n          if (this.pastTasks[i].id === task.id) {\r\n            this.pastTasks.splice(i, 1);\r\n          }\r\n        }\r\n      } else if (reminderDate === this.today) {\r\n        for (let i = 0; i < this.todayTasks.length; i++) {\r\n          if (this.todayTasks[i].id === task.id) {\r\n            this.todayTasks.splice(i, 1);\r\n          }\r\n        }\r\n      } else if (reminderDate > this.today) {\r\n        for (let i = 0; i < this.futureTasks.length; i++) {\r\n          if (this.futureTasks[i].id === task.id) {\r\n            this.futureTasks.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.taskService.archiveTask(task, this.taskList);\r\n  }\r\n\r\n  deleteTask(task: Task) {\r\n    let reminderDate: number = parseInt(moment(task.reminder, \"yyyy-MM-DD\").format(\"yyyyMMDD\"));\r\n    if (task.pinned) {\r\n      for (let i = 0; i < this.pinnedTaskList.length; i++) {\r\n        if (this.pinnedTaskList[i].id === task.id) {\r\n          this.pinnedTaskList.splice(i, 1);\r\n        }\r\n      }\r\n    } else {\r\n      if (reminderDate < this.today) {\r\n        for (let i = 0; i < this.pastTasks.length; i++) {\r\n          if (this.pastTasks[i].id === task.id) {\r\n            this.pastTasks.splice(i, 1);\r\n          }\r\n        }\r\n      } else if (reminderDate === this.today) {\r\n        for (let i = 0; i < this.todayTasks.length; i++) {\r\n          if (this.todayTasks[i].id === task.id) {\r\n            this.todayTasks.splice(i, 1);\r\n          }\r\n        }\r\n      } else if (reminderDate > this.today) {\r\n        for (let i = 0; i < this.futureTasks.length; i++) {\r\n          if (this.futureTasks[i].id === task.id) {\r\n            this.futureTasks.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.taskService.deleteTask(task, this.taskList);\r\n  }\r\n\r\n  onReminderChange(task: Task) {\r\n\r\n  }\r\n\r\n  search(searchValue: string) {\r\n    if (searchValue) {\r\n      this.filteredTaskList = this.taskService.search(searchValue, this.filteredReminderTasks);\r\n    } else {\r\n      this.filteredTaskList = [];\r\n    }\r\n  }\r\n\r\n  openReminderModal(task: Task) {\r\n    this.selectedTask = task\r\n    $(\"#reminderModal\").modal('show');\r\n  }\r\n\r\n  editReminder(task: Task) {\r\n    let reminderDate: number = parseInt(moment(task.reminder, \"yyyy-MM-DD\").format(\"yyyyMMDD\"));\r\n    let oldReminderDate: number = 0;\r\n    this.taskList = this.taskService.getTaskList();\r\n    if (task.pinned) {\r\n      for (let i = 0; i < this.pinnedTaskList.length; i++) {\r\n        if (this.pinnedTaskList[i].id === task.id && this.pinnedTaskList[i].reminder !== task.reminder) {\r\n          this.pinnedTaskList[i].reminder = task.reminder;\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < this.taskList.length; i++) {\r\n        if (this.taskList[i].id === task.id) {\r\n          oldReminderDate = parseInt(moment(this.taskList[i].reminder, \"yyyy-MM-DD\").format(\"yyyyMMDD\"));\r\n          if (oldReminderDate < this.today) {\r\n            for (let i = 0; i < this.pastTasks.length; i++) {\r\n              if (this.pastTasks[i].id === task.id) {\r\n                this.pastTasks.splice(i, 1);\r\n              }\r\n            }\r\n          } else if (oldReminderDate === this.today) {\r\n            for (let i = 0; i < this.todayTasks.length; i++) {\r\n              if (this.todayTasks[i].id === task.id) {\r\n                this.todayTasks.splice(i, 1);\r\n              }\r\n            }\r\n          } else if (oldReminderDate > this.today) {\r\n            for (let i = 0; i < this.futureTasks.length; i++) {\r\n              if (this.futureTasks[i].id === task.id) {\r\n                this.futureTasks.splice(i, 1);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (reminderDate < this.today) {\r\n        this.pastTasks.push(task);\r\n      } else if (reminderDate === this.today) {\r\n        this.todayTasks.push(task);\r\n      } else if (reminderDate > this.today) {\r\n        this.futureTasks.push(task);\r\n      }\r\n    }\r\n    this.taskService.editReminder(task, this.taskList);\r\n    $(\"#reminderModal\").modal('hide');\r\n  }\r\n}\r\n\r\n","export default \"<!-- Search -->\\r\\n<div class=\\\"row justify-content-center align-items-center p-5\\\">\\r\\n  <div class=\\\"col-lg-6 col-md-8 col-sm-10\\\">\\r\\n    <div class=\\\"alert-primary p-2 input-search-group\\\">\\r\\n      <span class=\\\"search-icon\\\">\\r\\n        <img src=\\\"../../../../../assets/icons/search.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n      </span>\\r\\n      <input type=\\\"text\\\" class=\\\"ps-2 form-search-control text-primary\\\"\\r\\n             placeholder=\\\"Search Reminder Task...\\\" [(ngModel)]=\\\"searchValue\\\" (input)=\\\"search(searchValue)\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Filtered Task Menu -->\\r\\n<div *ngIf=\\\"filteredTaskList?.length && searchValue\\\">\\r\\n  <div class=\\\"row mx-auto justify-content-between rounded w-75 border mb-2\\\"\\r\\n       [class.pinned]=\\\"task.pinned\\\" id=\\\"{{'id' + task.id}}\\\"\\r\\n       [ngClass]=\\\"{'alert-success border-success': task.done}\\\"\\r\\n       *ngFor=\\\"let task of filteredTaskList\\\">\\r\\n    <!-- Left Menu Side -->\\r\\n    <div class=\\\"col-auto p-3\\\">\\r\\n      <div class=\\\"d-flex align-items-center\\\">\\r\\n        <div class=\\\"border rounded\\\" style=\\\"height:24px;width:24px;\\\"\\r\\n             [ngClass]=\\\"{'border-0 bg-success': task.done}\\\"\\r\\n             (click)=\\\"taskCompleted(task)\\\"></div>\\r\\n        <div class=\\\"ms-3\\\"\\r\\n             [ngClass]=\\\"{'text-success text-decoration-line-through': task.done}\\\">\\r\\n          {{task.taskName}}\\r\\n        </div>\\r\\n        <div class=\\\"ms-4 alert-primary border border-primary rounded-pill py-1 px-2 fs-7\\\" *ngIf=\\\"task.category\\\">\\r\\n          {{task.category}}\\r\\n        </div>\\r\\n        <div class=\\\"ms-2 alert-primary border border-primary rounded-pill py-1 px-2 fs-7\\\" *ngIf=\\\"task.reminder\\\">\\r\\n          <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"16\\\" height=\\\"16\\\" />\\r\\n          <span class=\\\"ms-2\\\">{{ task.dateStatus? task.dateStatus :  task.reminder | date:'dd MMM' }}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- Right Menu Side -->\\r\\n    <div class=\\\"col-auto d-flex\\\">\\r\\n      <!-- Boolean Results -->\\r\\n      <div class=\\\"col-auto row me-2 align-items-center\\\"\\r\\n           *ngIf=\\\"(task.done || task.pinned || task.archived) && !task.showMenu\\\">\\r\\n        <div class=\\\"col me-1\\\" *ngIf=\\\"task.done\\\">\\r\\n          <img src=\\\"../../../../../assets/icons/pocket-success.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col me-1\\\" *ngIf=\\\"task.pinned\\\">\\r\\n          <img src=\\\"../../../../../assets/icons/pin-warning.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col me-1\\\" *ngIf=\\\"task.archived\\\">\\r\\n          <img src=\\\"../../../../../assets/icons/archive-primary.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- More Actions -->\\r\\n      <div class=\\\"bg-dark col-auto row\\\">\\r\\n        <div class=\\\"col-auto p-3 task-menu\\\" (click)=\\\"toggleTaskMenu(task)\\\"\\r\\n             data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"More\\\">\\r\\n          <img src=\\\"../../../../../assets/icons/more.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col-auto\\\" *ngIf=\\\"task.showMenu\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col p-3 px-4\\\">\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Reminder\\\"\\r\\n                 (click)=\\\"openReminderModal(task)\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"togglePinTask(task)\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Pin\\\">\\r\\n              <img src=\\\"{{'../../../../../assets/icons/' + (task.pinned ? 'pin-warning' : 'pin') + '.svg'}}\\\"\\r\\n                   width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"archiveTask(task)\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Archive\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/archive.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"deleteTask(task)\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Trash\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/trash.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Filtered Error Msg -->\\r\\n<div *ngIf=\\\"!filteredTaskList?.length && searchValue\\\" class=\\\"py-3\\\">\\r\\n  <div class=\\\"alert alert-primary alert-danger w-75 mx-auto\\\">\\r\\n    There is no task with that name!!\\r\\n  </div>\\r\\n</div>\\r\\n<!-- All Reminder Tasks -->\\r\\n<div *ngIf=\\\"!filteredTaskList?.length && !searchValue\\\">\\r\\n  <!-- Pinned Task List -->\\r\\n  <div class=\\\"mb-5\\\" *ngIf=\\\"pinnedTaskList?.length\\\">\\r\\n    <div class=\\\"alert-warning p-3 mb-4 w-100\\\">\\r\\n      <img src=\\\"../../../../../assets/icons/pin-warning.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n      <span class=\\\"ms-2 text-warning\\\">Pin</span>\\r\\n    </div>\\r\\n    <!-- Task List Menu -->\\r\\n    <div class=\\\"row mx-auto justify-content-between rounded w-75 border mb-2\\\"\\r\\n         [ngClass]=\\\"{'pinned alert-warning border-warning' : task.pinned}\\\"\\r\\n         *ngFor=\\\"let task of pinnedTaskList\\\">\\r\\n      <!-- Left Menu Side -->\\r\\n      <div class=\\\"col-auto p-3\\\">\\r\\n        <div class=\\\"d-flex align-items-center\\\">\\r\\n          <div class=\\\"border rounded\\\" style=\\\"height:24px;width:24px;\\\"\\r\\n               (click)=\\\"taskCompleted(task)\\\"></div>\\r\\n          <div class=\\\"ms-3\\\">\\r\\n            {{task.taskName}}\\r\\n          </div>\\r\\n          <div class=\\\"ms-4 alert-primary border border-primary rounded-pill py-1 px-2 fs-7\\\" *ngIf=\\\"task.category\\\">\\r\\n            {{task.category}}\\r\\n          </div>\\r\\n          <div class=\\\"ms-2 alert-primary border border-primary rounded-pill py-1 px-2 fs-7\\\"\\r\\n               *ngIf=\\\"task.reminder\\\">\\r\\n            <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"16\\\" height=\\\"16\\\" />\\r\\n            <span class=\\\"ms-2\\\">{{ task.reminder | date:'dd MMM' }}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- Right Menu Side -->\\r\\n      <div class=\\\"col-auto d-flex\\\">\\r\\n        <!-- Boolean Results -->\\r\\n        <div class=\\\"col-auto row me-2 align-items-center\\\"\\r\\n             *ngIf=\\\"task.pinned && !task.showMenu\\\">\\r\\n          <div class=\\\"col me-1\\\" *ngIf=\\\"task.pinned\\\">\\r\\n            <img src=\\\"../../../../../assets/icons/pin-warning.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- More Actions -->\\r\\n        <div class=\\\"bg-dark col-auto row\\\">\\r\\n          <div class=\\\"col-auto p-3 task-menu\\\" (click)=\\\"toggleTaskMenu(task)\\\">\\r\\n            <img src=\\\"../../../../../assets/icons/more.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\" *ngIf=\\\"task.showMenu\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col p-3 px-4\\\">\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\"\\r\\n                   (click)=\\\"openReminderModal(task)\\\">\\r\\n                <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"togglePinTask(task)\\\">\\r\\n                <img src=\\\"../../../../../assets/icons/pin.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Reminder Task List -->\\r\\n  <div *ngIf=\\\"reminderTaskList?.length\\\">\\r\\n    <!-- Today Task List -->\\r\\n    <div *ngIf=\\\"todayTasks?.length\\\" class=\\\"mb-4\\\">\\r\\n      <div class=\\\"bg-light p-3 mb-4 w-100\\\">\\r\\n        <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        <span class=\\\"ms-2\\\">Today</span>\\r\\n      </div>\\r\\n      <!-- Task List Menu -->\\r\\n      <div class=\\\"row mx-auto justify-content-between rounded w-75 border mb-2 alert-primary border-primary\\\"\\r\\n           *ngFor=\\\"let task of todayTasks\\\">\\r\\n        <!-- Left Menu Side -->\\r\\n        <div class=\\\"col-auto p-3\\\">\\r\\n          <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"border border-primary rounded\\\" style=\\\"height:24px;width:24px;\\\"\\r\\n                 (click)=\\\"taskCompleted(task)\\\"></div>\\r\\n            <div class=\\\"ms-3\\\">\\r\\n              {{task.taskName}}\\r\\n            </div>\\r\\n            <div class=\\\"ms-4 alert-primary border border-primary rounded-pill py-1 px-2 fs-7\\\" *ngIf=\\\"task.category\\\">\\r\\n              {{task.category}}\\r\\n            </div>\\r\\n            <div class=\\\"ms-2 alert-primary border border-primary rounded-pill py-1 px-2 fs-7\\\" *ngIf=\\\"task.reminder\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"16\\\" height=\\\"16\\\" />\\r\\n              <span class=\\\"ms-2\\\">{{ task.dateStatus }}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Right Menu Side -->\\r\\n        <div class=\\\"col-auto d-flex\\\">\\r\\n          <!-- More Actions -->\\r\\n          <div class=\\\"bg-dark col-auto row\\\">\\r\\n            <div class=\\\"col-auto p-3 task-menu\\\" (click)=\\\"toggleTaskMenu(task)\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/more.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-auto\\\" *ngIf=\\\"task.showMenu\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col p-3 px-4 task-menu\\\"\\r\\n                     (click)=\\\"openReminderModal(task)\\\">\\r\\n                  <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"togglePinTask(task)\\\">\\r\\n                  <img src=\\\"../../../../../assets/icons/pin.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- Future Task List -->\\r\\n    <div *ngIf=\\\"futureTasks?.length\\\" class=\\\"mb-4\\\">\\r\\n      <div class=\\\"alert-info p-3 mb-4 w-100\\\">\\r\\n        <img src=\\\"../../../../../assets/icons/future.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        <span class=\\\"ms-2 text-info\\\">Future</span>\\r\\n      </div>\\r\\n      <!-- Task List Menu -->\\r\\n      <div class=\\\"row mx-auto justify-content-between rounded w-75 border mb-2 alert-info border-info\\\"\\r\\n           *ngFor=\\\"let task of futureTasks\\\">\\r\\n        <!-- Left Menu Side -->\\r\\n        <div class=\\\"col-auto p-3\\\">\\r\\n          <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"border border-info rounded\\\" style=\\\"height:24px;width:24px;\\\"\\r\\n                 (click)=\\\"taskCompleted(task)\\\"></div>\\r\\n            <div class=\\\"ms-3\\\">\\r\\n              {{task.taskName}}\\r\\n            </div>\\r\\n            <div class=\\\"ms-4 alert-primary border border-primary rounded-pill py-1 px-2 fs-7\\\" *ngIf=\\\"task.category\\\">\\r\\n              {{task.category}}\\r\\n            </div>\\r\\n            <div class=\\\"ms-2 alert-primary border border-primary rounded-pill py-1 px-2 fs-7\\\" *ngIf=\\\"task.reminder\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"16\\\" height=\\\"16\\\" />\\r\\n              <span class=\\\"ms-2\\\">{{ task.reminder | date:'dd MMM' }}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Right Menu Side -->\\r\\n        <div class=\\\"col-auto d-flex\\\">\\r\\n          <!-- More Actions -->\\r\\n          <div class=\\\"bg-dark col-auto row\\\">\\r\\n            <div class=\\\"col-auto p-3 task-menu\\\" (click)=\\\"toggleTaskMenu(task)\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/more.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-auto\\\" *ngIf=\\\"task.showMenu\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col p-3 px-4\\\">\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"col p-3 px-4 task-menu\\\"\\r\\n                     (click)=\\\"openReminderModal(task)\\\">\\r\\n                  <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"togglePinTask(task)\\\">\\r\\n                  <img src=\\\"../../../../../assets/icons/pin.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- Past Task List -->\\r\\n    <div *ngIf=\\\"pastTasks?.length\\\" class=\\\"mb-4\\\">\\r\\n      <div class=\\\"alert-danger p-3 mb-4 w-100\\\">\\r\\n        <img src=\\\"../../../../../assets/icons/tasks.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        <span class=\\\"ms-2 text-danger\\\">Past</span>\\r\\n      </div>\\r\\n      <!-- Task List Menu -->\\r\\n      <div class=\\\"row mx-auto justify-content-between rounded w-75 border mb-2\\\"\\r\\n           *ngFor=\\\"let task of pastTasks\\\">\\r\\n        <!-- Left Menu Side -->\\r\\n        <div class=\\\"col-auto p-3\\\">\\r\\n          <div class=\\\"d-flex align-items-center\\\">\\r\\n            <div class=\\\"border rounded\\\" style=\\\"height:24px;width:24px;\\\"\\r\\n                 (click)=\\\"taskCompleted(task)\\\"></div>\\r\\n            <div class=\\\"ms-3\\\">\\r\\n              {{task.taskName}}\\r\\n            </div>\\r\\n            <div class=\\\"ms-4 alert-primary border border-primary rounded-pill py-1 px-2 fs-7\\\" *ngIf=\\\"task.category\\\">\\r\\n              {{task.category}}\\r\\n            </div>\\r\\n            <div class=\\\"ms-2 alert-primary border border-primary rounded-pill py-1 px-2 fs-7\\\"\\r\\n                 *ngIf=\\\"task.reminder\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"16\\\" height=\\\"16\\\" />\\r\\n              <span class=\\\"ms-2\\\">{{ task.reminder | date:'dd MMM' }}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Right Menu Side -->\\r\\n        <div class=\\\"col-auto d-flex\\\">\\r\\n          <!-- More Actions -->\\r\\n          <div class=\\\"bg-dark col-auto row\\\">\\r\\n            <div class=\\\"col-auto p-3 task-menu\\\" (click)=\\\"toggleTaskMenu(task)\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/more.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-auto\\\" *ngIf=\\\"task.showMenu\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col p-3 px-4\\\">\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"col p-3 px-4 task-menu\\\"\\r\\n                     (click)=\\\"openReminderModal(task)\\\">\\r\\n                  <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"togglePinTask(task)\\\">\\r\\n                  <img src=\\\"../../../../../assets/icons/pin.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Edit Reminder Task Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"reminderModal\\\" tabindex=\\\"-1\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <app-edit-reminder [selectedTask]=\\\"selectedTask\\\"\\r\\n                         (edit)=\\\"editReminder($event)\\\">\\r\\n      </app-edit-reminder>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RemindersComponent } from './reminders.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\nconst remindersRoutes: Routes = [\r\n  {\r\n    path: 'reminders',\r\n    component: RemindersComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RemindersComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(remindersRoutes),\r\n    FormsModule,\r\n    SharedModule,\r\n  ]\r\n})\r\nexport class RemindersModule { }\r\n"],"sourceRoot":"webpack:///","file":"src_app_components_dashboard_components_reminders_reminders_module_ts.8fc529527a95a648ce94.js"}