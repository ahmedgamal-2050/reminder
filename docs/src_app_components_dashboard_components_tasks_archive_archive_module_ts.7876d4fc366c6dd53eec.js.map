{"version":3,"mappings":"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","names":["n","constructor","e","this","ngOnInit","taskList","taskService","getTaskList","allArchiveTasks","filter","i","archived","deleted","length","pinnedTaskList","pinned","archivedTaskList","togglePinTask","id","splice","push","archiveTask","filteredTaskList","deleteTask","search","searchValue","openReminderModal","selectedTask","$","modal","editReminder","reminder","v","d","l","selector","template","T","path","component","t","declarations","imports","h","p","k"],"sources":["./src/app/components/dashboard/components/tasks/archive/archive.component.ts","./src/app/components/dashboard/components/tasks/archive/archive.component.html","./src/app/components/dashboard/components/tasks/archive/archive.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { TaskService } from '../../task.service';\r\nimport { Task } from '../../tasks';\r\ndeclare let $: any;\r\n\r\n@Component({\r\n  selector: 'app-archive',\r\n  templateUrl: './archive.component.html',\r\n  styleUrls: ['./archive.component.scss']\r\n})\r\nexport class ArchiveComponent implements OnInit {\r\n  public taskList: Task[] = [];\r\n  public archivedTaskList: Task[] = [];\r\n  public filteredTaskList: Task[] = [];\r\n  public pinnedTaskList: Task[] = [];\r\n  public allArchiveTasks: Task[] = [];\r\n  public searchValue: string = '';\r\n  public colorList: string[] = ['light', 'info', 'primary', 'warning', 'danger', 'success', 'secondary'];\r\n  public selectedTask!: Task;\r\n\r\n  constructor(private taskService: TaskService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.taskList = this.taskService.getTaskList();\r\n    this.allArchiveTasks = this.taskList.filter((task: Task) => {\r\n      return (task.archived === true && task.deleted === false);\r\n    })\r\n    if (this.allArchiveTasks?.length) {\r\n      this.pinnedTaskList = this.allArchiveTasks.filter((task: Task) => {\r\n        return (task.pinned === true);\r\n      })\r\n      this.archivedTaskList = this.allArchiveTasks.filter((task: Task) => {\r\n        return (task.pinned === false);\r\n      })\r\n    }\r\n  }\r\n\r\n  togglePinTask(task: Task) {\r\n    if (task.pinned) {\r\n      for (let i = 0; i < this.pinnedTaskList.length; i++) {\r\n        if (this.pinnedTaskList[i].id === task.id) {\r\n          this.pinnedTaskList.splice(i, 1);\r\n        }\r\n      }\r\n      this.archivedTaskList.push(task);\r\n    } else {\r\n      for (let i = 0; i < this.archivedTaskList.length; i++) {\r\n        if (this.archivedTaskList[i].id === task.id) {\r\n          this.archivedTaskList.splice(i, 1);\r\n        }\r\n      }\r\n      this.pinnedTaskList.push(task);\r\n    }\r\n  }\r\n\r\n  archiveTask(task: Task) {\r\n    if (task.pinned) {\r\n      for (let i = 0; i < this.pinnedTaskList.length; i++) {\r\n        if (this.pinnedTaskList[i].id === task.id) {\r\n          this.pinnedTaskList.splice(i, 1);\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < this.archivedTaskList.length; i++) {\r\n        if (this.archivedTaskList[i].id === task.id) {\r\n          this.archivedTaskList.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n    for (let i = 0; i < this.filteredTaskList.length; i++) {\r\n      if (this.filteredTaskList[i].id === task.id) {\r\n        this.filteredTaskList.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteTask(task: Task) {\r\n    if (task.pinned) {\r\n      for (let i = 0; i < this.pinnedTaskList.length; i++) {\r\n        if (this.pinnedTaskList[i].id === task.id) {\r\n          this.pinnedTaskList.splice(i, 1);\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < this.archivedTaskList.length; i++) {\r\n        if (this.archivedTaskList[i].id === task.id) {\r\n          this.archivedTaskList.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  filter(filteredTaskList: Task[]) {\r\n    if (filteredTaskList) {\r\n      this.filteredTaskList = filteredTaskList;\r\n    }\r\n  }\r\n\r\n  search(searching: string) {\r\n    this.searchValue = searching;\r\n  }\r\n\r\n  openReminderModal(task: Task) {\r\n    this.selectedTask = task\r\n    $(\"#reminderModal\").modal('show');\r\n  }\r\n\r\n  editReminder(task: Task) {\r\n    this.taskService.editReminder(task, this.taskList);\r\n    if (task.pinned) {\r\n      for (let i = 0; i < this.pinnedTaskList.length; i++) {\r\n        if (this.pinnedTaskList[i].id === task.id) {\r\n          this.pinnedTaskList[i].reminder = task.reminder;\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < this.archivedTaskList.length; i++) {\r\n        if (this.archivedTaskList[i].id === task.id) {\r\n          this.archivedTaskList[i].reminder = task.reminder;\r\n        }\r\n      }\r\n    }\r\n    $(\"#reminderModal\").modal('hide');\r\n  }\r\n}\r\n\r\n\r\n","export default \"<!-- Search -->\\r\\n<app-search [taskList]=\\\"allArchiveTasks\\\"\\r\\n            (filter)=\\\"filter($event)\\\"\\r\\n            (searching)=\\\"search($event)\\\">\\r\\n</app-search>\\r\\n<!-- Filtered Task Menu -->\\r\\n<div *ngIf=\\\"filteredTaskList?.length && searchValue\\\">\\r\\n  <!-- Task List Menu -->\\r\\n  <app-task-list [defaultTaskList]=\\\"taskList\\\"\\r\\n                 [showedTaskList]=\\\"filteredTaskList\\\"\\r\\n                 (delete)=\\\"deleteTask($event)\\\"\\r\\n                 (archive)=\\\"archiveTask($event)\\\"\\r\\n                 (openReminder)=\\\"openReminderModal($event)\\\"\\r\\n                 (pin)=\\\"togglePinTask($event)\\\">\\r\\n  </app-task-list>\\r\\n</div>\\r\\n<!-- Filtered Error Msg -->\\r\\n<div *ngIf=\\\"!filteredTaskList?.length && searchValue\\\" class=\\\"py-3\\\">\\r\\n  <div class=\\\"alert alert-primary alert-primary w-75 mx-auto\\\">\\r\\n    There is no task with that name!!\\r\\n  </div>\\r\\n</div>\\r\\n<!-- All Archive Tasks -->\\r\\n<div *ngIf=\\\"!filteredTaskList?.length && !searchValue\\\">\\r\\n  <!-- Pinned Task List -->\\r\\n  <div class=\\\"mb-5\\\" *ngIf=\\\"pinnedTaskList?.length\\\">\\r\\n    <div class=\\\"alert-warning p-3 mb-4 w-100\\\">\\r\\n      <img src=\\\"./assets/icons/pin-warning.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n      <span class=\\\"ms-2 text-warning\\\">Pin</span>\\r\\n    </div>\\r\\n    <!-- Task List Menu -->\\r\\n    <app-task-list [defaultTaskList]=\\\"taskList\\\"\\r\\n                   [showedTaskList]=\\\"pinnedTaskList\\\"\\r\\n                   (delete)=\\\"deleteTask($event)\\\"\\r\\n                   (archive)=\\\"archiveTask($event)\\\"\\r\\n                   (openReminder)=\\\"openReminderModal($event)\\\"\\r\\n                   (pin)=\\\"togglePinTask($event)\\\">\\r\\n    </app-task-list>\\r\\n  </div>\\r\\n  <!-- Archive Title -->\\r\\n  <div class=\\\"alert-primary p-3 mb-4 w-100\\\">\\r\\n    <img src=\\\"./assets/icons/archive-primary.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n    <span class=\\\"ms-2 text-primary\\\">Archive</span>\\r\\n  </div>\\r\\n  <!-- Archive Task List -->\\r\\n  <div *ngIf=\\\"archivedTaskList?.length\\\">\\r\\n    <!-- Task List Menu -->\\r\\n    <app-task-list [defaultTaskList]=\\\"taskList\\\"\\r\\n                   [showedTaskList]=\\\"archivedTaskList\\\"\\r\\n                   (delete)=\\\"deleteTask($event)\\\"\\r\\n                   (archive)=\\\"archiveTask($event)\\\"\\r\\n                   (openReminder)=\\\"openReminderModal($event)\\\"\\r\\n                   (pin)=\\\"togglePinTask($event)\\\">\\r\\n    </app-task-list>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Edit Reminder Task Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"reminderModal\\\" tabindex=\\\"-1\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <app-edit-reminder [selectedTask]=\\\"selectedTask\\\"\\r\\n                         (edit)=\\\"editReminder($event)\\\">\\r\\n      </app-edit-reminder>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ArchiveComponent } from './archive.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\n\r\nconst archiveRoutes: Routes = [\r\n  {\r\n    path: 'archive',\r\n    component: ArchiveComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ArchiveComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(archiveRoutes),\r\n    SharedModule\r\n  ]\r\n})\r\nexport class ArchiveModule { }\r\n"],"sourceRoot":"webpack:///","file":"src_app_components_dashboard_components_tasks_archive_archive_module_ts.7876d4fc366c6dd53eec.js"}