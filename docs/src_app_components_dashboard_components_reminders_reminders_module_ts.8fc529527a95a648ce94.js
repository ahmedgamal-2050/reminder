"use strict";(self.webpackChunktime_manager_app=self.webpackChunktime_manager_app||[]).push([["src_app_components_dashboard_components_reminders_reminders_module_ts"],{4052:(o,c,n)=>{n.r(c),n.d(c,{RemindersModule:()=>l});var h=n(3786),p=n(4106),m=n(4364);var g=n(931),k=n(2281),a=n.n(k),f=n(8902);let d=class{constructor(i){this.taskService=i,this.taskList=[],this.reminderTaskList=[],this.pinnedTaskList=[],this.todayTasks=[],this.pastTasks=[],this.futureTasks=[],this.today=parseInt(a()(new Date).format("yyyyMMDD")),this.filteredTaskList=[],this.searchValue="",this.filteredReminderTasks=[]}ngOnInit(){this.taskList=this.taskService.getTaskList(),this.getAllReminderTaskList()}getAllReminderTaskList(){var i,e;let s;this.filteredReminderTasks=this.taskList.filter(t=>t.reminder&&!1===t.done&&!1===t.archived&&!1===t.deleted),(null===(i=this.filteredReminderTasks)||void 0===i?void 0:i.length)&&(this.pinnedTaskList=this.filteredReminderTasks.filter(t=>!0===t.pinned),this.reminderTaskList=this.filteredReminderTasks.filter(t=>!1===t.pinned)),(null===(e=this.reminderTaskList)||void 0===e?void 0:e.length)&&(this.pastTasks=this.reminderTaskList.filter(t=>(s=parseInt(a()(t.reminder,"yyyy-MM-DD").format("yyyyMMDD")),s<this.today)),this.todayTasks=this.reminderTaskList.filter(t=>"today"===t.dateStatus),this.futureTasks=this.reminderTaskList.filter(t=>(s=parseInt(a()(t.reminder,"yyyy-MM-DD").format("yyyyMMDD")),s>this.today)))}taskCompleted(i){let e=parseInt(a()(i.reminder,"yyyy-MM-DD").format("yyyyMMDD"));if(i.pinned)for(let s=0;s<this.pinnedTaskList.length;s++)this.pinnedTaskList[s].id===i.id&&this.pinnedTaskList.splice(s,1);else if(e<this.today)for(let s=0;s<this.pastTasks.length;s++)this.pastTasks[s].id===i.id&&this.pastTasks.splice(s,1);else if(e===this.today)for(let s=0;s<this.todayTasks.length;s++)this.todayTasks[s].id===i.id&&this.todayTasks.splice(s,1);else if(e>this.today)for(let s=0;s<this.futureTasks.length;s++)this.futureTasks[s].id===i.id&&this.futureTasks.splice(s,1);this.taskService.taskCompleted(i,this.taskList)}toggleTaskMenu(i){this.taskService.toggleTaskMenu(i,this.taskList)}togglePinTask(i){let e=parseInt(a()(i.reminder,"yyyy-MM-DD").format("yyyyMMDD"));if(i.pinned){for(let s=0;s<this.pinnedTaskList.length;s++)this.pinnedTaskList[s].id===i.id&&this.pinnedTaskList.splice(s,1);e<this.today?this.pastTasks.push(i):e===this.today?this.todayTasks.push(i):e>this.today&&this.futureTasks.push(i)}else{if(e<this.today)for(let s=0;s<this.pastTasks.length;s++)this.pastTasks[s].id===i.id&&this.pastTasks.splice(s,1);else if(e===this.today)for(let s=0;s<this.todayTasks.length;s++)this.todayTasks[s].id===i.id&&this.todayTasks.splice(s,1);else if(e>this.today)for(let s=0;s<this.futureTasks.length;s++)this.futureTasks[s].id===i.id&&this.futureTasks.splice(s,1);this.pinnedTaskList.push(i)}this.taskService.togglePinTask(i,this.taskList)}archiveTask(i){let e=parseInt(a()(i.reminder,"yyyy-MM-DD").format("yyyyMMDD"));if(i.pinned)for(let s=0;s<this.pinnedTaskList.length;s++)this.pinnedTaskList[s].id===i.id&&this.pinnedTaskList.splice(s,1);else if(e<this.today)for(let s=0;s<this.pastTasks.length;s++)this.pastTasks[s].id===i.id&&this.pastTasks.splice(s,1);else if(e===this.today)for(let s=0;s<this.todayTasks.length;s++)this.todayTasks[s].id===i.id&&this.todayTasks.splice(s,1);else if(e>this.today)for(let s=0;s<this.futureTasks.length;s++)this.futureTasks[s].id===i.id&&this.futureTasks.splice(s,1);this.taskService.archiveTask(i,this.taskList)}deleteTask(i){let e=parseInt(a()(i.reminder,"yyyy-MM-DD").format("yyyyMMDD"));if(i.pinned)for(let s=0;s<this.pinnedTaskList.length;s++)this.pinnedTaskList[s].id===i.id&&this.pinnedTaskList.splice(s,1);else if(e<this.today)for(let s=0;s<this.pastTasks.length;s++)this.pastTasks[s].id===i.id&&this.pastTasks.splice(s,1);else if(e===this.today)for(let s=0;s<this.todayTasks.length;s++)this.todayTasks[s].id===i.id&&this.todayTasks.splice(s,1);else if(e>this.today)for(let s=0;s<this.futureTasks.length;s++)this.futureTasks[s].id===i.id&&this.futureTasks.splice(s,1);this.taskService.deleteTask(i,this.taskList)}onReminderChange(i){}search(i){this.filteredTaskList=i?this.taskService.search(i,this.filteredReminderTasks):[]}openReminderModal(i){this.selectedTask=i,$("#reminderModal").modal("show")}editReminder(i){let e=parseInt(a()(i.reminder,"yyyy-MM-DD").format("yyyyMMDD")),s=0;if(this.taskList=this.taskService.getTaskList(),i.pinned)for(let t=0;t<this.pinnedTaskList.length;t++)this.pinnedTaskList[t].id===i.id&&this.pinnedTaskList[t].reminder!==i.reminder&&(this.pinnedTaskList[t].reminder=i.reminder);else{for(let t=0;t<this.taskList.length;t++)if(this.taskList[t].id===i.id)if(s=parseInt(a()(this.taskList[t].reminder,"yyyy-MM-DD").format("yyyyMMDD")),s<this.today)for(let r=0;r<this.pastTasks.length;r++)this.pastTasks[r].id===i.id&&this.pastTasks.splice(r,1);else if(s===this.today)for(let r=0;r<this.todayTasks.length;r++)this.todayTasks[r].id===i.id&&this.todayTasks.splice(r,1);else if(s>this.today)for(let r=0;r<this.futureTasks.length;r++)this.futureTasks[r].id===i.id&&this.futureTasks.splice(r,1);e<this.today?this.pastTasks.push(i):e===this.today?this.todayTasks.push(i):e>this.today&&this.futureTasks.push(i)}this.taskService.editReminder(i,this.taskList),$("#reminderModal").modal("hide")}};d.ctorParameters=()=>[{type:f.M}],d=(0,h.gn)([(0,p.wA2)({selector:"app-reminders",template:'\x3c!-- Search --\x3e\r\n<div class="row justify-content-center align-items-center p-5">\r\n  <div class="col-lg-6 col-md-8 col-sm-10">\r\n    <div class="alert-primary p-2 input-search-group">\r\n      <span class="search-icon">\r\n        <img src="../../../../../assets/icons/search.svg" width="20" height="20" />\r\n      </span>\r\n      <input type="text" class="ps-2 form-search-control text-primary"\r\n             placeholder="Search Reminder Task..." [(ngModel)]="searchValue" (input)="search(searchValue)">\r\n    </div>\r\n  </div>\r\n</div>\r\n\x3c!-- Filtered Task Menu --\x3e\r\n<div *ngIf="filteredTaskList?.length && searchValue">\r\n  <div class="row mx-auto justify-content-between rounded w-75 border mb-2"\r\n       [class.pinned]="task.pinned" id="{{\'id\' + task.id}}"\r\n       [ngClass]="{\'alert-success border-success\': task.done}"\r\n       *ngFor="let task of filteredTaskList">\r\n    \x3c!-- Left Menu Side --\x3e\r\n    <div class="col-auto p-3">\r\n      <div class="d-flex align-items-center">\r\n        <div class="border rounded" style="height:24px;width:24px;"\r\n             [ngClass]="{\'border-0 bg-success\': task.done}"\r\n             (click)="taskCompleted(task)"></div>\r\n        <div class="ms-3"\r\n             [ngClass]="{\'text-success text-decoration-line-through\': task.done}">\r\n          {{task.taskName}}\r\n        </div>\r\n        <div class="ms-4 alert-primary border border-primary rounded-pill py-1 px-2 fs-7" *ngIf="task.category">\r\n          {{task.category}}\r\n        </div>\r\n        <div class="ms-2 alert-primary border border-primary rounded-pill py-1 px-2 fs-7" *ngIf="task.reminder">\r\n          <img src="../../../../../assets/icons/time.svg" width="16" height="16" />\r\n          <span class="ms-2">{{ task.dateStatus? task.dateStatus :  task.reminder | date:\'dd MMM\' }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \x3c!-- Right Menu Side --\x3e\r\n    <div class="col-auto d-flex">\r\n      \x3c!-- Boolean Results --\x3e\r\n      <div class="col-auto row me-2 align-items-center"\r\n           *ngIf="(task.done || task.pinned || task.archived) && !task.showMenu">\r\n        <div class="col me-1" *ngIf="task.done">\r\n          <img src="../../../../../assets/icons/pocket-success.svg" width="20" height="20" />\r\n        </div>\r\n        <div class="col me-1" *ngIf="task.pinned">\r\n          <img src="../../../../../assets/icons/pin-warning.svg" width="20" height="20" />\r\n        </div>\r\n        <div class="col me-1" *ngIf="task.archived">\r\n          <img src="../../../../../assets/icons/archive-primary.svg" width="20" height="20" />\r\n        </div>\r\n      </div>\r\n      \x3c!-- More Actions --\x3e\r\n      <div class="bg-dark col-auto row">\r\n        <div class="col-auto p-3 task-menu" (click)="toggleTaskMenu(task)"\r\n             data-bs-toggle="tooltip" data-bs-placement="top" title="More">\r\n          <img src="../../../../../assets/icons/more.svg" width="20" height="20" />\r\n        </div>\r\n        <div class="col-auto" *ngIf="task.showMenu">\r\n          <div class="row">\r\n            <div class="col p-3 px-4">\r\n\r\n            </div>\r\n            <div class="col p-3 px-4 task-menu"\r\n                 data-bs-toggle="tooltip" data-bs-placement="top" title="Reminder"\r\n                 (click)="openReminderModal(task)">\r\n              <img src="../../../../../assets/icons/time.svg" width="20" height="20" />\r\n            </div>\r\n            <div class="col p-3 px-4 task-menu" (click)="togglePinTask(task)"\r\n                 data-bs-toggle="tooltip" data-bs-placement="top" title="Pin">\r\n              <img src="{{\'../../../../../assets/icons/\' + (task.pinned ? \'pin-warning\' : \'pin\') + \'.svg\'}}"\r\n                   width="20" height="20" />\r\n            </div>\r\n            <div class="col p-3 px-4 task-menu" (click)="archiveTask(task)"\r\n                 data-bs-toggle="tooltip" data-bs-placement="top" title="Archive">\r\n              <img src="../../../../../assets/icons/archive.svg" width="20" height="20" />\r\n            </div>\r\n            <div class="col p-3 px-4 task-menu" (click)="deleteTask(task)"\r\n                 data-bs-toggle="tooltip" data-bs-placement="top" title="Trash">\r\n              <img src="../../../../../assets/icons/trash.svg" width="20" height="20" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\x3c!-- Filtered Error Msg --\x3e\r\n<div *ngIf="!filteredTaskList?.length && searchValue" class="py-3">\r\n  <div class="alert alert-primary alert-danger w-75 mx-auto">\r\n    There is no task with that name!!\r\n  </div>\r\n</div>\r\n\x3c!-- All Reminder Tasks --\x3e\r\n<div *ngIf="!filteredTaskList?.length && !searchValue">\r\n  \x3c!-- Pinned Task List --\x3e\r\n  <div class="mb-5" *ngIf="pinnedTaskList?.length">\r\n    <div class="alert-warning p-3 mb-4 w-100">\r\n      <img src="../../../../../assets/icons/pin-warning.svg" width="20" height="20" />\r\n      <span class="ms-2 text-warning">Pin</span>\r\n    </div>\r\n    \x3c!-- Task List Menu --\x3e\r\n    <div class="row mx-auto justify-content-between rounded w-75 border mb-2"\r\n         [ngClass]="{\'pinned alert-warning border-warning\' : task.pinned}"\r\n         *ngFor="let task of pinnedTaskList">\r\n      \x3c!-- Left Menu Side --\x3e\r\n      <div class="col-auto p-3">\r\n        <div class="d-flex align-items-center">\r\n          <div class="border rounded" style="height:24px;width:24px;"\r\n               (click)="taskCompleted(task)"></div>\r\n          <div class="ms-3">\r\n            {{task.taskName}}\r\n          </div>\r\n          <div class="ms-4 alert-primary border border-primary rounded-pill py-1 px-2 fs-7" *ngIf="task.category">\r\n            {{task.category}}\r\n          </div>\r\n          <div class="ms-2 alert-primary border border-primary rounded-pill py-1 px-2 fs-7"\r\n               *ngIf="task.reminder">\r\n            <img src="../../../../../assets/icons/time.svg" width="16" height="16" />\r\n            <span class="ms-2">{{ task.reminder | date:\'dd MMM\' }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \x3c!-- Right Menu Side --\x3e\r\n      <div class="col-auto d-flex">\r\n        \x3c!-- Boolean Results --\x3e\r\n        <div class="col-auto row me-2 align-items-center"\r\n             *ngIf="task.pinned && !task.showMenu">\r\n          <div class="col me-1" *ngIf="task.pinned">\r\n            <img src="../../../../../assets/icons/pin-warning.svg" width="20" height="20" />\r\n          </div>\r\n        </div>\r\n        \x3c!-- More Actions --\x3e\r\n        <div class="bg-dark col-auto row">\r\n          <div class="col-auto p-3 task-menu" (click)="toggleTaskMenu(task)">\r\n            <img src="../../../../../assets/icons/more.svg" width="20" height="20" />\r\n          </div>\r\n          <div class="col-auto" *ngIf="task.showMenu">\r\n            <div class="row">\r\n              <div class="col p-3 px-4">\r\n\r\n              </div>\r\n              <div class="col p-3 px-4 task-menu"\r\n                   (click)="openReminderModal(task)">\r\n                <img src="../../../../../assets/icons/time.svg" width="20" height="20" />\r\n              </div>\r\n              <div class="col p-3 px-4 task-menu" (click)="togglePinTask(task)">\r\n                <img src="../../../../../assets/icons/pin.svg" width="20" height="20" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \x3c!-- Reminder Task List --\x3e\r\n  <div *ngIf="reminderTaskList?.length">\r\n    \x3c!-- Today Task List --\x3e\r\n    <div *ngIf="todayTasks?.length" class="mb-4">\r\n      <div class="bg-light p-3 mb-4 w-100">\r\n        <img src="../../../../../assets/icons/time.svg" width="20" height="20" />\r\n        <span class="ms-2">Today</span>\r\n      </div>\r\n      \x3c!-- Task List Menu --\x3e\r\n      <div class="row mx-auto justify-content-between rounded w-75 border mb-2 alert-primary border-primary"\r\n           *ngFor="let task of todayTasks">\r\n        \x3c!-- Left Menu Side --\x3e\r\n        <div class="col-auto p-3">\r\n          <div class="d-flex align-items-center">\r\n            <div class="border border-primary rounded" style="height:24px;width:24px;"\r\n                 (click)="taskCompleted(task)"></div>\r\n            <div class="ms-3">\r\n              {{task.taskName}}\r\n            </div>\r\n            <div class="ms-4 alert-primary border border-primary rounded-pill py-1 px-2 fs-7" *ngIf="task.category">\r\n              {{task.category}}\r\n            </div>\r\n            <div class="ms-2 alert-primary border border-primary rounded-pill py-1 px-2 fs-7" *ngIf="task.reminder">\r\n              <img src="../../../../../assets/icons/time.svg" width="16" height="16" />\r\n              <span class="ms-2">{{ task.dateStatus }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \x3c!-- Right Menu Side --\x3e\r\n        <div class="col-auto d-flex">\r\n          \x3c!-- More Actions --\x3e\r\n          <div class="bg-dark col-auto row">\r\n            <div class="col-auto p-3 task-menu" (click)="toggleTaskMenu(task)">\r\n              <img src="../../../../../assets/icons/more.svg" width="20" height="20" />\r\n            </div>\r\n            <div class="col-auto" *ngIf="task.showMenu">\r\n              <div class="row">\r\n                <div class="col p-3 px-4 task-menu"\r\n                     (click)="openReminderModal(task)">\r\n                  <img src="../../../../../assets/icons/time.svg" width="20" height="20" />\r\n                </div>\r\n                <div class="col p-3 px-4 task-menu" (click)="togglePinTask(task)">\r\n                  <img src="../../../../../assets/icons/pin.svg" width="20" height="20" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \x3c!-- Future Task List --\x3e\r\n    <div *ngIf="futureTasks?.length" class="mb-4">\r\n      <div class="alert-info p-3 mb-4 w-100">\r\n        <img src="../../../../../assets/icons/future.svg" width="20" height="20" />\r\n        <span class="ms-2 text-info">Future</span>\r\n      </div>\r\n      \x3c!-- Task List Menu --\x3e\r\n      <div class="row mx-auto justify-content-between rounded w-75 border mb-2 alert-info border-info"\r\n           *ngFor="let task of futureTasks">\r\n        \x3c!-- Left Menu Side --\x3e\r\n        <div class="col-auto p-3">\r\n          <div class="d-flex align-items-center">\r\n            <div class="border border-info rounded" style="height:24px;width:24px;"\r\n                 (click)="taskCompleted(task)"></div>\r\n            <div class="ms-3">\r\n              {{task.taskName}}\r\n            </div>\r\n            <div class="ms-4 alert-primary border border-primary rounded-pill py-1 px-2 fs-7" *ngIf="task.category">\r\n              {{task.category}}\r\n            </div>\r\n            <div class="ms-2 alert-primary border border-primary rounded-pill py-1 px-2 fs-7" *ngIf="task.reminder">\r\n              <img src="../../../../../assets/icons/time.svg" width="16" height="16" />\r\n              <span class="ms-2">{{ task.reminder | date:\'dd MMM\' }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \x3c!-- Right Menu Side --\x3e\r\n        <div class="col-auto d-flex">\r\n          \x3c!-- More Actions --\x3e\r\n          <div class="bg-dark col-auto row">\r\n            <div class="col-auto p-3 task-menu" (click)="toggleTaskMenu(task)">\r\n              <img src="../../../../../assets/icons/more.svg" width="20" height="20" />\r\n            </div>\r\n            <div class="col-auto" *ngIf="task.showMenu">\r\n              <div class="row">\r\n                <div class="col p-3 px-4">\r\n\r\n                </div>\r\n                <div class="col p-3 px-4 task-menu"\r\n                     (click)="openReminderModal(task)">\r\n                  <img src="../../../../../assets/icons/time.svg" width="20" height="20" />\r\n                </div>\r\n                <div class="col p-3 px-4 task-menu" (click)="togglePinTask(task)">\r\n                  <img src="../../../../../assets/icons/pin.svg" width="20" height="20" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \x3c!-- Past Task List --\x3e\r\n    <div *ngIf="pastTasks?.length" class="mb-4">\r\n      <div class="alert-danger p-3 mb-4 w-100">\r\n        <img src="../../../../../assets/icons/tasks.svg" width="20" height="20" />\r\n        <span class="ms-2 text-danger">Past</span>\r\n      </div>\r\n      \x3c!-- Task List Menu --\x3e\r\n      <div class="row mx-auto justify-content-between rounded w-75 border mb-2"\r\n           *ngFor="let task of pastTasks">\r\n        \x3c!-- Left Menu Side --\x3e\r\n        <div class="col-auto p-3">\r\n          <div class="d-flex align-items-center">\r\n            <div class="border rounded" style="height:24px;width:24px;"\r\n                 (click)="taskCompleted(task)"></div>\r\n            <div class="ms-3">\r\n              {{task.taskName}}\r\n            </div>\r\n            <div class="ms-4 alert-primary border border-primary rounded-pill py-1 px-2 fs-7" *ngIf="task.category">\r\n              {{task.category}}\r\n            </div>\r\n            <div class="ms-2 alert-primary border border-primary rounded-pill py-1 px-2 fs-7"\r\n                 *ngIf="task.reminder">\r\n              <img src="../../../../../assets/icons/time.svg" width="16" height="16" />\r\n              <span class="ms-2">{{ task.reminder | date:\'dd MMM\' }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \x3c!-- Right Menu Side --\x3e\r\n        <div class="col-auto d-flex">\r\n          \x3c!-- More Actions --\x3e\r\n          <div class="bg-dark col-auto row">\r\n            <div class="col-auto p-3 task-menu" (click)="toggleTaskMenu(task)">\r\n              <img src="../../../../../assets/icons/more.svg" width="20" height="20" />\r\n            </div>\r\n            <div class="col-auto" *ngIf="task.showMenu">\r\n              <div class="row">\r\n                <div class="col p-3 px-4">\r\n\r\n                </div>\r\n                <div class="col p-3 px-4 task-menu"\r\n                     (click)="openReminderModal(task)">\r\n                  <img src="../../../../../assets/icons/time.svg" width="20" height="20" />\r\n                </div>\r\n                <div class="col p-3 px-4 task-menu" (click)="togglePinTask(task)">\r\n                  <img src="../../../../../assets/icons/pin.svg" width="20" height="20" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\x3c!-- Edit Reminder Task Modal --\x3e\r\n<div class="modal fade" id="reminderModal" tabindex="-1" aria-hidden="true">\r\n  <div class="modal-dialog modal-dialog-centered">\r\n    <div class="modal-content">\r\n      <app-edit-reminder [selectedTask]="selectedTask"\r\n                         (edit)="editReminder($event)">\r\n      </app-edit-reminder>\r\n    </div>\r\n  </div>\r\n</div>\r\n',styles:[g]})],d);var u=n(3568),y=n(335),T=n(385);const M=[{path:"reminders",component:d}];let l=class{};l=(0,h.gn)([(0,p.LVF)({declarations:[d],imports:[m.ez,u.Bz.forChild(M),y.u5,T.m]})],l)},931:o=>{o.exports=".task-menu {\n  cursor: pointer;\n}\n.task-menu:hover {\n  background-color: #457AFB33;\n}\n.pinned {\n  border-left-width: 15px !important;\n  border-left-color: orange !important;\n}\n.color-menu {\n  cursor: pointer;\n}\n.color-menu:hover {\n  background-color: #457AFB33;\n}\n.color-circle {\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  border: 0.5px solid #0d6efd;\n}"}}]);
//# sourceMappingURL=src_app_components_dashboard_components_reminders_reminders_module_ts.8fc529527a95a648ce94.js.map