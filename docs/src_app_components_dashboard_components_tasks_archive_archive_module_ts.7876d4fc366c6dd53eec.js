"use strict";(self.webpackChunktime_manager_app=self.webpackChunktime_manager_app||[]).push([["src_app_components_dashboard_components_tasks_archive_archive_module_ts"],{881:(r,a,s)=>{s.r(a),s.d(a,{ArchiveModule:()=>t});var d=s(3786),l=s(4106),h=s(4364);var o=s(1773),v=s(8902);let n=class{constructor(e){this.taskService=e,this.taskList=[],this.archivedTaskList=[],this.filteredTaskList=[],this.pinnedTaskList=[],this.allArchiveTasks=[],this.searchValue="",this.colorList=["light","info","primary","warning","danger","success","secondary"]}ngOnInit(){var e;this.taskList=this.taskService.getTaskList(),this.allArchiveTasks=this.taskList.filter(i=>!0===i.archived&&!1===i.deleted),(null===(e=this.allArchiveTasks)||void 0===e?void 0:e.length)&&(this.pinnedTaskList=this.allArchiveTasks.filter(i=>!0===i.pinned),this.archivedTaskList=this.allArchiveTasks.filter(i=>!1===i.pinned))}togglePinTask(e){if(e.pinned){for(let i=0;i<this.pinnedTaskList.length;i++)this.pinnedTaskList[i].id===e.id&&this.pinnedTaskList.splice(i,1);this.archivedTaskList.push(e)}else{for(let i=0;i<this.archivedTaskList.length;i++)this.archivedTaskList[i].id===e.id&&this.archivedTaskList.splice(i,1);this.pinnedTaskList.push(e)}}archiveTask(e){if(e.pinned)for(let i=0;i<this.pinnedTaskList.length;i++)this.pinnedTaskList[i].id===e.id&&this.pinnedTaskList.splice(i,1);else for(let i=0;i<this.archivedTaskList.length;i++)this.archivedTaskList[i].id===e.id&&this.archivedTaskList.splice(i,1);for(let i=0;i<this.filteredTaskList.length;i++)this.filteredTaskList[i].id===e.id&&this.filteredTaskList.splice(i,1)}deleteTask(e){if(e.pinned)for(let i=0;i<this.pinnedTaskList.length;i++)this.pinnedTaskList[i].id===e.id&&this.pinnedTaskList.splice(i,1);else for(let i=0;i<this.archivedTaskList.length;i++)this.archivedTaskList[i].id===e.id&&this.archivedTaskList.splice(i,1)}filter(e){e&&(this.filteredTaskList=e)}search(e){this.searchValue=e}openReminderModal(e){this.selectedTask=e,$("#reminderModal").modal("show")}editReminder(e){if(this.taskService.editReminder(e,this.taskList),e.pinned)for(let i=0;i<this.pinnedTaskList.length;i++)this.pinnedTaskList[i].id===e.id&&(this.pinnedTaskList[i].reminder=e.reminder);else for(let i=0;i<this.archivedTaskList.length;i++)this.archivedTaskList[i].id===e.id&&(this.archivedTaskList[i].reminder=e.reminder);$("#reminderModal").modal("hide")}};n.ctorParameters=()=>[{type:v.M}],n=(0,d.gn)([(0,l.wA2)({selector:"app-archive",template:'\x3c!-- Search --\x3e\r\n<app-search [taskList]="allArchiveTasks"\r\n            (filter)="filter($event)"\r\n            (searching)="search($event)">\r\n</app-search>\r\n\x3c!-- Filtered Task Menu --\x3e\r\n<div *ngIf="filteredTaskList?.length && searchValue">\r\n  \x3c!-- Task List Menu --\x3e\r\n  <app-task-list [defaultTaskList]="taskList"\r\n                 [showedTaskList]="filteredTaskList"\r\n                 (delete)="deleteTask($event)"\r\n                 (archive)="archiveTask($event)"\r\n                 (openReminder)="openReminderModal($event)"\r\n                 (pin)="togglePinTask($event)">\r\n  </app-task-list>\r\n</div>\r\n\x3c!-- Filtered Error Msg --\x3e\r\n<div *ngIf="!filteredTaskList?.length && searchValue" class="py-3">\r\n  <div class="alert alert-primary alert-primary w-75 mx-auto">\r\n    There is no task with that name!!\r\n  </div>\r\n</div>\r\n\x3c!-- All Archive Tasks --\x3e\r\n<div *ngIf="!filteredTaskList?.length && !searchValue">\r\n  \x3c!-- Pinned Task List --\x3e\r\n  <div class="mb-5" *ngIf="pinnedTaskList?.length">\r\n    <div class="alert-warning p-3 mb-4 w-100">\r\n      <img src="./assets/icons/pin-warning.svg" width="20" height="20" />\r\n      <span class="ms-2 text-warning">Pin</span>\r\n    </div>\r\n    \x3c!-- Task List Menu --\x3e\r\n    <app-task-list [defaultTaskList]="taskList"\r\n                   [showedTaskList]="pinnedTaskList"\r\n                   (delete)="deleteTask($event)"\r\n                   (archive)="archiveTask($event)"\r\n                   (openReminder)="openReminderModal($event)"\r\n                   (pin)="togglePinTask($event)">\r\n    </app-task-list>\r\n  </div>\r\n  \x3c!-- Archive Title --\x3e\r\n  <div class="alert-primary p-3 mb-4 w-100">\r\n    <img src="./assets/icons/archive-primary.svg" width="20" height="20" />\r\n    <span class="ms-2 text-primary">Archive</span>\r\n  </div>\r\n  \x3c!-- Archive Task List --\x3e\r\n  <div *ngIf="archivedTaskList?.length">\r\n    \x3c!-- Task List Menu --\x3e\r\n    <app-task-list [defaultTaskList]="taskList"\r\n                   [showedTaskList]="archivedTaskList"\r\n                   (delete)="deleteTask($event)"\r\n                   (archive)="archiveTask($event)"\r\n                   (openReminder)="openReminderModal($event)"\r\n                   (pin)="togglePinTask($event)">\r\n    </app-task-list>\r\n  </div>\r\n</div>\r\n\r\n\x3c!-- Edit Reminder Task Modal --\x3e\r\n<div class="modal fade" id="reminderModal" tabindex="-1" aria-hidden="true">\r\n  <div class="modal-dialog modal-dialog-centered">\r\n    <div class="modal-content">\r\n      <app-edit-reminder [selectedTask]="selectedTask"\r\n                         (edit)="editReminder($event)">\r\n      </app-edit-reminder>\r\n    </div>\r\n  </div>\r\n</div>\r\n',styles:[o]})],n);var p=s(3568),k=s(7516);const T=[{path:"archive",component:n}];let t=class{};t=(0,d.gn)([(0,l.LVF)({declarations:[n],imports:[h.ez,p.Bz.forChild(T),k.m]})],t)},1773:r=>{r.exports=".task-menu {\n  cursor: pointer;\n}\n.task-menu:hover {\n  background-color: #457AFB33;\n}\n.pinned {\n  border-left-width: 15px !important;\n  border-left-color: orange !important;\n}\n.color-menu {\n  cursor: pointer;\n}\n.color-menu:hover {\n  background-color: #457AFB33;\n}\n.color-circle {\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  border: 0.5px solid #0d6efd;\n}"}}]);
//# sourceMappingURL=src_app_components_dashboard_components_tasks_archive_archive_module_ts.7876d4fc366c6dd53eec.js.map