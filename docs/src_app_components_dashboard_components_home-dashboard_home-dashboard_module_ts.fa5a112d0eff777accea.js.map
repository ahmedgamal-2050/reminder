{"version":3,"mappings":"wSAUaA,EAAsB,MAejCC,YAAoBC,sBAdbC,cAAmB,GACnBA,gBAAqB,GACrBA,sBAA2B,GAC3BA,iBAAsB,GACtBA,eAAsB,CAAC,QAAS,OAAQ,UAAW,UAAW,SAAU,UAAW,aACnFA,mBAAwB,GACxBA,kBAAuB,GACvBA,iBAAsB,GACtBA,iBAAsB,EACtBA,eAAoB,EACpBA,aAAkB,EAClBA,eAAoB,EAK3BC,WACED,KAAKE,SAAWF,KAAKG,YAAYC,cACjCJ,KAAKK,WAAaL,KAAKE,SAASI,OAAQP,GACV,UAApBA,EAAKQ,aAA2C,IAAjBR,EAAKS,UAAuC,IAAlBT,EAAKU,UAExET,KAAKU,QAAUV,KAAKE,SAASS,OAC7BX,KAAKY,cAAcZ,KAAKE,UACxBF,KAAKa,aAAab,KAAKE,UACvBF,KAAKc,aAAad,KAAKE,UAGzBU,cAAcb,GACZC,KAAKe,cAAgBhB,EAASO,OAAQU,GAC5BA,EAAKC,UAEfjB,KAAKkB,YAAclB,KAAKe,cAAcJ,OAGxCE,aAAad,GACXC,KAAKmB,aAAenB,KAAKE,SAASI,OAAQU,IAClB,IAAdA,EAAKI,MAEfpB,KAAKqB,UAAYrB,KAAKmB,aAAaR,OAGrCG,aAAaf,GACXC,KAAKsB,YAActB,KAAKE,SAASI,OAAQU,IACb,IAAlBA,EAAKP,UAEfT,KAAKuB,UAAYvB,KAAKsB,YAAYX,OAGpCa,YAAYzB,GACV,QAASiB,EAAI,EAAGA,EAAIhB,KAAKK,WAAWM,OAAQK,IACtChB,KAAKK,WAAWW,GAAGS,KAAO1B,EAAK0B,IACjCzB,KAAKK,WAAWqB,OAAOV,EAAG,GAKhCW,WAAW5B,GACT,QAASiB,EAAI,EAAGA,EAAIhB,KAAKK,WAAWM,OAAQK,IACtChB,KAAKK,WAAWW,GAAGS,KAAO1B,EAAK0B,IACjCzB,KAAKK,WAAWqB,OAAOV,EAAG,GAKhCV,OAAOP,GACDA,IACFC,KAAK4B,iBAAmB7B,GAI5B8B,OAAO9B,GACLC,KAAK8B,YAAc/B,EAGrBgC,kBAAkBhC,GAChBC,KAAKgC,aAAejC,EACpBkC,EAAE,kBAAkBC,MAAM,QAG5BC,aAAapC,GACX,QAASiB,EAAI,EAAGA,EAAIhB,KAAKK,WAAWM,OAAQK,IACtChB,KAAKK,WAAWW,GAAGS,KAAO1B,EAAK0B,IAAM1B,EAAKkB,UAC5CjB,KAAKK,WAAWqB,OAAOV,EAAG,GAG9BhB,KAAKG,YAAYgC,aAAapC,EAAMC,KAAKE,UACzC+B,EAAE,kBAAkBC,MAAM,sCAhGrBE,MASIvC,KAAsBwC,UALlCC,OAAU,CACTC,SAAU,qBACVC,SCPa,khIDUF3C,2BEJb,MAAM4C,EAAqB,CACzB,CACEC,KAAM,iBACNC,UAAW9C,QAcF+C,EAAmB,QAAnBA,KAAmBP,UAV/BC,OAAS,CACRO,aAAc,CACZhD,GAEFiD,QAAS,CACPC,KACAC,cAAsBP,GACtBQ,QAGSL","names":["i","constructor","s","this","ngOnInit","taskList","taskService","getTaskList","todayTasks","filter","dateStatus","deleted","archived","tasksNo","length","getReminderNo","getPocketsNo","getArchiveNo","remindersList","e","reminder","remindersNo","pocketsTasks","done","pocketsNo","archiveList","archiveNo","archiveTask","id","splice","deleteTask","filteredTaskList","search","searchValue","openReminderModal","selectedTask","$","modal","editReminder","m","d","o","selector","template","p","path","component","r","declarations","imports","l","v","k"],"sources":["./src/app/components/dashboard/components/home-dashboard/home-dashboard.component.ts","./src/app/components/dashboard/components/home-dashboard/home-dashboard.component.html","./src/app/components/dashboard/components/home-dashboard/home-dashboard.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { TaskService } from '../task.service';\r\nimport { Task } from '../tasks';\r\ndeclare let $: any;\r\n\r\n@Component({\r\n  selector: 'app-home-dashboard',\r\n  templateUrl: './home-dashboard.component.html',\r\n  styleUrls: ['./home-dashboard.component.scss']\r\n})\r\nexport class HomeDashboardComponent implements OnInit {\r\n  public taskList: Task[] = [];\r\n  public todayTasks: Task[] = [];\r\n  public filteredTaskList: Task[] = [];\r\n  public searchValue: string = '';\r\n  public colorList: string[] = ['light', 'info', 'primary', 'warning', 'danger', 'success', 'secondary'];\r\n  public remindersList: Task[] = [];\r\n  public pocketsTasks: Task[] = [];\r\n  public archiveList: Task[] = [];\r\n  public remindersNo: number = 0;\r\n  public pocketsNo: number = 0;\r\n  public tasksNo: number = 0;\r\n  public archiveNo: number = 0;\r\n  public selectedTask!: Task;\r\n\r\n  constructor(private taskService: TaskService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.taskList = this.taskService.getTaskList();\r\n    this.todayTasks = this.taskList.filter((task: Task) => {\r\n      return (task.dateStatus === 'today' && task.deleted === false && task.archived === false);\r\n    });\r\n    this.tasksNo = this.taskList.length;\r\n    this.getReminderNo(this.taskList);\r\n    this.getPocketsNo(this.taskList);\r\n    this.getArchiveNo(this.taskList);\r\n  }\r\n\r\n  getReminderNo(taskList: Task[]) {\r\n    this.remindersList = taskList.filter((task: Task) => {\r\n      return (task.reminder);\r\n    });\r\n    this.remindersNo = this.remindersList.length;\r\n  }\r\n\r\n  getPocketsNo(taskList: Task[]) {\r\n    this.pocketsTasks = this.taskList.filter((task: Task) => {\r\n      return (task.done === true);\r\n    });\r\n    this.pocketsNo = this.pocketsTasks.length;\r\n  }\r\n\r\n  getArchiveNo(taskList: Task[]) {\r\n    this.archiveList = this.taskList.filter((task: Task) => {\r\n      return (task.archived === true);\r\n    });\r\n    this.archiveNo = this.archiveList.length;\r\n  }\r\n\r\n  archiveTask(task: Task) {\r\n    for (let i = 0; i < this.todayTasks.length; i++) {\r\n      if (this.todayTasks[i].id === task.id) {\r\n        this.todayTasks.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteTask(task: Task) {\r\n    for (let i = 0; i < this.todayTasks.length; i++) {\r\n      if (this.todayTasks[i].id === task.id) {\r\n        this.todayTasks.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  filter(filteredTaskList: Task[]) {\r\n    if (filteredTaskList) {\r\n      this.filteredTaskList = filteredTaskList;\r\n    }\r\n  }\r\n\r\n  search(searching: string) {\r\n    this.searchValue = searching;\r\n  }\r\n\r\n  openReminderModal(task: Task) {\r\n    this.selectedTask = task\r\n    $(\"#reminderModal\").modal('show');\r\n  }\r\n\r\n  editReminder(task: Task) {\r\n    for (let i = 0; i < this.todayTasks.length; i++) {\r\n      if (this.todayTasks[i].id === task.id && task.reminder) {\r\n        this.todayTasks.splice(i, 1);\r\n      }\r\n    }\r\n    this.taskService.editReminder(task, this.taskList);\r\n    $(\"#reminderModal\").modal('hide');\r\n  }\r\n\r\n}\r\n","export default \"<!-- Search -->\\r\\n<app-search [taskList]=\\\"todayTasks\\\"\\r\\n            (filter)=\\\"filter($event)\\\"\\r\\n            (searching)=\\\"search($event)\\\">\\r\\n</app-search>\\r\\n<!-- Task Title -->\\r\\n<div class=\\\"bg-light p-3 mb-4 w-100\\\">\\r\\n  <img src=\\\"./assets/icons/time.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n  <span class=\\\"ms-2\\\">Today</span>\\r\\n</div>\\r\\n<!-- Filtered Task Menu -->\\r\\n<div *ngIf=\\\"filteredTaskList?.length && searchValue\\\">\\r\\n  <!-- Task List Menu -->\\r\\n  <app-task-list [defaultTaskList]=\\\"taskList\\\"\\r\\n                  [showedTaskList]=\\\"filteredTaskList\\\"\\r\\n                  (delete)=\\\"deleteTask($event)\\\"\\r\\n                  (archive)=\\\"archiveTask($event)\\\"\\r\\n                  (openReminder)=\\\"openReminderModal($event)\\\">\\r\\n  </app-task-list>\\r\\n</div>\\r\\n<!-- Filtered Error Msg -->\\r\\n<div *ngIf=\\\"!filteredTaskList?.length && searchValue\\\" class=\\\"py-3 mb-4\\\">\\r\\n  <div class=\\\"alert alert-primary alert-danger mx-auto\\\">\\r\\n    There is no task with that name!!\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Today Task List -->\\r\\n<div *ngIf=\\\"!filteredTaskList?.length && !searchValue\\\">\\r\\n  <!-- Task List Menu -->\\r\\n  <app-task-list [defaultTaskList]=\\\"taskList\\\"\\r\\n                  [showedTaskList]=\\\"todayTasks\\\"\\r\\n                  (delete)=\\\"deleteTask($event)\\\"\\r\\n                  (archive)=\\\"archiveTask($event)\\\"\\r\\n                  (openReminder)=\\\"openReminderModal($event)\\\">\\r\\n  </app-task-list>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row justify-content-center mb-2\\\">\\r\\n  <div class=\\\"col-lg-11\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n      <!-- Numbers -->\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-6 mb-3\\\">\\r\\n            <div class=\\\"alert-warning py-5\\\">\\r\\n              <div class=\\\"d-flex justify-content-center align-items-end mb-3\\\">\\r\\n                <img src=\\\"./assets/icons/time.svg\\\" width=\\\"40\\\" height=\\\"40\\\" />\\r\\n                <h5 class=\\\"text-warning mb-0 ms-1\\\">{{remindersNo}}</h5>\\r\\n              </div>\\r\\n              <div class=\\\"text-warning text-center\\\">Reminders</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-6 mb-3\\\">\\r\\n            <div class=\\\"alert-success py-5\\\">\\r\\n              <div class=\\\"d-flex justify-content-center align-items-end mb-3\\\">\\r\\n                <img src=\\\"./assets/icons/pocket-success.svg\\\" width=\\\"40\\\" height=\\\"40\\\" />\\r\\n                <h5 class=\\\"text-success mb-0 ms-1\\\">{{pocketsNo}}</h5>\\r\\n              </div>\\r\\n              <div class=\\\"text-success text-center\\\">Pocket</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-6 mb-3\\\">\\r\\n            <div class=\\\"alert-dark py-5\\\">\\r\\n              <div class=\\\"d-flex justify-content-center align-items-end mb-3\\\">\\r\\n                <img src=\\\"./assets/icons/tasks.svg\\\" width=\\\"40\\\" height=\\\"40\\\" />\\r\\n                <h5 class=\\\"text-dark mb-0 ms-1\\\">{{tasksNo}}</h5>\\r\\n              </div>\\r\\n              <div class=\\\"text-dark text-center\\\">Task</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-6 mb-3\\\">\\r\\n            <div class=\\\"alert-primary py-5\\\">\\r\\n              <div class=\\\"d-flex justify-content-center align-items-end mb-3\\\">\\r\\n                <img src=\\\"./assets/icons/archive.svg\\\" width=\\\"40\\\" height=\\\"40\\\" />\\r\\n                <h5 class=\\\"text-primary mb-0 ms-1\\\">{{archiveNo}}</h5>\\r\\n              </div>\\r\\n              <div class=\\\"text-primary text-center\\\">Archive</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- Prayers -->\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <app-prayer-list></app-prayer-list>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Edit Reminder Task Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"reminderModal\\\" tabindex=\\\"-1\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <app-edit-reminder [selectedTask]=\\\"selectedTask\\\"\\r\\n                         (edit)=\\\"editReminder($event)\\\">\\r\\n      </app-edit-reminder>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HomeDashboardComponent } from './home-dashboard.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\nconst homeRoutes: Routes = [\r\n  {\r\n    path: 'home-dashboard',\r\n    component: HomeDashboardComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomeDashboardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(homeRoutes),\r\n    SharedModule,\r\n  ]\r\n})\r\nexport class HomeDashboardModule { }\r\n"],"sourceRoot":"webpack:///","file":"src_app_components_dashboard_components_home-dashboard_home-dashboard_module_ts.fa5a112d0eff777accea.js"}