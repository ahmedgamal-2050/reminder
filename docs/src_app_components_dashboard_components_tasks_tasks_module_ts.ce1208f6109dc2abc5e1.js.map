{"version":3,"mappings":"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","names":["n","constructor","s","this","ngOnInit","taskList","taskService","getTaskList","openModal","selectedTask","$","modal","createTask","push","updateTask","alert","taskName","editTask","r","length","id","showMenu","toggleTaskMenu","showColorMenu","hideColorMenu","changeColor","taskCompleted","togglePinTask","archiveTask","deleteTask","search","filteredTaskList","openReminderModal","editReminder","v","o","a","selector","template","i","taskForm","fb","group","e","category","reminder","ngOnChanges","currentValue","patchValue","submitTask","dirty","valid","task","value","pinned","archived","deleted","done","emit","parseInt","Math","random","toFixed","addTask","reset","markAsTouched","markAsDirty","get","y","path","component","l","declarations","imports","g","p","f"],"sources":["./src/app/components/dashboard/components/tasks/tasks.component.ts","./src/app/components/dashboard/components/tasks/tasks.component.html","./src/app/components/dashboard/components/tasks/components/edit-task/edit-task.component.ts","./src/app/components/dashboard/components/tasks/components/edit-task/edit-task.component.html","./src/app/components/dashboard/components/tasks/tasks.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { TaskService } from '../task.service';\r\nimport { Task } from '../tasks';\r\ndeclare let $: any;\r\n\r\n@Component({\r\n  selector: 'app-tasks',\r\n  templateUrl: './tasks.component.html',\r\n  styleUrls: ['./tasks.component.scss']\r\n})\r\nexport class TasksComponent implements OnInit {\r\n  public taskList: Task[] = [];\r\n  public selectedTask!: Task;\r\n  public emptyTask!: Task;\r\n  public filteredTaskList: Task[] = [];\r\n  public searchValue: string = '';\r\n  public colorList: string[] = ['light', 'info', 'primary', 'warning', 'danger', 'success', 'secondary'];\r\n\r\n  constructor(private taskService: TaskService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.taskList = this.taskService.getTaskList();\r\n  }\r\n\r\n  openModal(task: Task) {\r\n    this.selectedTask = task;\r\n    $(\"#taskModal\").modal('show');\r\n  }\r\n\r\n  createTask(task: Task) {\r\n    this.taskList.push(task);\r\n    this.taskService.updateTask(this.taskList);\r\n    $(\"#taskModal\").modal('hide');\r\n    alert(`${task.taskName} task created successfully`);\r\n  }\r\n\r\n  editTask(task: Task) {\r\n    for (let i = 0; i < this.taskList.length; i++) {\r\n      if (this.taskList[i].id === task.id) {\r\n        this.taskList[i] = task;\r\n        this.taskList[i].showMenu = false;\r\n      }\r\n    }\r\n    this.taskService.updateTask(this.taskList);\r\n    $(\"#taskModal\").modal('hide');\r\n    alert(`${task.taskName} task updated successfully`);\r\n  }\r\n\r\n  toggleTaskMenu(task: Task) {\r\n    this.taskService.toggleTaskMenu(task, this.taskList);\r\n  }\r\n\r\n  showColorMenu(task: Task) {\r\n    this.taskService.showColorMenu(task, this.taskList);\r\n  }\r\n\r\n  hideColorMenu(task: Task) {\r\n    this.taskService.hideColorMenu(task, this.taskList);\r\n  }\r\n\r\n  changeColor(task: Task, color: string) {\r\n    this.taskService.changeColor(task, this.taskList, color);\r\n  }\r\n\r\n  taskCompleted(task: Task) {\r\n    this.taskService.taskCompleted(task, this.taskList);\r\n  }\r\n\r\n  togglePinTask(task: Task) {\r\n    this.taskService.togglePinTask(task, this.taskList);\r\n  }\r\n\r\n  archiveTask(task: Task) {\r\n    this.taskService.archiveTask(task, this.taskList);\r\n  }\r\n\r\n  deleteTask(task: Task) {\r\n    this.taskService.deleteTask(task, this.taskList);\r\n  }\r\n\r\n  search(searchValue: string) {\r\n    if (searchValue) {\r\n      this.filteredTaskList = this.taskService.search(searchValue, this.taskList);\r\n    } else {\r\n      this.filteredTaskList = [];\r\n    }\r\n  }\r\n\r\n  openReminderModal(task: Task) {\r\n    this.selectedTask = task\r\n    $(\"#reminderModal\").modal('show');\r\n  }\r\n\r\n  editReminder(task: Task) {\r\n    this.taskService.editReminder(task, this.taskList);\r\n    $(\"#reminderModal\").modal('hide');\r\n  }\r\n}\r\n","export default \"<!-- Search -->\\r\\n<div class=\\\"row justify-content-center align-items-center p-5\\\">\\r\\n  <div class=\\\"col-lg-6 col-md-8 col-sm-10\\\">\\r\\n    <div class=\\\"alert-primary p-2 input-search-group\\\">\\r\\n      <span class=\\\"search-icon\\\">\\r\\n        <img src=\\\"../../../../../assets/icons/search.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n      </span>\\r\\n      <input type=\\\"text\\\" class=\\\"ps-2 form-search-control text-primary\\\"\\r\\n             placeholder=\\\"Search Task...\\\" [(ngModel)]=\\\"searchValue\\\" (input)=\\\"search(searchValue)\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Page Title -->\\r\\n<div class=\\\"bg-light p-3 mb-4 w-100\\\">\\r\\n  <img src=\\\"../../../../../assets/icons/tasks.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n  <span class=\\\"ms-2 text-primary\\\">Tasks</span>\\r\\n</div>\\r\\n<!-- Page Content -->\\r\\n<!-- Create New Task -->\\r\\n<div class=\\\"row mx-auto justify-content-between rounded w-75 create-task mb-2\\\"\\r\\n     (click)=\\\"openModal(emptyTask)\\\">\\r\\n  <div class=\\\"col-3 p-3\\\">\\r\\n    <img src=\\\"../../../../../assets/icons/create.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n    <span class=\\\"ps-3\\\">Create New Task</span>\\r\\n  </div>\\r\\n  <div class=\\\"col-auto\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-auto p-3\\\">\\r\\n        <img src=\\\"../../../../../assets/icons/more-black.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Filtered Task Menu -->\\r\\n<div *ngIf=\\\"filteredTaskList?.length && searchValue\\\">\\r\\n  <div class=\\\"row mx-auto justify-content-between rounded w-75 border mb-2\\\"\\r\\n       [ngClass]=\\\"task.taskColor && !task.done && !task.deleted ? 'alert-'+ task.taskColor + ' border-'+ task.taskColor : ''\\\"\\r\\n       [class.pinned]=\\\"task.pinned\\\"\\r\\n       [class.alert-success]=\\\"task.done\\\"\\r\\n       [class.border-success]=\\\"task.done\\\"\\r\\n       [class.alert-danger]=\\\"task.deleted\\\"\\r\\n       [class.border-danger]=\\\"task.deleted\\\"\\r\\n       *ngFor=\\\"let task of filteredTaskList\\\">\\r\\n    <!-- Left Menu Side -->\\r\\n    <div class=\\\"col-auto p-3\\\">\\r\\n      <div class=\\\"d-flex align-items-center\\\">\\r\\n        <div class=\\\"border rounded\\\" style=\\\"height:24px;width:24px;\\\"\\r\\n             [ngClass]=\\\"(task.taskColor && !task.done && !task.deleted) ? 'border-'+ task.taskColor : ''\\\"\\r\\n             [class.bg-success]=\\\"task.done\\\"\\r\\n             [class.bg-danger]=\\\"task.deleted\\\"\\r\\n             (click)=\\\"taskCompleted(task)\\\"></div>\\r\\n        <div class=\\\"ms-3\\\"\\r\\n             [class.text-decoration-line-through]=\\\"task.done || task.deleted\\\"\\r\\n             [class.text-success]=\\\"task.done\\\"\\r\\n             [class.text-danger]=\\\"task.deleted\\\">\\r\\n          {{task.taskName}}\\r\\n        </div>\\r\\n        <div class=\\\"d-flex\\\" *ngIf=\\\"!task.colorMenu\\\">\\r\\n          <div class=\\\"ms-3 border rounded-pill py-1-5 px-2 fs-8\\\" *ngIf=\\\"task.category\\\"\\r\\n               [ngClass]=\\\"task.deleted ?'alert-danger border-danger' : 'alert-primary border-primary'\\\">\\r\\n            {{task.category}}\\r\\n          </div>\\r\\n          <div class=\\\"ms-3 border rounded-pill py-1-5 px-2 fs-8\\\"\\r\\n               *ngIf=\\\"task.reminder && !task.done\\\"\\r\\n               [ngClass]=\\\"task.deleted ?'alert-danger border-danger' : 'alert-primary border-primary'\\\">\\r\\n            <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"14\\\" height=\\\"14\\\" />\\r\\n            <span class=\\\"ms-2\\\">{{ task.dateStatus? task.dateStatus :  task.reminder | date:'dd MMM' }}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- Right Menu Side -->\\r\\n    <div class=\\\"col-auto d-flex\\\">\\r\\n      <!-- Boolean Results -->\\r\\n      <div class=\\\"col-auto row me-2 align-items-center\\\"\\r\\n           *ngIf=\\\"(task.done || task.pinned || task.archived || task.deleted) && !task.showMenu && !task.colorMenu\\\">\\r\\n        <div class=\\\"col me-1\\\" *ngIf=\\\"task.done\\\">\\r\\n          <img src=\\\"../../../../../assets/icons/pocket-success.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col me-1\\\" *ngIf=\\\"task.pinned\\\">\\r\\n          <img src=\\\"../../../../../assets/icons/pin-warning.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col me-1\\\" *ngIf=\\\"task.archived\\\">\\r\\n          <img src=\\\"../../../../../assets/icons/archive-primary.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col me-1\\\" *ngIf=\\\"task.deleted\\\">\\r\\n          <img src=\\\"../../../../../assets/icons/trash-danger.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- More Actions -->\\r\\n      <div class=\\\"bg-dark col-auto row\\\">\\r\\n        <div class=\\\"col-auto p-3 task-menu\\\" (click)=\\\"toggleTaskMenu(task)\\\"\\r\\n             data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"More\\\">\\r\\n          <img src=\\\"../../../../../assets/icons/more.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n        <!-- Actions Menu -->\\r\\n        <div class=\\\"col-auto\\\" *ngIf=\\\"task.showMenu && !task.colorMenu\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Reminder\\\"\\r\\n                 (click)=\\\"openReminderModal(task)\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"togglePinTask(task)\\\" *ngIf=\\\"!task.deleted\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Pin\\\">\\r\\n              <img src=\\\"{{'../../../../../assets/icons/' + (task.pinned ? 'pin-warning' : 'pin') + '.svg'}}\\\"\\r\\n                   width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"showColorMenu(task)\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Color\\\"\\r\\n                 *ngIf=\\\"!task.done && !task.deleted\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/color.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"archiveTask(task)\\\" *ngIf=\\\"!task.deleted\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Archive\\\">\\r\\n              <img src=\\\"{{'../../../../../assets/icons/' + (task.archived ? 'archive-primary' : 'archive') + '.svg'}}\\\"\\r\\n                   width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"deleteTask(task)\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Trash\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/trash.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Color Menu -->\\r\\n        <div class=\\\"col-auto bg-light\\\" *ngIf=\\\"!task.showMenu && task.colorMenu\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"hideColorMenu(task)\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Color\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/color-dark.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\"\\r\\n                 (click)=\\\"changeColor(task, color)\\\"\\r\\n                 *ngFor=\\\"let color of colorList\\\">\\r\\n              <div class=\\\"color-circle\\\" [ngClass]=\\\"color ? 'bg-'+ color : ''\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Filtered Error Msg -->\\r\\n<div *ngIf=\\\"!filteredTaskList?.length && searchValue\\\" class=\\\"py-3\\\">\\r\\n  <div class=\\\"alert alert-primary alert-danger w-75 mx-auto\\\">\\r\\n    There is no task with that name!!\\r\\n  </div>\\r\\n</div>\\r\\n<!-- All Task Menu -->\\r\\n<div *ngIf=\\\"!filteredTaskList?.length && !searchValue\\\">\\r\\n  <div class=\\\"row mx-auto justify-content-between rounded w-75 border mb-2\\\"\\r\\n       [class.pinned]=\\\"task.pinned\\\"\\r\\n       [ngClass]=\\\"task.taskColor && !task.done && !task.deleted ? 'alert-'+ task.taskColor + ' border-'+ task.taskColor : ''\\\"\\r\\n       [class.alert-success]=\\\"task.done\\\"\\r\\n       [class.border-success]=\\\"task.done\\\"\\r\\n       [class.alert-danger]=\\\"task.deleted\\\"\\r\\n       [class.border-danger]=\\\"task.deleted\\\"\\r\\n       *ngFor=\\\"let task of taskList\\\">\\r\\n    <!-- Left Menu Side -->\\r\\n    <div class=\\\"col-auto p-3\\\">\\r\\n      <div class=\\\"d-flex align-items-center\\\">\\r\\n        <div class=\\\"border rounded\\\" style=\\\"height:24px;width:24px;\\\"\\r\\n             [ngClass]=\\\"(task.taskColor && !task.done && !task.deleted) ? 'border-'+ task.taskColor : ''\\\"\\r\\n             [class.bg-success]=\\\"task.done\\\"\\r\\n             [class.bg-danger]=\\\"task.deleted\\\"\\r\\n             (click)=\\\"taskCompleted(task)\\\"></div>\\r\\n        <div class=\\\"ms-3\\\"\\r\\n             [class.text-decoration-line-through]=\\\"task.done || task.deleted\\\"\\r\\n             [class.text-success]=\\\"task.done\\\"\\r\\n             [class.text-danger]=\\\"task.deleted\\\">\\r\\n          {{task.taskName}}\\r\\n        </div>\\r\\n        <div class=\\\"d-flex\\\" *ngIf=\\\"!task.colorMenu\\\">\\r\\n          <div class=\\\"ms-3 border rounded-pill py-1-5 px-2 fs-8\\\" *ngIf=\\\"task.category\\\"\\r\\n               [ngClass]=\\\"task.deleted ?'alert-danger border-danger' : 'alert-primary border-primary'\\\">\\r\\n            {{task.category}}\\r\\n          </div>\\r\\n          <div class=\\\"ms-3 border rounded-pill py-1-5 px-2 fs-8\\\"\\r\\n               *ngIf=\\\"task.reminder && !task.done\\\"\\r\\n               [ngClass]=\\\"task.deleted ?'alert-danger border-danger' : 'alert-primary border-primary'\\\">\\r\\n            <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"14\\\" height=\\\"14\\\" />\\r\\n            <span class=\\\"ms-2\\\">{{ task.dateStatus? task.dateStatus :  task.reminder | date:'dd MMM' }}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- Right Menu Side -->\\r\\n    <div class=\\\"col-auto d-flex\\\">\\r\\n      <!-- Boolean Results -->\\r\\n      <div class=\\\"col-auto row me-2 align-items-center\\\"\\r\\n           *ngIf=\\\"(task.done || task.pinned || task.archived || task.deleted) && !task.showMenu && !task.colorMenu\\\">\\r\\n        <div class=\\\"col me-1\\\" *ngIf=\\\"task.done\\\">\\r\\n          <img src=\\\"../../../../../assets/icons/pocket-success.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col me-1\\\" *ngIf=\\\"task.pinned\\\">\\r\\n          <img src=\\\"../../../../../assets/icons/pin-warning.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col me-1\\\" *ngIf=\\\"task.archived\\\">\\r\\n          <img src=\\\"../../../../../assets/icons/archive-primary.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col me-1\\\" *ngIf=\\\"task.deleted\\\">\\r\\n          <img src=\\\"../../../../../assets/icons/trash-danger.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- More Actions -->\\r\\n      <div class=\\\"bg-dark col-auto row\\\">\\r\\n        <div class=\\\"col-auto p-3 task-menu\\\" (click)=\\\"toggleTaskMenu(task)\\\"\\r\\n             data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"More\\\">\\r\\n          <img src=\\\"../../../../../assets/icons/more.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n        </div>\\r\\n        <!-- Actions Menu -->\\r\\n        <div class=\\\"col-auto\\\" *ngIf=\\\"task.showMenu && !task.colorMenu\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Reminder\\\" (click)=\\\"openReminderModal(task)\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/time.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"togglePinTask(task)\\\" *ngIf=\\\"!task.deleted\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Pin\\\">\\r\\n              <img src=\\\"{{'../../../../../assets/icons/' + (task.pinned ? 'pin-warning' : 'pin') + '.svg'}}\\\"\\r\\n                   width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"showColorMenu(task)\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Color\\\"\\r\\n                 *ngIf=\\\"!task.done && !task.deleted\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/color.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"archiveTask(task)\\\" *ngIf=\\\"!task.deleted\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Archive\\\">\\r\\n              <img src=\\\"{{'../../../../../assets/icons/' + (task.archived ? 'archive-primary' : 'archive') + '.svg'}}\\\"\\r\\n                   width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"deleteTask(task)\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Trash\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/trash.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Color Menu -->\\r\\n        <div class=\\\"col-auto bg-light\\\" *ngIf=\\\"!task.showMenu && task.colorMenu\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\" (click)=\\\"hideColorMenu(task)\\\"\\r\\n                 data-bs-toggle=\\\"tooltip\\\" data-bs-placement=\\\"top\\\" title=\\\"Color\\\">\\r\\n              <img src=\\\"../../../../../assets/icons/color-dark.svg\\\" width=\\\"20\\\" height=\\\"20\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col p-3 px-4 task-menu\\\"\\r\\n                 (click)=\\\"changeColor(task, color)\\\"\\r\\n                 *ngFor=\\\"let color of colorList\\\">\\r\\n              <div class=\\\"color-circle\\\" [ngClass]=\\\"color ? 'bg-'+ color : ''\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Create/Edit Task Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"taskModal\\\" tabindex=\\\"-1\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <app-edit-task (addTask)=\\\"createTask($event)\\\"\\r\\n                     (editTask)=\\\"editTask($event)\\\"\\r\\n                     [taskList]=\\\"taskList\\\"\\r\\n                     [selectedTask]=\\\"selectedTask\\\">\\r\\n      </app-edit-task>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Edit Reminder Task Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"reminderModal\\\" tabindex=\\\"-1\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <app-edit-reminder [selectedTask]=\\\"selectedTask\\\"\\r\\n                         (edit)=\\\"editReminder($event)\\\">\\r\\n      </app-edit-reminder>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Task } from '../../../tasks';\r\n\r\n@Component({\r\n  selector: 'app-edit-task',\r\n  templateUrl: './edit-task.component.html',\r\n  styleUrls: ['./edit-task.component.scss']\r\n})\r\nexport class EditTaskComponent implements OnInit, OnChanges {\r\n  public taskForm!: FormGroup;\r\n  public task!: Task;\r\n  @Input() public taskList?: Task[];\r\n  @Input() public selectedTask!: Task;\r\n  @Output() public addTask = new EventEmitter<Task>();\r\n  @Output() public editTask = new EventEmitter<Task>();\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.taskForm = this.fb.group({\r\n      taskName: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.pattern('^[أ-يa-zA-Z].*'),\r\n          Validators.maxLength(50)\r\n        ]\r\n      ],\r\n      category: [\r\n        '',\r\n        [\r\n          Validators.minLength(3),\r\n          Validators.pattern('^[أ-يa-zA-Z].*'),\r\n          Validators.maxLength(50)\r\n        ]\r\n      ],\r\n      reminder: ['']\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.selectedTask = changes.selectedTask.currentValue as Task;\r\n\r\n    if (this.selectedTask) {\r\n      this.taskForm.patchValue({\r\n        taskName: this.selectedTask.taskName,\r\n        category: this.selectedTask.category,\r\n        reminder: this.selectedTask.reminder\r\n      });\r\n    }\r\n  }\r\n\r\n  submitTask() {\r\n    if (this.taskForm.dirty && this.taskForm.valid) {\r\n      if (this.selectedTask) {\r\n        this.task = {\r\n          id: this.selectedTask.id,\r\n          taskName: this.taskForm.value.taskName,\r\n          category: this.taskForm.value.category,\r\n          reminder: this.taskForm.value.reminder,\r\n          pinned: this.selectedTask.pinned,\r\n          archived: this.selectedTask.archived,\r\n          deleted: this.selectedTask.deleted,\r\n          done: this.selectedTask.done,\r\n          showMenu: this.selectedTask.showMenu\r\n        }\r\n        this.editTask.emit(this.task);\r\n      } else {\r\n        let randomNum = parseInt((Math.random() * 10000000).toFixed());\r\n        this.task = {\r\n          id: randomNum,\r\n          taskName: this.taskForm.value.taskName,\r\n          category: this.taskForm.value.category,\r\n          reminder: this.taskForm.value.reminder,\r\n          pinned: false,\r\n          archived: false,\r\n          deleted: false,\r\n          done: false,\r\n          showMenu: false\r\n        }\r\n        this.addTask.emit(this.task);\r\n      }\r\n      this.taskForm.reset();\r\n    } else {\r\n      this.taskForm.markAsTouched();\r\n      this.taskForm.markAsDirty();\r\n    }\r\n  }\r\n\r\n  get taskName() {\r\n    return this.taskForm.get('taskName');\r\n  }\r\n\r\n  get category() {\r\n    return this.taskForm.get('category');\r\n  }\r\n}\r\n","export default \"<form [formGroup]=\\\"taskForm\\\" (submit)=\\\"submitTask()\\\" novalidate>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h5 class=\\\"modal-title\\\" id=\\\"staticBackdropLabel\\\">{{ selectedTask ? 'Edit' : 'Create'}} Task</h5>\\r\\n    <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-12 mb-3\\\">\\r\\n        <label for=\\\"taskName\\\" class=\\\"mb-1\\\">Task Name <span class=\\\"text-danger\\\">*</span></label>\\r\\n        <input type=\\\"text\\\" id=\\\"taskName\\\" class=\\\"form-control\\\"\\r\\n               placeholder=\\\"Task Name\\\" formControlName=\\\"taskName\\\"\\r\\n               [ngClass]=\\\"taskName?.invalid && (taskName?.dirty || taskName?.touched) ? 'border-danger':''\\\">\\r\\n        <div *ngIf=\\\"taskName?.invalid && (taskName?.dirty || taskName?.touched)\\\" class=\\\"text-danger\\\">\\r\\n          <div *ngIf=\\\"taskName.errors && taskName.errors.required\\\">\\r\\n            Task Name is required.\\r\\n          </div>\\r\\n          <div *ngIf=\\\"taskName.errors && taskName.errors.minlength\\\">\\r\\n            Task Name must be at least 3 characters.\\r\\n          </div>\\r\\n          <div *ngIf=\\\"taskName.errors && taskName.errors.maxLength\\\">\\r\\n            Task Name must be 50 characters maximum.\\r\\n          </div>\\r\\n          <div *ngIf=\\\"taskName.errors && taskName.errors.pattern\\\">\\r\\n            Task Name must start with a character.\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-12 mb-3\\\">\\r\\n        <label for=\\\"category\\\" class=\\\"mb-1\\\">Category <span class=\\\"text-danger\\\">*</span></label>\\r\\n        <input type=\\\"text\\\" id=\\\"category\\\" class=\\\"form-control\\\"\\r\\n               placeholder=\\\"Category\\\" formControlName=\\\"category\\\"\\r\\n               [ngClass]=\\\"category?.invalid && (category?.dirty || category?.touched) ? 'border-danger':''\\\">\\r\\n        <div *ngIf=\\\"category?.invalid && (category?.dirty || category?.touched)\\\" class=\\\"text-danger\\\">\\r\\n          <div *ngIf=\\\"category.errors && category.errors.minlength\\\">\\r\\n            Category must be at least 3 characters.\\r\\n          </div>\\r\\n          <div *ngIf=\\\"category.errors && category.errors.maxLength\\\">\\r\\n            Category must be 50 characters maximum.\\r\\n          </div>\\r\\n          <div *ngIf=\\\"category.errors && category.errors.maxLength\\\">\\r\\n            Category must be 50 characters maximum.\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-12 mb-3\\\">\\r\\n        <label for=\\\"reminder\\\" class=\\\"mb-1\\\">Reminder (Optional)</label>\\r\\n        <input type=\\\"date\\\" id=\\\"reminder\\\" class=\\\"form-control\\\"\\r\\n               placeholder=\\\"mm/dd/yyyy\\\" formControlName=\\\"reminder\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-bs-dismiss=\\\"modal\\\">Close</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\r\\n  </div>\\r\\n</form>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TasksComponent } from './tasks.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { EditTaskComponent } from './components/edit-task/edit-task.component';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\nconst tasksRoutes: Routes = [\r\n  {\r\n    path: 'tasks',\r\n    component: TasksComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TasksComponent,\r\n    EditTaskComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(tasksRoutes),\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class TasksModule { }\r\n"],"sourceRoot":"webpack:///","file":"src_app_components_dashboard_components_tasks_tasks_module_ts.ce1208f6109dc2abc5e1.js"}